(() => {
    var __webpack_modules__ = {
        958: function(module) {
            /*!
 * dist/inputmask.min
 * https://github.com/RobinHerbots/Inputmask
 * Copyright (c) 2010 - 2024 Robin Herbots
 * Licensed under the MIT license
 * Version: 5.0.9
 */
            !function(e, t) {
                if (true) module.exports = t(); else ;
            }("undefined" != typeof self && self, function() {
                return function() {
                    "use strict";
                    var e = {
                        3976: function(e, t) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = void 0;
                            t.default = {
                                _maxTestPos: 500,
                                placeholder: "_",
                                optionalmarker: [ "[", "]" ],
                                quantifiermarker: [ "{", "}" ],
                                groupmarker: [ "(", ")" ],
                                alternatormarker: "|",
                                escapeChar: "\\",
                                mask: null,
                                regex: null,
                                oncomplete: function() {},
                                onincomplete: function() {},
                                oncleared: function() {},
                                repeat: 0,
                                greedy: !1,
                                autoUnmask: !1,
                                removeMaskOnSubmit: !1,
                                clearMaskOnLostFocus: !0,
                                insertMode: !0,
                                insertModeVisual: !0,
                                clearIncomplete: !1,
                                alias: null,
                                onKeyDown: function() {},
                                onBeforeMask: null,
                                onBeforePaste: function(e, t) {
                                    return "function" == typeof t.onBeforeMask ? t.onBeforeMask.call(this, e, t) : e;
                                },
                                onBeforeWrite: null,
                                onUnMask: null,
                                showMaskOnFocus: !0,
                                showMaskOnHover: !0,
                                onKeyValidation: function() {},
                                skipOptionalPartCharacter: " ",
                                numericInput: !1,
                                rightAlign: !1,
                                undoOnEscape: !0,
                                radixPoint: "",
                                _radixDance: !1,
                                groupSeparator: "",
                                keepStatic: null,
                                positionCaretOnTab: !0,
                                tabThrough: !1,
                                supportsInputType: [ "text", "tel", "url", "password", "search" ],
                                isComplete: null,
                                preValidation: null,
                                postValidation: null,
                                staticDefinitionSymbol: void 0,
                                jitMasking: !1,
                                nullable: !0,
                                inputEventOnly: !1,
                                noValuePatching: !1,
                                positionCaretOnClick: "lvp",
                                casing: null,
                                inputmode: "text",
                                importDataAttributes: !0,
                                shiftPositions: !0,
                                usePrototypeDefinitions: !0,
                                validationEventTimeOut: 3e3,
                                substitutes: {}
                            };
                        },
                        7392: function(e, t) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = void 0;
                            t.default = {
                                9: {
                                    validator: "[0-9０-９]",
                                    definitionSymbol: "*"
                                },
                                a: {
                                    validator: "[A-Za-zА-яЁёÀ-ÿµ]",
                                    definitionSymbol: "*"
                                },
                                "*": {
                                    validator: "[0-9０-９A-Za-zА-яЁёÀ-ÿµ]"
                                }
                            };
                        },
                        253: function(e, t) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = function(e, t, n) {
                                if (void 0 === n) return e.__data ? e.__data[t] : null;
                                e.__data = e.__data || {}, e.__data[t] = n;
                            };
                        },
                        3776: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.Event = void 0, t.off = function(e, t) {
                                var n, i;
                                u(this[0]) && e && (n = this[0].eventRegistry, i = this[0], e.split(" ").forEach(function(e) {
                                    var a = o(e.split("."), 2);
                                    (function(e, i) {
                                        var a, r, o = [];
                                        if (e.length > 0) if (void 0 === t) for (a = 0, r = n[e][i].length; a < r; a++) o.push({
                                            ev: e,
                                            namespace: i && i.length > 0 ? i : "global",
                                            handler: n[e][i][a]
                                        }); else o.push({
                                            ev: e,
                                            namespace: i && i.length > 0 ? i : "global",
                                            handler: t
                                        }); else if (i.length > 0) for (var l in n) for (var s in n[l]) if (s === i) if (void 0 === t) for (a = 0, 
                                        r = n[l][s].length; a < r; a++) o.push({
                                            ev: l,
                                            namespace: s,
                                            handler: n[l][s][a]
                                        }); else o.push({
                                            ev: l,
                                            namespace: s,
                                            handler: t
                                        });
                                        return o;
                                    })(a[0], a[1]).forEach(function(e) {
                                        var t = e.ev, a = e.handler;
                                        !function(e, t, a) {
                                            if (e in n == 1) if (i.removeEventListener ? i.removeEventListener(e, a, !1) : i.detachEvent && i.detachEvent("on".concat(e), a), 
                                            "global" === t) for (var r in n[e]) n[e][r].splice(n[e][r].indexOf(a), 1); else n[e][t].splice(n[e][t].indexOf(a), 1);
                                        }(t, e.namespace, a);
                                    });
                                }));
                                return this;
                            }, t.on = function(e, t) {
                                if (u(this[0])) {
                                    var n = this[0].eventRegistry, i = this[0];
                                    e.split(" ").forEach(function(e) {
                                        var a = o(e.split("."), 2), r = a[0], l = a[1];
                                        !function(e, a) {
                                            i.addEventListener ? i.addEventListener(e, t, !1) : i.attachEvent && i.attachEvent("on".concat(e), t), 
                                            n[e] = n[e] || {}, n[e][a] = n[e][a] || [], n[e][a].push(t);
                                        }(r, void 0 === l ? "global" : l);
                                    });
                                }
                                return this;
                            }, t.trigger = function(e) {
                                var t = arguments;
                                if (u(this[0])) for (var n = this[0].eventRegistry, i = this[0], o = "string" == typeof e ? e.split(" ") : [ e.type ], l = 0; l < o.length; l++) {
                                    var s = o[l].split("."), f = s[0], p = s[1] || "global";
                                    if (void 0 !== c && "global" === p) {
                                        var d, h = {
                                            bubbles: !0,
                                            cancelable: !0,
                                            composed: !0,
                                            detail: arguments[1]
                                        };
                                        if (c.createEvent) {
                                            try {
                                                if ("input" === f) h.inputType = "insertText", d = new InputEvent(f, h); else d = new CustomEvent(f, h);
                                            } catch (e) {
                                                (d = c.createEvent("CustomEvent")).initCustomEvent(f, h.bubbles, h.cancelable, h.detail);
                                            }
                                            e.type && (0, a.default)(d, e), i.dispatchEvent(d);
                                        } else (d = c.createEventObject()).eventType = f, d.detail = arguments[1], e.type && (0, 
                                        a.default)(d, e), i.fireEvent("on" + d.eventType, d);
                                    } else if (void 0 !== n[f]) {
                                        arguments[0] = arguments[0].type ? arguments[0] : r.default.Event(arguments[0]), 
                                        arguments[0].detail = arguments.slice(1);
                                        var v = n[f];
                                        ("global" === p ? Object.values(v).flat() : v[p]).forEach(function(e) {
                                            return e.apply(i, t);
                                        });
                                    }
                                }
                                return this;
                            };
                            var i = s(n(9380)), a = s(n(600)), r = s(n(4963));
                            function o(e, t) {
                                return function(e) {
                                    if (Array.isArray(e)) return e;
                                }(e) || function(e, t) {
                                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                    if (null != n) {
                                        var i, a, r, o, l = [], s = !0, c = !1;
                                        try {
                                            if (r = (n = n.call(e)).next, 0 === t) {
                                                if (Object(n) !== n) return;
                                                s = !1;
                                            } else for (;!(s = (i = r.call(n)).done) && (l.push(i.value), l.length !== t); s = !0) ;
                                        } catch (e) {
                                            c = !0, a = e;
                                        } finally {
                                            try {
                                                if (!s && null != n.return && (o = n.return(), Object(o) !== o)) return;
                                            } finally {
                                                if (c) throw a;
                                            }
                                        }
                                        return l;
                                    }
                                }(e, t) || function(e, t) {
                                    if (!e) return;
                                    if ("string" == typeof e) return l(e, t);
                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                    "Object" === n && e.constructor && (n = e.constructor.name);
                                    if ("Map" === n || "Set" === n) return Array.from(e);
                                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return l(e, t);
                                }(e, t) || function() {
                                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                }();
                            }
                            function l(e, t) {
                                (null == t || t > e.length) && (t = e.length);
                                for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
                                return i;
                            }
                            function s(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                };
                            }
                            var c = i.default.document;
                            function u(e) {
                                return e instanceof Element;
                            }
                            var f = t.Event = void 0;
                            "function" == typeof i.default.CustomEvent ? t.Event = f = i.default.CustomEvent : i.default.Event && c && c.createEvent ? (t.Event = f = function(e, t) {
                                t = t || {
                                    bubbles: !1,
                                    cancelable: !1,
                                    composed: !0,
                                    detail: void 0
                                };
                                var n = c.createEvent("CustomEvent");
                                return n.initCustomEvent(e, t.bubbles, t.cancelable, t.detail), n;
                            }, f.prototype = i.default.Event.prototype) : "undefined" != typeof Event && (t.Event = f = Event);
                        },
                        600: function(e, t) {
                            function n(e) {
                                return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, n(e);
                            }
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = function e() {
                                var t, i, a, r, o, l, s = arguments[0] || {}, c = 1, u = arguments.length, f = !1;
                                "boolean" == typeof s && (f = s, s = arguments[c] || {}, c++);
                                "object" !== n(s) && "function" != typeof s && (s = {});
                                for (;c < u; c++) if (null != (t = arguments[c])) for (i in t) a = s[i], s !== (r = t[i]) && (f && r && ("[object Object]" === Object.prototype.toString.call(r) || (o = Array.isArray(r))) ? (o ? (o = !1, 
                                l = a && Array.isArray(a) ? a : []) : l = a && "[object Object]" === Object.prototype.toString.call(a) ? a : {}, 
                                s[i] = e(f, l, r)) : void 0 !== r && (s[i] = r));
                                return s;
                            };
                        },
                        4963: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = void 0;
                            var i = l(n(9380)), a = l(n(253)), r = n(3776), o = l(n(600));
                            function l(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                };
                            }
                            var s = i.default.document;
                            function c(e) {
                                return e instanceof c ? e : this instanceof c ? void (null != e && e !== i.default && (this[0] = e.nodeName ? e : void 0 !== e[0] && e[0].nodeName ? e[0] : s.querySelector(e), 
                                void 0 !== this[0] && null !== this[0] && (this[0].eventRegistry = this[0].eventRegistry || {}))) : new c(e);
                            }
                            c.prototype = {
                                on: r.on,
                                off: r.off,
                                trigger: r.trigger
                            }, c.extend = o.default, c.data = a.default, c.Event = r.Event;
                            t.default = c;
                        },
                        9845: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.mobile = t.iphone = t.ie = void 0;
                            var i, a = (i = n(9380)) && i.__esModule ? i : {
                                default: i
                            };
                            var r = a.default.navigator && a.default.navigator.userAgent || "";
                            t.ie = r.indexOf("MSIE ") > 0 || r.indexOf("Trident/") > 0, t.mobile = a.default.navigator && a.default.navigator.userAgentData && a.default.navigator.userAgentData.mobile || a.default.navigator && a.default.navigator.maxTouchPoints || "ontouchstart" in a.default, 
                            t.iphone = /iphone/i.test(r);
                        },
                        7184: function(e, t) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = function(e) {
                                return e.replace(n, "\\$1");
                            };
                            var n = new RegExp("(\\" + [ "/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^" ].join("|\\") + ")", "gim");
                        },
                        6030: function(e, t, n) {
                            function i(e) {
                                return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, i(e);
                            }
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.EventHandlers = void 0;
                            var a, r = n(9845), o = (a = n(9380)) && a.__esModule ? a : {
                                default: a
                            }, l = n(7760), s = n(2839), c = n(8711), u = n(7215), f = n(4713);
                            function p() {
                                /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ p = function() {
                                    return t;
                                };
                                var e, t = {}, n = Object.prototype, a = n.hasOwnProperty, r = Object.defineProperty || function(e, t, n) {
                                    e[t] = n.value;
                                }, o = "function" == typeof Symbol ? Symbol : {}, l = o.iterator || "@@iterator", s = o.asyncIterator || "@@asyncIterator", c = o.toStringTag || "@@toStringTag";
                                function u(e, t, n) {
                                    return Object.defineProperty(e, t, {
                                        value: n,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }), e[t];
                                }
                                try {
                                    u({}, "");
                                } catch (e) {
                                    u = function(e, t, n) {
                                        return e[t] = n;
                                    };
                                }
                                function f(e, t, n, i) {
                                    var a = t && t.prototype instanceof k ? t : k, o = Object.create(a.prototype), l = new D(i || []);
                                    return r(o, "_invoke", {
                                        value: E(e, n, l)
                                    }), o;
                                }
                                function d(e, t, n) {
                                    try {
                                        return {
                                            type: "normal",
                                            arg: e.call(t, n)
                                        };
                                    } catch (e) {
                                        return {
                                            type: "throw",
                                            arg: e
                                        };
                                    }
                                }
                                t.wrap = f;
                                var h = "suspendedStart", v = "suspendedYield", m = "executing", g = "completed", y = {};
                                function k() {}
                                function b() {}
                                function x() {}
                                var w = {};
                                u(w, l, function() {
                                    return this;
                                });
                                var P = Object.getPrototypeOf, S = P && P(P(L([])));
                                S && S !== n && a.call(S, l) && (w = S);
                                var O = x.prototype = k.prototype = Object.create(w);
                                function _(e) {
                                    [ "next", "throw", "return" ].forEach(function(t) {
                                        u(e, t, function(e) {
                                            return this._invoke(t, e);
                                        });
                                    });
                                }
                                function M(e, t) {
                                    function n(r, o, l, s) {
                                        var c = d(e[r], e, o);
                                        if ("throw" !== c.type) {
                                            var u = c.arg, f = u.value;
                                            return f && "object" == i(f) && a.call(f, "__await") ? t.resolve(f.__await).then(function(e) {
                                                n("next", e, l, s);
                                            }, function(e) {
                                                n("throw", e, l, s);
                                            }) : t.resolve(f).then(function(e) {
                                                u.value = e, l(u);
                                            }, function(e) {
                                                return n("throw", e, l, s);
                                            });
                                        }
                                        s(c.arg);
                                    }
                                    var o;
                                    r(this, "_invoke", {
                                        value: function(e, i) {
                                            function a() {
                                                return new t(function(t, a) {
                                                    n(e, i, t, a);
                                                });
                                            }
                                            return o = o ? o.then(a, a) : a();
                                        }
                                    });
                                }
                                function E(t, n, i) {
                                    var a = h;
                                    return function(r, o) {
                                        if (a === m) throw new Error("Generator is already running");
                                        if (a === g) {
                                            if ("throw" === r) throw o;
                                            return {
                                                value: e,
                                                done: !0
                                            };
                                        }
                                        for (i.method = r, i.arg = o; ;) {
                                            var l = i.delegate;
                                            if (l) {
                                                var s = j(l, i);
                                                if (s) {
                                                    if (s === y) continue;
                                                    return s;
                                                }
                                            }
                                            if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
                                                if (a === h) throw a = g, i.arg;
                                                i.dispatchException(i.arg);
                                            } else "return" === i.method && i.abrupt("return", i.arg);
                                            a = m;
                                            var c = d(t, n, i);
                                            if ("normal" === c.type) {
                                                if (a = i.done ? g : v, c.arg === y) continue;
                                                return {
                                                    value: c.arg,
                                                    done: i.done
                                                };
                                            }
                                            "throw" === c.type && (a = g, i.method = "throw", i.arg = c.arg);
                                        }
                                    };
                                }
                                function j(t, n) {
                                    var i = n.method, a = t.iterator[i];
                                    if (a === e) return n.delegate = null, "throw" === i && t.iterator.return && (n.method = "return", 
                                    n.arg = e, j(t, n), "throw" === n.method) || "return" !== i && (n.method = "throw", 
                                    n.arg = new TypeError("The iterator does not provide a '" + i + "' method")), y;
                                    var r = d(a, t.iterator, n.arg);
                                    if ("throw" === r.type) return n.method = "throw", n.arg = r.arg, n.delegate = null, 
                                    y;
                                    var o = r.arg;
                                    return o ? o.done ? (n[t.resultName] = o.value, n.next = t.nextLoc, "return" !== n.method && (n.method = "next", 
                                    n.arg = e), n.delegate = null, y) : o : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), 
                                    n.delegate = null, y);
                                }
                                function T(e) {
                                    var t = {
                                        tryLoc: e[0]
                                    };
                                    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
                                    this.tryEntries.push(t);
                                }
                                function A(e) {
                                    var t = e.completion || {};
                                    t.type = "normal", delete t.arg, e.completion = t;
                                }
                                function D(e) {
                                    this.tryEntries = [ {
                                        tryLoc: "root"
                                    } ], e.forEach(T, this), this.reset(!0);
                                }
                                function L(t) {
                                    if (t || "" === t) {
                                        var n = t[l];
                                        if (n) return n.call(t);
                                        if ("function" == typeof t.next) return t;
                                        if (!isNaN(t.length)) {
                                            var r = -1, o = function n() {
                                                for (;++r < t.length; ) if (a.call(t, r)) return n.value = t[r], n.done = !1, n;
                                                return n.value = e, n.done = !0, n;
                                            };
                                            return o.next = o;
                                        }
                                    }
                                    throw new TypeError(i(t) + " is not iterable");
                                }
                                return b.prototype = x, r(O, "constructor", {
                                    value: x,
                                    configurable: !0
                                }), r(x, "constructor", {
                                    value: b,
                                    configurable: !0
                                }), b.displayName = u(x, c, "GeneratorFunction"), t.isGeneratorFunction = function(e) {
                                    var t = "function" == typeof e && e.constructor;
                                    return !!t && (t === b || "GeneratorFunction" === (t.displayName || t.name));
                                }, t.mark = function(e) {
                                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, x) : (e.__proto__ = x, u(e, c, "GeneratorFunction")), 
                                    e.prototype = Object.create(O), e;
                                }, t.awrap = function(e) {
                                    return {
                                        __await: e
                                    };
                                }, _(M.prototype), u(M.prototype, s, function() {
                                    return this;
                                }), t.AsyncIterator = M, t.async = function(e, n, i, a, r) {
                                    void 0 === r && (r = Promise);
                                    var o = new M(f(e, n, i, a), r);
                                    return t.isGeneratorFunction(n) ? o : o.next().then(function(e) {
                                        return e.done ? e.value : o.next();
                                    });
                                }, _(O), u(O, c, "Generator"), u(O, l, function() {
                                    return this;
                                }), u(O, "toString", function() {
                                    return "[object Generator]";
                                }), t.keys = function(e) {
                                    var t = Object(e), n = [];
                                    for (var i in t) n.push(i);
                                    return n.reverse(), function e() {
                                        for (;n.length; ) {
                                            var i = n.pop();
                                            if (i in t) return e.value = i, e.done = !1, e;
                                        }
                                        return e.done = !0, e;
                                    };
                                }, t.values = L, D.prototype = {
                                    constructor: D,
                                    reset: function(t) {
                                        if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, 
                                        this.method = "next", this.arg = e, this.tryEntries.forEach(A), !t) for (var n in this) "t" === n.charAt(0) && a.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e);
                                    },
                                    stop: function() {
                                        this.done = !0;
                                        var e = this.tryEntries[0].completion;
                                        if ("throw" === e.type) throw e.arg;
                                        return this.rval;
                                    },
                                    dispatchException: function(t) {
                                        if (this.done) throw t;
                                        var n = this;
                                        function i(i, a) {
                                            return l.type = "throw", l.arg = t, n.next = i, a && (n.method = "next", n.arg = e), 
                                            !!a;
                                        }
                                        for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                                            var o = this.tryEntries[r], l = o.completion;
                                            if ("root" === o.tryLoc) return i("end");
                                            if (o.tryLoc <= this.prev) {
                                                var s = a.call(o, "catchLoc"), c = a.call(o, "finallyLoc");
                                                if (s && c) {
                                                    if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                                                    if (this.prev < o.finallyLoc) return i(o.finallyLoc);
                                                } else if (s) {
                                                    if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                                                } else {
                                                    if (!c) throw new Error("try statement without catch or finally");
                                                    if (this.prev < o.finallyLoc) return i(o.finallyLoc);
                                                }
                                            }
                                        }
                                    },
                                    abrupt: function(e, t) {
                                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                            var i = this.tryEntries[n];
                                            if (i.tryLoc <= this.prev && a.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                                                var r = i;
                                                break;
                                            }
                                        }
                                        r && ("break" === e || "continue" === e) && r.tryLoc <= t && t <= r.finallyLoc && (r = null);
                                        var o = r ? r.completion : {};
                                        return o.type = e, o.arg = t, r ? (this.method = "next", this.next = r.finallyLoc, 
                                        y) : this.complete(o);
                                    },
                                    complete: function(e, t) {
                                        if ("throw" === e.type) throw e.arg;
                                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
                                        this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
                                        y;
                                    },
                                    finish: function(e) {
                                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                                            var n = this.tryEntries[t];
                                            if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), A(n), y;
                                        }
                                    },
                                    catch: function(e) {
                                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                                            var n = this.tryEntries[t];
                                            if (n.tryLoc === e) {
                                                var i = n.completion;
                                                if ("throw" === i.type) {
                                                    var a = i.arg;
                                                    A(n);
                                                }
                                                return a;
                                            }
                                        }
                                        throw new Error("illegal catch attempt");
                                    },
                                    delegateYield: function(t, n, i) {
                                        return this.delegate = {
                                            iterator: L(t),
                                            resultName: n,
                                            nextLoc: i
                                        }, "next" === this.method && (this.arg = e), y;
                                    }
                                }, t;
                            }
                            function d(e, t) {
                                var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                if (!n) {
                                    if (Array.isArray(e) || (n = function(e, t) {
                                        if (!e) return;
                                        if ("string" == typeof e) return h(e, t);
                                        var n = Object.prototype.toString.call(e).slice(8, -1);
                                        "Object" === n && e.constructor && (n = e.constructor.name);
                                        if ("Map" === n || "Set" === n) return Array.from(e);
                                        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return h(e, t);
                                    }(e)) || t && e && "number" == typeof e.length) {
                                        n && (e = n);
                                        var i = 0, a = function() {};
                                        return {
                                            s: a,
                                            n: function() {
                                                return i >= e.length ? {
                                                    done: !0
                                                } : {
                                                    done: !1,
                                                    value: e[i++]
                                                };
                                            },
                                            e: function(e) {
                                                throw e;
                                            },
                                            f: a
                                        };
                                    }
                                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                }
                                var r, o = !0, l = !1;
                                return {
                                    s: function() {
                                        n = n.call(e);
                                    },
                                    n: function() {
                                        var e = n.next();
                                        return o = e.done, e;
                                    },
                                    e: function(e) {
                                        l = !0, r = e;
                                    },
                                    f: function() {
                                        try {
                                            o || null == n.return || n.return();
                                        } finally {
                                            if (l) throw r;
                                        }
                                    }
                                };
                            }
                            function h(e, t) {
                                (null == t || t > e.length) && (t = e.length);
                                for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
                                return i;
                            }
                            function v(e, t, n, i, a, r, o) {
                                try {
                                    var l = e[r](o), s = l.value;
                                } catch (e) {
                                    return void n(e);
                                }
                                l.done ? t(s) : Promise.resolve(s).then(i, a);
                            }
                            var m, g, y = t.EventHandlers = {
                                keyEvent: function(e, t, n, i, a) {
                                    var o = this.inputmask, p = o.opts, d = o.dependencyLib, h = o.maskset, v = this, m = d(v), g = e.key, k = c.caret.call(o, v), b = p.onKeyDown.call(this, e, c.getBuffer.call(o), k, p);
                                    if (void 0 !== b) return b;
                                    if (g === s.keys.Backspace || g === s.keys.Delete || r.iphone && g === s.keys.BACKSPACE_SAFARI || e.ctrlKey && g === s.keys.x && !("oncut" in v)) e.preventDefault(), 
                                    u.handleRemove.call(o, v, g, k), (0, l.writeBuffer)(v, c.getBuffer.call(o, !0), h.p, e, v.inputmask._valueGet() !== c.getBuffer.call(o).join("")); else if (g === s.keys.End || g === s.keys.PageDown) {
                                        e.preventDefault();
                                        var x = c.seekNext.call(o, c.getLastValidPosition.call(o));
                                        c.caret.call(o, v, e.shiftKey ? k.begin : x, x, !0);
                                    } else g === s.keys.Home && !e.shiftKey || g === s.keys.PageUp ? (e.preventDefault(), 
                                    c.caret.call(o, v, 0, e.shiftKey ? k.begin : 0, !0)) : p.undoOnEscape && g === s.keys.Escape && !0 !== e.altKey ? ((0, 
                                    l.checkVal)(v, !0, !1, o.undoValue.split("")), m.trigger("click")) : g !== s.keys.Insert || e.shiftKey || e.ctrlKey || void 0 !== o.userOptions.insertMode ? !0 === p.tabThrough && g === s.keys.Tab ? !0 === e.shiftKey ? (k.end = c.seekPrevious.call(o, k.end, !0), 
                                    !0 === f.getTest.call(o, k.end - 1).match.static && k.end--, k.begin = c.seekPrevious.call(o, k.end, !0), 
                                    k.begin >= 0 && k.end > 0 && (e.preventDefault(), c.caret.call(o, v, k.begin, k.end))) : (k.begin = c.seekNext.call(o, k.begin, !0), 
                                    k.end = c.seekNext.call(o, k.begin, !0), k.end < h.maskLength && k.end--, k.begin <= h.maskLength && (e.preventDefault(), 
                                    c.caret.call(o, v, k.begin, k.end))) : e.shiftKey || (p.insertModeVisual && !1 === p.insertMode ? g === s.keys.ArrowRight ? setTimeout(function() {
                                        var e = c.caret.call(o, v);
                                        c.caret.call(o, v, e.begin);
                                    }, 0) : g === s.keys.ArrowLeft && setTimeout(function() {
                                        var e = c.translatePosition.call(o, v.inputmask.caretPos.begin);
                                        c.translatePosition.call(o, v.inputmask.caretPos.end);
                                        o.isRTL ? c.caret.call(o, v, e + (e === h.maskLength ? 0 : 1)) : c.caret.call(o, v, e - (0 === e ? 0 : 1));
                                    }, 0) : void 0 === o.keyEventHook || o.keyEventHook(e)) : u.isSelection.call(o, k) ? p.insertMode = !p.insertMode : (p.insertMode = !p.insertMode, 
                                    c.caret.call(o, v, k.begin, k.begin));
                                    return o.isComposing = g == s.keys.Process || g == s.keys.Unidentified, o.ignorable = g.length > 1 && !("textarea" === v.tagName.toLowerCase() && g == s.keys.Enter), 
                                    y.keypressEvent.call(this, e, t, n, i, a);
                                },
                                keypressEvent: function(e, t, n, i, a) {
                                    var r = this.inputmask || this, o = r.opts, f = r.dependencyLib, p = r.maskset, d = r.el, h = f(d), v = e.key;
                                    if (!0 === t || e.ctrlKey && e.altKey && !r.ignorable || !(e.ctrlKey || e.metaKey || r.ignorable)) {
                                        if (v) {
                                            var m, g = t ? {
                                                begin: a,
                                                end: a
                                            } : c.caret.call(r, d);
                                            t || (v = o.substitutes[v] || v), p.writeOutBuffer = !0;
                                            var y = u.isValid.call(r, g, v, i, void 0, void 0, void 0, t);
                                            if (!1 !== y && (c.resetMaskSet.call(r, !0), m = void 0 !== y.caret ? y.caret : c.seekNext.call(r, y.pos.begin ? y.pos.begin : y.pos), 
                                            p.p = m), m = o.numericInput && void 0 === y.caret ? c.seekPrevious.call(r, m) : m, 
                                            !1 !== n && (setTimeout(function() {
                                                o.onKeyValidation.call(d, v, y);
                                            }, 0), p.writeOutBuffer && !1 !== y)) {
                                                var k = c.getBuffer.call(r);
                                                (0, l.writeBuffer)(d, k, m, e, !0 !== t);
                                            }
                                            if (e.preventDefault(), t) return !1 !== y && (y.forwardPosition = m), y;
                                        }
                                    } else v === s.keys.Enter && r.undoValue !== r._valueGet(!0) && (r.undoValue = r._valueGet(!0), 
                                    setTimeout(function() {
                                        h.trigger("change");
                                    }, 0));
                                },
                                pasteEvent: (m = p().mark(function e(t) {
                                    var n, i, a, r, s, u;
                                    return p().wrap(function(e) {
                                        for (;;) switch (e.prev = e.next) {
                                          case 0:
                                            n = function(e, n, i, a, o) {
                                                var s = c.caret.call(e, n, void 0, void 0, !0), u = i.substr(0, s.begin), f = i.substr(s.end, i.length);
                                                if (u == (e.isRTL ? c.getBufferTemplate.call(e).slice().reverse() : c.getBufferTemplate.call(e)).slice(0, s.begin).join("") && (u = ""), 
                                                f == (e.isRTL ? c.getBufferTemplate.call(e).slice().reverse() : c.getBufferTemplate.call(e)).slice(s.end).join("") && (f = ""), 
                                                a = u + a + f, e.isRTL && !0 !== r.numericInput) {
                                                    a = a.split("");
                                                    var p, h = d(c.getBufferTemplate.call(e));
                                                    try {
                                                        for (h.s(); !(p = h.n()).done; ) {
                                                            var v = p.value;
                                                            a[0] === v && a.shift();
                                                        }
                                                    } catch (e) {
                                                        h.e(e);
                                                    } finally {
                                                        h.f();
                                                    }
                                                    a = a.reverse().join("");
                                                }
                                                var m = a;
                                                if ("function" == typeof o) {
                                                    if (!1 === (m = o.call(e, m, r))) return !1;
                                                    m || (m = i);
                                                }
                                                (0, l.checkVal)(n, !0, !1, m.toString().split(""), t);
                                            }, i = this, a = this.inputmask, r = a.opts, s = a._valueGet(!0), a.skipInputEvent = !0, 
                                            t.clipboardData && t.clipboardData.getData ? u = t.clipboardData.getData("text/plain") : o.default.clipboardData && o.default.clipboardData.getData && (u = o.default.clipboardData.getData("Text")), 
                                            n(a, i, s, u, r.onBeforePaste), t.preventDefault();

                                          case 7:
                                          case "end":
                                            return e.stop();
                                        }
                                    }, e, this);
                                }), g = function() {
                                    var e = this, t = arguments;
                                    return new Promise(function(n, i) {
                                        var a = m.apply(e, t);
                                        function r(e) {
                                            v(a, n, i, r, o, "next", e);
                                        }
                                        function o(e) {
                                            v(a, n, i, r, o, "throw", e);
                                        }
                                        r(void 0);
                                    });
                                }, function(e) {
                                    return g.apply(this, arguments);
                                }),
                                inputFallBackEvent: function(e) {
                                    var t = this.inputmask, n = t.opts, i = t.dependencyLib;
                                    var a, o = this, u = o.inputmask._valueGet(!0), p = (t.isRTL ? c.getBuffer.call(t).slice().reverse() : c.getBuffer.call(t)).join(""), d = c.caret.call(t, o, void 0, void 0, !0);
                                    if (p !== u) {
                                        if (a = function(e, i, a) {
                                            for (var r, o, l, s = e.substr(0, a.begin).split(""), u = e.substr(a.begin).split(""), p = i.substr(0, a.begin).split(""), d = i.substr(a.begin).split(""), h = s.length >= p.length ? s.length : p.length, v = u.length >= d.length ? u.length : d.length, m = "", g = [], y = "~"; s.length < h; ) s.push(y);
                                            for (;p.length < h; ) p.push(y);
                                            for (;u.length < v; ) u.unshift(y);
                                            for (;d.length < v; ) d.unshift(y);
                                            var k = s.concat(u), b = p.concat(d);
                                            for (o = 0, r = k.length; o < r; o++) switch (l = f.getPlaceholder.call(t, c.translatePosition.call(t, o)), 
                                            m) {
                                              case "insertText":
                                                b[o - 1] === k[o] && a.begin == k.length - 1 && g.push(k[o]), o = r;
                                                break;

                                              case "insertReplacementText":
                                              case "deleteContentBackward":
                                                k[o] === y ? a.end++ : o = r;
                                                break;

                                              default:
                                                k[o] !== b[o] && (k[o + 1] !== y && k[o + 1] !== l && void 0 !== k[o + 1] || (b[o] !== l || b[o + 1] !== y) && b[o] !== y ? b[o + 1] === y && b[o] === k[o + 1] ? (m = "insertText", 
                                                g.push(k[o]), a.begin--, a.end--) : k[o] !== l && k[o] !== y && (k[o + 1] === y || b[o] !== k[o] && b[o + 1] === k[o + 1]) ? (m = "insertReplacementText", 
                                                g.push(k[o]), a.begin--) : k[o] === y ? (m = "deleteContentBackward", (c.isMask.call(t, c.translatePosition.call(t, o), !0) || b[o] === n.radixPoint) && a.end++) : o = r : (m = "insertText", 
                                                g.push(k[o]), a.begin--, a.end--));
                                            }
                                            return {
                                                action: m,
                                                data: g,
                                                caret: a
                                            };
                                        }(u, p, d), (o.inputmask.shadowRoot || o.ownerDocument).activeElement !== o && o.focus(), 
                                        (0, l.writeBuffer)(o, c.getBuffer.call(t)), c.caret.call(t, o, d.begin, d.end, !0), 
                                        !r.mobile && t.skipNextInsert && "insertText" === e.inputType && "insertText" === a.action && t.isComposing) return !1;
                                        switch ("insertCompositionText" === e.inputType && "insertText" === a.action && t.isComposing ? t.skipNextInsert = !0 : t.skipNextInsert = !1, 
                                        a.action) {
                                          case "insertText":
                                          case "insertReplacementText":
                                            a.data.forEach(function(e, n) {
                                                var a = new i.Event("keypress");
                                                a.key = e, t.ignorable = !1, y.keypressEvent.call(o, a);
                                            }), setTimeout(function() {
                                                t.$el.trigger("keyup");
                                            }, 0);
                                            break;

                                          case "deleteContentBackward":
                                            var h = new i.Event("keydown");
                                            h.key = s.keys.Backspace, y.keyEvent.call(o, h);
                                            break;

                                          default:
                                            (0, l.applyInputValue)(o, u), c.caret.call(t, o, d.begin, d.end, !0);
                                        }
                                        e.preventDefault();
                                    }
                                },
                                setValueEvent: function(e) {
                                    var t = this.inputmask, n = t.dependencyLib, i = this, a = e && e.detail ? e.detail[0] : arguments[1];
                                    void 0 === a && (a = i.inputmask._valueGet(!0)), (0, l.applyInputValue)(i, a, new n.Event("input")), 
                                    (e.detail && void 0 !== e.detail[1] || void 0 !== arguments[2]) && c.caret.call(t, i, e.detail ? e.detail[1] : arguments[2]);
                                },
                                focusEvent: function(e) {
                                    var t = this.inputmask, n = t.opts, i = t && t._valueGet();
                                    n.showMaskOnFocus && i !== c.getBuffer.call(t).join("") && (0, l.writeBuffer)(this, c.getBuffer.call(t), c.seekNext.call(t, c.getLastValidPosition.call(t))), 
                                    !0 !== n.positionCaretOnTab || !1 !== t.mouseEnter || u.isComplete.call(t, c.getBuffer.call(t)) && -1 !== c.getLastValidPosition.call(t) || y.clickEvent.apply(this, [ e, !0 ]), 
                                    t.undoValue = t && t._valueGet(!0);
                                },
                                invalidEvent: function(e) {
                                    this.inputmask.validationEvent = !0;
                                },
                                mouseleaveEvent: function() {
                                    var e = this.inputmask, t = e.opts, n = this;
                                    e.mouseEnter = !1, t.clearMaskOnLostFocus && (n.inputmask.shadowRoot || n.ownerDocument).activeElement !== n && (0, 
                                    l.HandleNativePlaceholder)(n, e.originalPlaceholder);
                                },
                                clickEvent: function(e, t) {
                                    var n = this.inputmask;
                                    n.clicked++;
                                    var i = this;
                                    if ((i.inputmask.shadowRoot || i.ownerDocument).activeElement === i) {
                                        var a = c.determineNewCaretPosition.call(n, c.caret.call(n, i), t);
                                        void 0 !== a && c.caret.call(n, i, a);
                                    }
                                },
                                cutEvent: function(e) {
                                    var t = this.inputmask, n = t.maskset, i = this, a = c.caret.call(t, i), r = t.isRTL ? c.getBuffer.call(t).slice(a.end, a.begin) : c.getBuffer.call(t).slice(a.begin, a.end), f = t.isRTL ? r.reverse().join("") : r.join("");
                                    o.default.navigator && o.default.navigator.clipboard ? o.default.navigator.clipboard.writeText(f) : o.default.clipboardData && o.default.clipboardData.getData && o.default.clipboardData.setData("Text", f), 
                                    u.handleRemove.call(t, i, s.keys.Delete, a), (0, l.writeBuffer)(i, c.getBuffer.call(t), n.p, e, t.undoValue !== t._valueGet(!0));
                                },
                                blurEvent: function(e) {
                                    var t = this.inputmask, n = t.opts, i = t.dependencyLib;
                                    t.clicked = 0;
                                    var a = i(this), r = this;
                                    if (r.inputmask) {
                                        (0, l.HandleNativePlaceholder)(r, t.originalPlaceholder);
                                        var o = r.inputmask._valueGet(), s = c.getBuffer.call(t).slice();
                                        "" !== o && (n.clearMaskOnLostFocus && (-1 === c.getLastValidPosition.call(t) && o === c.getBufferTemplate.call(t).join("") ? s = [] : l.clearOptionalTail.call(t, s)), 
                                        !1 === u.isComplete.call(t, s) && (setTimeout(function() {
                                            a.trigger("incomplete");
                                        }, 0), n.clearIncomplete && (c.resetMaskSet.call(t, !1), s = n.clearMaskOnLostFocus ? [] : c.getBufferTemplate.call(t).slice())), 
                                        (0, l.writeBuffer)(r, s, void 0, e)), o = t._valueGet(!0), t.undoValue !== o && ("" != o || t.undoValue != c.getBufferTemplate.call(t).join("") || t.undoValue == c.getBufferTemplate.call(t).join("") && t.maskset.validPositions.length > 0) && (t.undoValue = o, 
                                        a.trigger("change"));
                                    }
                                },
                                mouseenterEvent: function() {
                                    var e = this.inputmask, t = e.opts.showMaskOnHover, n = this;
                                    if (e.mouseEnter = !0, (n.inputmask.shadowRoot || n.ownerDocument).activeElement !== n) {
                                        var i = (e.isRTL ? c.getBufferTemplate.call(e).slice().reverse() : c.getBufferTemplate.call(e)).join("");
                                        t && (0, l.HandleNativePlaceholder)(n, i);
                                    }
                                },
                                submitEvent: function() {
                                    var e = this.inputmask, t = e.opts;
                                    e.undoValue !== e._valueGet(!0) && e.$el.trigger("change"), -1 === c.getLastValidPosition.call(e) && e._valueGet && e._valueGet() === c.getBufferTemplate.call(e).join("") && e._valueSet(""), 
                                    t.clearIncomplete && !1 === u.isComplete.call(e, c.getBuffer.call(e)) && e._valueSet(""), 
                                    t.removeMaskOnSubmit && (e._valueSet(e.unmaskedvalue(), !0), setTimeout(function() {
                                        (0, l.writeBuffer)(e.el, c.getBuffer.call(e));
                                    }, 0));
                                },
                                resetEvent: function() {
                                    var e = this.inputmask;
                                    e.refreshValue = !0, setTimeout(function() {
                                        (0, l.applyInputValue)(e.el, e._valueGet(!0));
                                    }, 0);
                                }
                            };
                        },
                        9716: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.EventRuler = void 0;
                            var i, a = n(7760), r = (i = n(2394)) && i.__esModule ? i : {
                                default: i
                            }, o = n(2839), l = n(8711);
                            t.EventRuler = {
                                on: function(e, t, n) {
                                    var i = e.inputmask.dependencyLib, s = function(t) {
                                        t.originalEvent && (t = t.originalEvent || t, arguments[0] = t);
                                        var s, c = this, u = c.inputmask, f = u ? u.opts : void 0;
                                        if (void 0 === u && "FORM" !== this.nodeName) {
                                            var p = i.data(c, "_inputmask_opts");
                                            i(c).off(), p && new r.default(p).mask(c);
                                        } else {
                                            if ([ "submit", "reset", "setvalue" ].includes(t.type) || "FORM" === this.nodeName || !(c.disabled || c.readOnly && !("keydown" === t.type && t.ctrlKey && t.key === o.keys.c || !1 === f.tabThrough && t.key === o.keys.Tab))) {
                                                switch (t.type) {
                                                  case "input":
                                                    if (!0 === u.skipInputEvent) return u.skipInputEvent = !1, t.preventDefault();
                                                    break;

                                                  case "click":
                                                  case "focus":
                                                    return u.validationEvent ? (u.validationEvent = !1, e.blur(), (0, a.HandleNativePlaceholder)(e, (u.isRTL ? l.getBufferTemplate.call(u).slice().reverse() : l.getBufferTemplate.call(u)).join("")), 
                                                    setTimeout(function() {
                                                        e.focus();
                                                    }, f.validationEventTimeOut), !1) : (s = arguments, void setTimeout(function() {
                                                        e.inputmask && n.apply(c, s);
                                                    }, 0));
                                                }
                                                var d = n.apply(c, arguments);
                                                return !1 === d && (t.preventDefault(), t.stopPropagation()), d;
                                            }
                                            t.preventDefault();
                                        }
                                    };
                                    [ "submit", "reset" ].includes(t) ? (s = s.bind(e), null !== e.form && i(e.form).on(t, s)) : i(e).on(t, s), 
                                    e.inputmask.events[t] = e.inputmask.events[t] || [], e.inputmask.events[t].push(s);
                                },
                                off: function(e, t) {
                                    if (e.inputmask && e.inputmask.events) {
                                        var n = e.inputmask.dependencyLib, i = e.inputmask.events;
                                        for (var a in t && ((i = [])[t] = e.inputmask.events[t]), i) {
                                            for (var r = i[a]; r.length > 0; ) {
                                                var o = r.pop();
                                                [ "submit", "reset" ].includes(a) ? null !== e.form && n(e.form).off(a, o) : n(e).off(a, o);
                                            }
                                            delete e.inputmask.events[a];
                                        }
                                    }
                                }
                            };
                        },
                        219: function(e, t, n) {
                            var i = p(n(7184)), a = p(n(2394)), r = n(2839), o = n(8711), l = n(4713);
                            function s(e, t) {
                                return function(e) {
                                    if (Array.isArray(e)) return e;
                                }(e) || function(e, t) {
                                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                    if (null != n) {
                                        var i, a, r, o, l = [], s = !0, c = !1;
                                        try {
                                            if (r = (n = n.call(e)).next, 0 === t) {
                                                if (Object(n) !== n) return;
                                                s = !1;
                                            } else for (;!(s = (i = r.call(n)).done) && (l.push(i.value), l.length !== t); s = !0) ;
                                        } catch (e) {
                                            c = !0, a = e;
                                        } finally {
                                            try {
                                                if (!s && null != n.return && (o = n.return(), Object(o) !== o)) return;
                                            } finally {
                                                if (c) throw a;
                                            }
                                        }
                                        return l;
                                    }
                                }(e, t) || function(e, t) {
                                    if (!e) return;
                                    if ("string" == typeof e) return c(e, t);
                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                    "Object" === n && e.constructor && (n = e.constructor.name);
                                    if ("Map" === n || "Set" === n) return Array.from(e);
                                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return c(e, t);
                                }(e, t) || function() {
                                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                }();
                            }
                            function c(e, t) {
                                (null == t || t > e.length) && (t = e.length);
                                for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
                                return i;
                            }
                            function u(e) {
                                return u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, u(e);
                            }
                            function f(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var i = t[n];
                                    i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), 
                                    Object.defineProperty(e, (a = i.key, r = void 0, r = function(e, t) {
                                        if ("object" !== u(e) || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var i = n.call(e, t || "default");
                                            if ("object" !== u(i)) return i;
                                            throw new TypeError("@@toPrimitive must return a primitive value.");
                                        }
                                        return ("string" === t ? String : Number)(e);
                                    }(a, "string"), "symbol" === u(r) ? r : String(r)), i);
                                }
                                var a, r;
                            }
                            function p(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                };
                            }
                            n(1313);
                            var d = a.default.dependencyLib, h = function() {
                                function e(t, n, i, a) {
                                    !function(e, t) {
                                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                                    }(this, e), this.mask = t, this.format = n, this.opts = i, this.inputmask = a, this._date = new Date(1, 0, 1), 
                                    this.initDateObject(t, this.opts, this.inputmask);
                                }
                                var t, n, i;
                                return t = e, (n = [ {
                                    key: "date",
                                    get: function() {
                                        return void 0 === this._date && (this._date = new Date(1, 0, 1), this.initDateObject(void 0, this.opts, this.inputmask)), 
                                        this._date;
                                    }
                                }, {
                                    key: "initDateObject",
                                    value: function(e, t, n) {
                                        var i;
                                        for (P(t).lastIndex = 0; i = P(t).exec(this.format); ) {
                                            var a = /\d+$/.exec(i[0]), r = a ? i[0][0] + "x" : i[0], o = void 0;
                                            if (void 0 !== e) {
                                                if (a) {
                                                    var s = P(t).lastIndex, c = j.call(n, i.index, t, n && n.maskset);
                                                    P(t).lastIndex = s, o = e.slice(0, e.indexOf(c.nextMatch[0]));
                                                } else {
                                                    for (var u = i[0][0], f = i.index; n && (t.placeholder[l.getTest.call(n, f).match.placeholder] || l.getTest.call(n, f).match.placeholder) === u; ) f++;
                                                    var p = f - i.index;
                                                    o = e.slice(0, p || y[r] && y[r][4] || r.length);
                                                }
                                                e = e.slice(o.length);
                                            }
                                            Object.prototype.hasOwnProperty.call(y, r) && this.setValue(this, o, r, y[r][2], y[r][1]);
                                        }
                                    }
                                }, {
                                    key: "setValue",
                                    value: function(e, t, n, i, a) {
                                        if (void 0 !== t) switch (i) {
                                          case "ampm":
                                            e[i] = t, e["raw" + i] = t.replace(/\s/g, "_");
                                            break;

                                          case "month":
                                            if ("mmm" === n || "mmmm" === n) {
                                                e[i] = _("mmm" === n ? m.monthNames.slice(0, 12).findIndex(function(e) {
                                                    return t.toLowerCase() === e.toLowerCase();
                                                }) + 1 : m.monthNames.slice(12, 24).findIndex(function(e) {
                                                    return t.toLowerCase() === e.toLowerCase();
                                                }) + 1, 2), e[i] = "00" === e[i] ? "" : e[i].toString(), e["raw" + i] = e[i];
                                                break;
                                            }

                                          default:
                                            e[i] = t.replace(/[^0-9]/g, "0"), e["raw" + i] = t.replace(/\s/g, "_");
                                        }
                                        if (void 0 !== a) {
                                            var r = e[i];
                                            ("day" === i && 29 === parseInt(r) || "month" === i && 2 === parseInt(r)) && (29 !== parseInt(e.day) || 2 !== parseInt(e.month) || "" !== e.year && void 0 !== e.year || e._date.setFullYear(2012, 1, 29)), 
                                            "day" === i && (g = !0, 0 === parseInt(r) && (r = 1)), "month" === i && (g = !0), 
                                            "year" === i && (g = !0, r.length < y[n][4] && (r = _(r, y[n][4], !0))), ("" !== r && !isNaN(r) || "ampm" === i) && a.call(e._date, r);
                                        }
                                    }
                                }, {
                                    key: "reset",
                                    value: function() {
                                        this._date = new Date(1, 0, 1);
                                    }
                                }, {
                                    key: "reInit",
                                    value: function() {
                                        this._date = void 0, this.date;
                                    }
                                } ]) && f(t.prototype, n), i && f(t, i), Object.defineProperty(t, "prototype", {
                                    writable: !1
                                }), e;
                            }(), v = (new Date).getFullYear(), m = a.default.prototype.i18n, g = !1, y = {
                                d: [ "[1-9]|[12][0-9]|3[01]", Date.prototype.setDate, "day", Date.prototype.getDate ],
                                dd: [ "0[1-9]|[12][0-9]|3[01]", Date.prototype.setDate, "day", function() {
                                    return _(Date.prototype.getDate.call(this), 2);
                                } ],
                                ddd: [ "" ],
                                dddd: [ "" ],
                                m: [ "[1-9]|1[012]", function(e) {
                                    var t = e ? parseInt(e) : 0;
                                    return t > 0 && t--, Date.prototype.setMonth.call(this, t);
                                }, "month", function() {
                                    return Date.prototype.getMonth.call(this) + 1;
                                } ],
                                mm: [ "0[1-9]|1[012]", function(e) {
                                    var t = e ? parseInt(e) : 0;
                                    return t > 0 && t--, Date.prototype.setMonth.call(this, t);
                                }, "month", function() {
                                    return _(Date.prototype.getMonth.call(this) + 1, 2);
                                } ],
                                mmm: [ m.monthNames.slice(0, 12).join("|"), function(e) {
                                    var t = m.monthNames.slice(0, 12).findIndex(function(t) {
                                        return e.toLowerCase() === t.toLowerCase();
                                    });
                                    return -1 !== t && Date.prototype.setMonth.call(this, t);
                                }, "month", function() {
                                    return m.monthNames.slice(0, 12)[Date.prototype.getMonth.call(this)];
                                } ],
                                mmmm: [ m.monthNames.slice(12, 24).join("|"), function(e) {
                                    var t = m.monthNames.slice(12, 24).findIndex(function(t) {
                                        return e.toLowerCase() === t.toLowerCase();
                                    });
                                    return -1 !== t && Date.prototype.setMonth.call(this, t);
                                }, "month", function() {
                                    return m.monthNames.slice(12, 24)[Date.prototype.getMonth.call(this)];
                                } ],
                                yy: [ "[0-9]{2}", function(e) {
                                    var t = (new Date).getFullYear().toString().slice(0, 2);
                                    Date.prototype.setFullYear.call(this, "".concat(t).concat(e));
                                }, "year", function() {
                                    return _(Date.prototype.getFullYear.call(this), 2);
                                }, 2 ],
                                yyyy: [ "[0-9]{4}", Date.prototype.setFullYear, "year", function() {
                                    return _(Date.prototype.getFullYear.call(this), 4);
                                }, 4 ],
                                h: [ "[1-9]|1[0-2]", Date.prototype.setHours, "hours", Date.prototype.getHours ],
                                hh: [ "0[1-9]|1[0-2]", Date.prototype.setHours, "hours", function() {
                                    return _(Date.prototype.getHours.call(this), 2);
                                } ],
                                hx: [ function(e) {
                                    return "[0-9]{".concat(e, "}");
                                }, Date.prototype.setHours, "hours", function(e) {
                                    return Date.prototype.getHours;
                                } ],
                                H: [ "1?[0-9]|2[0-3]", Date.prototype.setHours, "hours", Date.prototype.getHours ],
                                HH: [ "0[0-9]|1[0-9]|2[0-3]", Date.prototype.setHours, "hours", function() {
                                    return _(Date.prototype.getHours.call(this), 2);
                                } ],
                                Hx: [ function(e) {
                                    return "[0-9]{".concat(e, "}");
                                }, Date.prototype.setHours, "hours", function(e) {
                                    return function() {
                                        return _(Date.prototype.getHours.call(this), e);
                                    };
                                } ],
                                M: [ "[1-5]?[0-9]", Date.prototype.setMinutes, "minutes", Date.prototype.getMinutes ],
                                MM: [ "0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]", Date.prototype.setMinutes, "minutes", function() {
                                    return _(Date.prototype.getMinutes.call(this), 2);
                                } ],
                                s: [ "[1-5]?[0-9]", Date.prototype.setSeconds, "seconds", Date.prototype.getSeconds ],
                                ss: [ "0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]", Date.prototype.setSeconds, "seconds", function() {
                                    return _(Date.prototype.getSeconds.call(this), 2);
                                } ],
                                l: [ "[0-9]{3}", Date.prototype.setMilliseconds, "milliseconds", function() {
                                    return _(Date.prototype.getMilliseconds.call(this), 3);
                                }, 3 ],
                                L: [ "[0-9]{2}", Date.prototype.setMilliseconds, "milliseconds", function() {
                                    return _(Date.prototype.getMilliseconds.call(this), 2);
                                }, 2 ],
                                t: [ "[ap]", b, "ampm", x, 1 ],
                                tt: [ "[ap]m", b, "ampm", x, 2 ],
                                T: [ "[AP]", b, "ampm", x, 1 ],
                                TT: [ "[AP]M", b, "ampm", x, 2 ],
                                Z: [ ".*", void 0, "Z", function() {
                                    var e = this.toString().match(/\((.+)\)/)[1];
                                    e.includes(" ") && (e = (e = e.replace("-", " ").toUpperCase()).split(" ").map(function(e) {
                                        return s(e, 1)[0];
                                    }).join(""));
                                    return e;
                                } ],
                                o: [ "" ],
                                S: [ "" ]
                            }, k = {
                                isoDate: "yyyy-mm-dd",
                                isoTime: "HH:MM:ss",
                                isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
                                isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
                            };
                            function b(e) {
                                var t = this.getHours();
                                e.toLowerCase().includes("p") ? this.setHours(t + 12) : e.toLowerCase().includes("a") && t >= 12 && this.setHours(t - 12);
                            }
                            function x() {
                                var e = this.getHours();
                                return (e = e || 12) >= 12 ? "PM" : "AM";
                            }
                            function w(e) {
                                var t = /\d+$/.exec(e[0]);
                                if (t && void 0 !== t[0]) {
                                    var n = y[e[0][0] + "x"].slice("");
                                    return n[0] = n[0](t[0]), n[3] = n[3](t[0]), n;
                                }
                                if (y[e[0]]) return y[e[0]];
                            }
                            function P(e) {
                                if (!e.tokenizer) {
                                    var t = [], n = [];
                                    for (var i in y) if (/\.*x$/.test(i)) {
                                        var a = i[0] + "\\d+";
                                        -1 === n.indexOf(a) && n.push(a);
                                    } else -1 === t.indexOf(i[0]) && t.push(i[0]);
                                    e.tokenizer = "(" + (n.length > 0 ? n.join("|") + "|" : "") + t.join("+|") + ")+?|.", 
                                    e.tokenizer = new RegExp(e.tokenizer, "g");
                                }
                                return e.tokenizer;
                            }
                            function S(e, t, n) {
                                if (!g) return !0;
                                if (void 0 === e.rawday || !isFinite(e.rawday) && new Date(e.date.getFullYear(), isFinite(e.rawmonth) ? e.month : e.date.getMonth() + 1, 0).getDate() >= e.day || "29" == e.day && (!isFinite(e.rawyear) || void 0 === e.rawyear || "" === e.rawyear) || new Date(e.date.getFullYear(), isFinite(e.rawmonth) ? e.month : e.date.getMonth() + 1, 0).getDate() >= e.day) return t;
                                if ("29" == e.day) {
                                    var i = j.call(this, t.pos, n, this.maskset);
                                    if (i.targetMatch && "yyyy" === i.targetMatch[0] && t.pos - i.targetMatchIndex == 2) return t.remove = t.pos + 1, 
                                    t;
                                } else if (2 == e.date.getMonth() && "30" == e.day && void 0 !== t.c) return e.day = "03", 
                                e.date.setDate(3), e.date.setMonth(1), t.insert = [ {
                                    pos: t.pos,
                                    c: "0"
                                }, {
                                    pos: t.pos + 1,
                                    c: t.c
                                } ], t.caret = o.seekNext.call(this, t.pos + 1), t;
                                return !1;
                            }
                            function O(e, t, n, a) {
                                var r, o, l = "", s = 0, c = {};
                                for (P(n).lastIndex = 0; r = P(n).exec(e); ) {
                                    if (void 0 === t) if (o = w(r)) l += "(" + o[0] + ")", n.placeholder && "" !== n.placeholder ? (c[s] = n.placeholder[r.index % n.placeholder.length], 
                                    c[n.placeholder[r.index % n.placeholder.length]] = r[0].charAt(0)) : c[s] = r[0].charAt(0); else switch (r[0]) {
                                      case "[":
                                        l += "(";
                                        break;

                                      case "]":
                                        l += ")?";
                                        break;

                                      default:
                                        l += (0, i.default)(r[0]), c[s] = r[0].charAt(0);
                                    } else if (o = w(r)) if (!0 !== a && o[3]) l += o[3].call(t.date); else o[2] ? l += t["raw" + o[2]] : l += r[0]; else l += r[0];
                                    s++;
                                }
                                return void 0 === t && (n.placeholder = c), l;
                            }
                            function _(e, t, n) {
                                for (e = String(e), t = t || 2; e.length < t; ) e = n ? e + "0" : "0" + e;
                                return e;
                            }
                            function M(e, t, n) {
                                return "string" == typeof e ? new h(e, t, n, this) : e && "object" === u(e) && Object.prototype.hasOwnProperty.call(e, "date") ? e : void 0;
                            }
                            function E(e, t) {
                                return O(t.inputFormat, {
                                    date: e
                                }, t);
                            }
                            function j(e, t, n) {
                                var i, a, r = this, o = n && n.tests[e] ? t.placeholder[n.tests[e][0].match.placeholder] || n.tests[e][0].match.placeholder : "", s = 0, c = 0;
                                for (P(t).lastIndex = 0; a = P(t).exec(t.inputFormat); ) {
                                    var u = /\d+$/.exec(a[0]);
                                    if (u) c = parseInt(u[0]); else {
                                        for (var f = a[0][0], p = s; r && (t.placeholder[l.getTest.call(r, p).match.placeholder] || l.getTest.call(r, p).match.placeholder) === f; ) p++;
                                        0 === (c = p - s) && (c = a[0].length);
                                    }
                                    if (s += c, -1 != a[0].indexOf(o) || s >= e + 1) {
                                        i = a, a = P(t).exec(t.inputFormat);
                                        break;
                                    }
                                }
                                return {
                                    targetMatchIndex: s - c,
                                    nextMatch: a,
                                    targetMatch: i
                                };
                            }
                            a.default.extendAliases({
                                datetime: {
                                    mask: function(e) {
                                        return e.numericInput = !1, y.S = m.ordinalSuffix.join("|"), e.inputFormat = k[e.inputFormat] || e.inputFormat, 
                                        e.displayFormat = k[e.displayFormat] || e.displayFormat || e.inputFormat, e.outputFormat = k[e.outputFormat] || e.outputFormat || e.inputFormat, 
                                        e.regex = O(e.inputFormat, void 0, e), e.min = M(e.min, e.inputFormat, e), e.max = M(e.max, e.inputFormat, e), 
                                        null;
                                    },
                                    placeholder: "",
                                    inputFormat: "isoDateTime",
                                    displayFormat: null,
                                    outputFormat: null,
                                    min: null,
                                    max: null,
                                    skipOptionalPartCharacter: "",
                                    preValidation: function(e, t, n, i, a, r, o, l) {
                                        if (l) return !0;
                                        if (isNaN(n) && e[t] !== n) {
                                            var s = j.call(this, t, a, r);
                                            if (s.nextMatch && s.nextMatch[0] === n && s.targetMatch[0].length > 1) {
                                                var c = w(s.targetMatch)[0];
                                                if (new RegExp(c).test("0" + e[t - 1])) return e[t] = e[t - 1], e[t - 1] = "0", 
                                                {
                                                    fuzzy: !0,
                                                    buffer: e,
                                                    refreshFromBuffer: {
                                                        start: t - 1,
                                                        end: t + 1
                                                    },
                                                    pos: t + 1
                                                };
                                            }
                                        }
                                        return !0;
                                    },
                                    postValidation: function(e, t, n, i, a, r, o, s) {
                                        var c, u, f = this;
                                        if (o) return !0;
                                        if (!1 === i && (((c = j.call(f, t + 1, a, r)).targetMatch && c.targetMatchIndex === t && c.targetMatch[0].length > 1 && void 0 !== y[c.targetMatch[0]] || (c = j.call(f, t + 2, a, r)).targetMatch && c.targetMatchIndex === t + 1 && c.targetMatch[0].length > 1 && void 0 !== y[c.targetMatch[0]]) && (u = w(c.targetMatch)[0]), 
                                        void 0 !== u && (void 0 !== r.validPositions[t + 1] && new RegExp(u).test(n + "0") ? (e[t] = n, 
                                        e[t + 1] = "0", i = {
                                            pos: t + 2,
                                            caret: t
                                        }) : new RegExp(u).test("0" + n) && (e[t] = "0", e[t + 1] = n, i = {
                                            pos: t + 2
                                        })), !1 === i)) return i;
                                        if (i.fuzzy && (e = i.buffer, t = i.pos), (c = j.call(f, t, a, r)).targetMatch && c.targetMatch[0] && void 0 !== y[c.targetMatch[0]]) {
                                            var p = w(c.targetMatch);
                                            u = p[0];
                                            var d = e.slice(c.targetMatchIndex, c.targetMatchIndex + c.targetMatch[0].length);
                                            if (!1 === new RegExp(u).test(d.join("")) && 2 === c.targetMatch[0].length && r.validPositions[c.targetMatchIndex] && r.validPositions[c.targetMatchIndex + 1] && (r.validPositions[c.targetMatchIndex + 1].input = "0"), 
                                            "year" == p[2]) for (var h = l.getMaskTemplate.call(f, !1, 1, void 0, !0), m = t + 1; m < e.length; m++) e[m] = h[m], 
                                            r.validPositions.splice(t + 1, 1);
                                        }
                                        var g = i, k = M.call(f, e.join(""), a.inputFormat, a);
                                        return g && !isNaN(k.date.getTime()) && (a.prefillYear && (g = function(e, t, n) {
                                            if (e.year !== e.rawyear) {
                                                var i = v.toString(), a = e.rawyear.replace(/[^0-9]/g, ""), r = i.slice(0, a.length), o = i.slice(a.length);
                                                if (2 === a.length && a === r) {
                                                    var l = new Date(v, e.month - 1, e.day);
                                                    e.day == l.getDate() && (!n.max || n.max.date.getTime() >= l.getTime()) && (e.date.setFullYear(v), 
                                                    e.year = i, t.insert = [ {
                                                        pos: t.pos + 1,
                                                        c: o[0]
                                                    }, {
                                                        pos: t.pos + 2,
                                                        c: o[1]
                                                    } ]);
                                                }
                                            }
                                            return t;
                                        }(k, g, a)), g = function(e, t, n, i) {
                                            if (!t) return t;
                                            if (t && n.min && !isNaN(n.min.date.getTime())) {
                                                var r;
                                                for (e.reset(), P(n).lastIndex = 0; r = P(n).exec(n.inputFormat); ) {
                                                    var o;
                                                    if ((o = w(r)) && o[3]) {
                                                        for (var l = o[1], s = e[o[2]], c = n.min[o[2]], u = n.max ? n.max[o[2]] : c + 1, f = [], p = !1, d = 0; d < c.length; d++) void 0 !== i.validPositions[d + r.index] || p ? (f[d] = s[d], 
                                                        p = p || s[d] > c[d]) : (d + r.index == 0 && s[d] < c[d] ? (f[d] = s[d], p = !0) : f[d] = c[d], 
                                                        "year" === o[2] && s.length - 1 == d && c != u && (f = (parseInt(f.join("")) + 1).toString().split("")), 
                                                        "ampm" === o[2] && c != u && n.min.date.getTime() > e.date.getTime() && (f[d] = u[d]));
                                                        l.call(e._date, f.join(""));
                                                    }
                                                }
                                                t = n.min.date.getTime() <= e.date.getTime(), e.reInit();
                                            }
                                            return t && n.max && (isNaN(n.max.date.getTime()) || (t = n.max.date.getTime() >= e.date.getTime())), 
                                            t;
                                        }(k, g = S.call(f, k, g, a), a, r)), void 0 !== t && g && i.pos !== t ? {
                                            buffer: O(a.inputFormat, k, a).split(""),
                                            refreshFromBuffer: {
                                                start: t,
                                                end: i.pos
                                            },
                                            pos: i.caret || i.pos
                                        } : g;
                                    },
                                    onKeyDown: function(e, t, n, i) {
                                        e.ctrlKey && e.key === r.keys.ArrowRight && (this.inputmask._valueSet(E(new Date, i)), 
                                        d(this).trigger("setvalue"));
                                    },
                                    onUnMask: function(e, t, n) {
                                        return t ? O(n.outputFormat, M.call(this, e, n.inputFormat, n), n, !0) : t;
                                    },
                                    casing: function(e, t, n, i) {
                                        if (0 == t.nativeDef.indexOf("[ap]")) return e.toLowerCase();
                                        if (0 == t.nativeDef.indexOf("[AP]")) return e.toUpperCase();
                                        var a = l.getTest.call(this, [ n - 1 ]);
                                        return 0 == a.match.def.indexOf("[AP]") || 0 === n || a && a.input === String.fromCharCode(r.keyCode.Space) || a && a.match.def === String.fromCharCode(r.keyCode.Space) ? e.toUpperCase() : e.toLowerCase();
                                    },
                                    onBeforeMask: function(e, t) {
                                        return "[object Date]" === Object.prototype.toString.call(e) && (e = E(e, t)), e;
                                    },
                                    insertMode: !1,
                                    insertModeVisual: !1,
                                    shiftPositions: !1,
                                    keepStatic: !1,
                                    inputmode: "numeric",
                                    prefillYear: !0
                                }
                            });
                        },
                        1313: function(e, t, n) {
                            var i, a = (i = n(2394)) && i.__esModule ? i : {
                                default: i
                            };
                            a.default.dependencyLib.extend(!0, a.default.prototype.i18n, {
                                dayNames: [ "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ],
                                monthNames: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
                                ordinalSuffix: [ "st", "nd", "rd", "th" ]
                            });
                        },
                        3851: function(e, t, n) {
                            var i, a = (i = n(2394)) && i.__esModule ? i : {
                                default: i
                            }, r = n(8711), o = n(4713);
                            function l(e) {
                                return function(e) {
                                    if (Array.isArray(e)) return s(e);
                                }(e) || function(e) {
                                    if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
                                }(e) || function(e, t) {
                                    if (!e) return;
                                    if ("string" == typeof e) return s(e, t);
                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                    "Object" === n && e.constructor && (n = e.constructor.name);
                                    if ("Map" === n || "Set" === n) return Array.from(e);
                                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return s(e, t);
                                }(e) || function() {
                                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                }();
                            }
                            function s(e, t) {
                                (null == t || t > e.length) && (t = e.length);
                                for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
                                return i;
                            }
                            a.default.extendDefinitions({
                                A: {
                                    validator: "[A-Za-zА-яЁёÀ-ÿµ]",
                                    casing: "upper"
                                },
                                "&": {
                                    validator: "[0-9A-Za-zА-яЁёÀ-ÿµ]",
                                    casing: "upper"
                                },
                                "#": {
                                    validator: "[0-9A-Fa-f]",
                                    casing: "upper"
                                }
                            });
                            var c = /25[0-5]|2[0-4][0-9]|[01][0-9][0-9]/;
                            function u(e, t, n, i, a) {
                                if (n - 1 > -1 && "." !== t.buffer[n - 1] ? (e = t.buffer[n - 1] + e, e = n - 2 > -1 && "." !== t.buffer[n - 2] ? t.buffer[n - 2] + e : "0" + e) : e = "00" + e, 
                                a.greedy && parseInt(e) > 255 && c.test("00" + e.charAt(2))) {
                                    var r = [].concat(l(t.buffer.slice(0, n)), [ ".", e.charAt(2) ]);
                                    if (r.join("").match(/\./g).length < 4) return {
                                        refreshFromBuffer: !0,
                                        buffer: r,
                                        caret: n + 2
                                    };
                                }
                                return c.test(e);
                            }
                            a.default.extendAliases({
                                cssunit: {
                                    regex: "[+-]?[0-9]+\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)"
                                },
                                url: {
                                    regex: "(https?|ftp)://.*",
                                    autoUnmask: !1,
                                    keepStatic: !1,
                                    tabThrough: !0
                                },
                                ip: {
                                    mask: "i{1,3}.j{1,3}.k{1,3}.l{1,3}",
                                    definitions: {
                                        i: {
                                            validator: u
                                        },
                                        j: {
                                            validator: u
                                        },
                                        k: {
                                            validator: u
                                        },
                                        l: {
                                            validator: u
                                        }
                                    },
                                    onUnMask: function(e, t, n) {
                                        return e;
                                    },
                                    inputmode: "decimal",
                                    substitutes: {
                                        ",": "."
                                    }
                                },
                                email: {
                                    mask: function(e) {
                                        var t = e.separator, n = e.quantifier, i = "*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]", a = i;
                                        if (t) for (var r = 0; r < n; r++) a += "[".concat(t).concat(i, "]");
                                        return a;
                                    },
                                    greedy: !1,
                                    casing: "lower",
                                    separator: null,
                                    quantifier: 5,
                                    skipOptionalPartCharacter: "",
                                    onBeforePaste: function(e, t) {
                                        return (e = e.toLowerCase()).replace("mailto:", "");
                                    },
                                    definitions: {
                                        "*": {
                                            validator: "[0-9１-９A-Za-zА-яЁёÀ-ÿµ!#$%&'*+/=?^_`{|}~-]"
                                        },
                                        "-": {
                                            validator: "[0-9A-Za-z-]"
                                        }
                                    },
                                    onUnMask: function(e, t, n) {
                                        return e;
                                    },
                                    inputmode: "email"
                                },
                                mac: {
                                    mask: "##:##:##:##:##:##"
                                },
                                vin: {
                                    mask: "V{13}9{4}",
                                    definitions: {
                                        V: {
                                            validator: "[A-HJ-NPR-Za-hj-npr-z\\d]",
                                            casing: "upper"
                                        }
                                    },
                                    clearIncomplete: !0,
                                    autoUnmask: !0
                                },
                                ssn: {
                                    mask: "999-99-9999",
                                    postValidation: function(e, t, n, i, a, l, s) {
                                        var c = o.getMaskTemplate.call(this, !0, r.getLastValidPosition.call(this), !0, !0);
                                        return /^(?!219-09-9999|078-05-1120)(?!666|000|9.{2}).{3}-(?!00).{2}-(?!0{4}).{4}$/.test(c.join(""));
                                    }
                                }
                            });
                        },
                        207: function(e, t, n) {
                            var i = l(n(7184)), a = l(n(2394)), r = n(2839), o = n(8711);
                            function l(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                };
                            }
                            var s = a.default.dependencyLib;
                            function c(e, t) {
                                for (var n = "", i = 0; i < e.length; i++) a.default.prototype.definitions[e.charAt(i)] || t.definitions[e.charAt(i)] || t.optionalmarker[0] === e.charAt(i) || t.optionalmarker[1] === e.charAt(i) || t.quantifiermarker[0] === e.charAt(i) || t.quantifiermarker[1] === e.charAt(i) || t.groupmarker[0] === e.charAt(i) || t.groupmarker[1] === e.charAt(i) || t.alternatormarker === e.charAt(i) ? n += "\\" + e.charAt(i) : n += e.charAt(i);
                                return n;
                            }
                            function u(e, t, n, i) {
                                if (e.length > 0 && t > 0 && (!n.digitsOptional || i)) {
                                    var a = e.indexOf(n.radixPoint), r = !1;
                                    n.negationSymbol.back === e[e.length - 1] && (r = !0, e.length--), -1 === a && (e.push(n.radixPoint), 
                                    a = e.length - 1);
                                    for (var o = 1; o <= t; o++) isFinite(e[a + o]) || (e[a + o] = "0");
                                }
                                return r && e.push(n.negationSymbol.back), e;
                            }
                            function f(e, t) {
                                var n = 0;
                                for (var i in "+" === e && (n = o.seekNext.call(this, t.validPositions.length - 1)), 
                                t.tests) if ((i = parseInt(i)) >= n) for (var a = 0, r = t.tests[i].length; a < r; a++) if ((void 0 === t.validPositions[i] || "-" === e) && t.tests[i][a].match.def === e) return i + (void 0 !== t.validPositions[i] && "-" !== e ? 1 : 0);
                                return n;
                            }
                            function p(e, t) {
                                for (var n = -1, i = 0, a = t.validPositions.length; i < a; i++) {
                                    var r = t.validPositions[i];
                                    if (r && r.match.def === e) {
                                        n = i;
                                        break;
                                    }
                                }
                                return n;
                            }
                            function d(e, t, n, i, a) {
                                var r = t.buffer ? t.buffer.indexOf(a.radixPoint) : -1, o = (-1 !== r || i && a.jitMasking) && new RegExp(a.definitions[9].validator).test(e);
                                return !i && a._radixDance && -1 !== r && o && null == t.validPositions[r] ? {
                                    insert: {
                                        pos: r === n ? r + 1 : r,
                                        c: a.radixPoint
                                    },
                                    pos: n
                                } : o;
                            }
                            a.default.extendAliases({
                                numeric: {
                                    mask: function(e) {
                                        e.repeat = 0, e.groupSeparator === e.radixPoint && e.digits && "0" !== e.digits && ("." === e.radixPoint ? e.groupSeparator = "," : "," === e.radixPoint ? e.groupSeparator = "." : e.groupSeparator = ""), 
                                        " " === e.groupSeparator && (e.skipOptionalPartCharacter = void 0), e.placeholder.length > 1 && (e.placeholder = e.placeholder.charAt(0)), 
                                        "radixFocus" === e.positionCaretOnClick && "" === e.placeholder && (e.positionCaretOnClick = "lvp");
                                        var t = "0", n = e.radixPoint;
                                        !0 === e.numericInput && void 0 === e.__financeInput ? (t = "1", e.positionCaretOnClick = "radixFocus" === e.positionCaretOnClick ? "lvp" : e.positionCaretOnClick, 
                                        e.digitsOptional = !1, isNaN(e.digits) && (e.digits = 2), e._radixDance = !1, n = "," === e.radixPoint ? "?" : "!", 
                                        "" !== e.radixPoint && void 0 === e.definitions[n] && (e.definitions[n] = {}, e.definitions[n].validator = "[" + e.radixPoint + "]", 
                                        e.definitions[n].placeholder = e.radixPoint, e.definitions[n].static = !0, e.definitions[n].generated = !0)) : (e.__financeInput = !1, 
                                        e.numericInput = !0);
                                        var a, r = "[+]";
                                        if (r += c(e.prefix, e), "" !== e.groupSeparator ? (void 0 === e.definitions[e.groupSeparator] && (e.definitions[e.groupSeparator] = {}, 
                                        e.definitions[e.groupSeparator].validator = "[" + e.groupSeparator + "]", e.definitions[e.groupSeparator].placeholder = e.groupSeparator, 
                                        e.definitions[e.groupSeparator].static = !0, e.definitions[e.groupSeparator].generated = !0), 
                                        r += e._mask(e)) : r += "9{+}", void 0 !== e.digits && 0 !== e.digits) {
                                            var o = e.digits.toString().split(",");
                                            isFinite(o[0]) && o[1] && isFinite(o[1]) ? r += n + t + "{" + e.digits + "}" : (isNaN(e.digits) || parseInt(e.digits) > 0) && (e.digitsOptional || e.jitMasking ? (a = r + n + t + "{0," + e.digits + "}", 
                                            e.keepStatic = !0) : r += n + t + "{" + e.digits + "}");
                                        } else e.inputmode = "numeric";
                                        return r += c(e.suffix, e), r += "[-]", a && (r = [ a + c(e.suffix, e) + "[-]", r ]), 
                                        e.greedy = !1, function(e) {
                                            void 0 === e.parseMinMaxOptions && (null !== e.min && (e.min = e.min.toString().replace(new RegExp((0, 
                                            i.default)(e.groupSeparator), "g"), ""), "," === e.radixPoint && (e.min = e.min.replace(e.radixPoint, ".")), 
                                            e.min = isFinite(e.min) ? parseFloat(e.min) : NaN, isNaN(e.min) && (e.min = Number.MIN_VALUE)), 
                                            null !== e.max && (e.max = e.max.toString().replace(new RegExp((0, i.default)(e.groupSeparator), "g"), ""), 
                                            "," === e.radixPoint && (e.max = e.max.replace(e.radixPoint, ".")), e.max = isFinite(e.max) ? parseFloat(e.max) : NaN, 
                                            isNaN(e.max) && (e.max = Number.MAX_VALUE)), e.parseMinMaxOptions = "done");
                                        }(e), "" !== e.radixPoint && e.substituteRadixPoint && (e.substitutes["." == e.radixPoint ? "," : "."] = e.radixPoint), 
                                        r;
                                    },
                                    _mask: function(e) {
                                        return "(" + e.groupSeparator + "999){+|1}";
                                    },
                                    digits: "*",
                                    digitsOptional: !0,
                                    enforceDigitsOnBlur: !1,
                                    radixPoint: ".",
                                    positionCaretOnClick: "radixFocus",
                                    _radixDance: !0,
                                    groupSeparator: "",
                                    allowMinus: !0,
                                    negationSymbol: {
                                        front: "-",
                                        back: ""
                                    },
                                    prefix: "",
                                    suffix: "",
                                    min: null,
                                    max: null,
                                    SetMaxOnOverflow: !1,
                                    step: 1,
                                    inputType: "text",
                                    unmaskAsNumber: !1,
                                    roundingFN: Math.round,
                                    inputmode: "decimal",
                                    shortcuts: {
                                        k: "1000",
                                        m: "1000000"
                                    },
                                    placeholder: "0",
                                    greedy: !1,
                                    rightAlign: !0,
                                    insertMode: !0,
                                    autoUnmask: !1,
                                    skipOptionalPartCharacter: "",
                                    usePrototypeDefinitions: !1,
                                    stripLeadingZeroes: !0,
                                    substituteRadixPoint: !0,
                                    definitions: {
                                        0: {
                                            validator: d
                                        },
                                        1: {
                                            validator: d,
                                            definitionSymbol: "9"
                                        },
                                        9: {
                                            validator: "[0-9０-９٠-٩۰-۹]",
                                            definitionSymbol: "*"
                                        },
                                        "+": {
                                            validator: function(e, t, n, i, a) {
                                                return a.allowMinus && ("-" === e || e === a.negationSymbol.front);
                                            }
                                        },
                                        "-": {
                                            validator: function(e, t, n, i, a) {
                                                return a.allowMinus && e === a.negationSymbol.back;
                                            }
                                        }
                                    },
                                    preValidation: function(e, t, n, i, a, r, o, l) {
                                        var s = this;
                                        if (!1 !== a.__financeInput && n === a.radixPoint) return !1;
                                        var c = e.indexOf(a.radixPoint), u = t;
                                        if (t = function(e, t, n, i, a) {
                                            return a._radixDance && a.numericInput && t !== a.negationSymbol.back && e <= n && (n > 0 || t == a.radixPoint) && (void 0 === i.validPositions[e - 1] || i.validPositions[e - 1].input !== a.negationSymbol.back) && (e -= 1), 
                                            e;
                                        }(t, n, c, r, a), "-" === n || n === a.negationSymbol.front) {
                                            if (!0 !== a.allowMinus) return !1;
                                            var d = !1, h = p("+", r), v = p("-", r);
                                            return -1 !== h && (d = [ h ], -1 !== v && d.push(v)), !1 !== d ? {
                                                remove: d,
                                                caret: u - a.negationSymbol.back.length
                                            } : {
                                                insert: [ {
                                                    pos: f.call(s, "+", r),
                                                    c: a.negationSymbol.front,
                                                    fromIsValid: !0
                                                }, {
                                                    pos: f.call(s, "-", r),
                                                    c: a.negationSymbol.back,
                                                    fromIsValid: void 0
                                                } ],
                                                caret: u + a.negationSymbol.back.length
                                            };
                                        }
                                        if (n === a.groupSeparator) return {
                                            caret: u
                                        };
                                        if (l) return !0;
                                        if (-1 !== c && !0 === a._radixDance && !1 === i && n === a.radixPoint && void 0 !== a.digits && (isNaN(a.digits) || parseInt(a.digits) > 0) && c !== t) {
                                            var m = f.call(s, a.radixPoint, r);
                                            return r.validPositions[m] && (r.validPositions[m].generatedInput = r.validPositions[m].generated || !1), 
                                            {
                                                caret: a._radixDance && t === c - 1 ? c + 1 : c
                                            };
                                        }
                                        if (!1 === a.__financeInput) if (i) {
                                            if (a.digitsOptional) return {
                                                rewritePosition: o.end
                                            };
                                            if (!a.digitsOptional) {
                                                if (o.begin > c && o.end <= c) return n === a.radixPoint ? {
                                                    insert: {
                                                        pos: c + 1,
                                                        c: "0",
                                                        fromIsValid: !0
                                                    },
                                                    rewritePosition: c
                                                } : {
                                                    rewritePosition: c + 1
                                                };
                                                if (o.begin < c) return {
                                                    rewritePosition: o.begin - 1
                                                };
                                            }
                                        } else if (!a.showMaskOnHover && !a.showMaskOnFocus && !a.digitsOptional && a.digits > 0 && "" === this.__valueGet.call(this.el)) return {
                                            rewritePosition: c
                                        };
                                        return {
                                            rewritePosition: t
                                        };
                                    },
                                    postValidation: function(e, t, n, i, a, r, o) {
                                        if (!1 === i) return i;
                                        if (o) return !0;
                                        if (null !== a.min || null !== a.max) {
                                            var l = a.onUnMask(e.slice().reverse().join(""), void 0, s.extend({}, a, {
                                                unmaskAsNumber: !0
                                            }));
                                            if (null !== a.min && l < a.min && (l.toString().length > a.min.toString().length || l < 0)) return !1;
                                            if (null !== a.max && l > a.max) return !!a.SetMaxOnOverflow && {
                                                refreshFromBuffer: !0,
                                                buffer: u(a.max.toString().replace(".", a.radixPoint).split(""), a.digits, a).reverse()
                                            };
                                        }
                                        return i;
                                    },
                                    onUnMask: function(e, t, n) {
                                        if ("" === t && !0 === n.nullable) return t;
                                        var a = e.replace(n.prefix, "");
                                        return a = (a = a.replace(n.suffix, "")).replace(new RegExp((0, i.default)(n.groupSeparator), "g"), ""), 
                                        "" !== n.placeholder.charAt(0) && (a = a.replace(new RegExp(n.placeholder.charAt(0), "g"), "0")), 
                                        n.unmaskAsNumber ? ("" !== n.radixPoint && -1 !== a.indexOf(n.radixPoint) && (a = a.replace(i.default.call(this, n.radixPoint), ".")), 
                                        a = (a = a.replace(new RegExp("^" + (0, i.default)(n.negationSymbol.front)), "-")).replace(new RegExp((0, 
                                        i.default)(n.negationSymbol.back) + "$"), ""), Number(a)) : a;
                                    },
                                    isComplete: function(e, t) {
                                        var n = (t.numericInput ? e.slice().reverse() : e).join("");
                                        return n = (n = (n = (n = (n = n.replace(new RegExp("^" + (0, i.default)(t.negationSymbol.front)), "-")).replace(new RegExp((0, 
                                        i.default)(t.negationSymbol.back) + "$"), "")).replace(t.prefix, "")).replace(t.suffix, "")).replace(new RegExp((0, 
                                        i.default)(t.groupSeparator) + "([0-9]{3})", "g"), "$1"), "," === t.radixPoint && (n = n.replace((0, 
                                        i.default)(t.radixPoint), ".")), isFinite(n);
                                    },
                                    onBeforeMask: function(e, t) {
                                        var n;
                                        e = null !== (n = e) && void 0 !== n ? n : "";
                                        var a = t.radixPoint || ",";
                                        isFinite(t.digits) && (t.digits = parseInt(t.digits)), "number" != typeof e && "number" !== t.inputType || "" === a || (e = e.toString().replace(".", a));
                                        var r = "-" === e.charAt(0) || e.charAt(0) === t.negationSymbol.front, o = e.split(a), l = o[0].replace(/[^\-0-9]/g, ""), s = o.length > 1 ? o[1].replace(/[^0-9]/g, "") : "", c = o.length > 1;
                                        e = l + ("" !== s ? a + s : s);
                                        var f = 0;
                                        if ("" !== a && (f = t.digitsOptional ? t.digits < s.length ? t.digits : s.length : t.digits, 
                                        "" !== s || !t.digitsOptional)) {
                                            var p = Math.pow(10, f || 1);
                                            e = e.replace((0, i.default)(a), "."), isNaN(parseFloat(e)) || (e = (t.roundingFN(parseFloat(e) * p) / p).toFixed(f)), 
                                            e = e.toString().replace(".", a);
                                        }
                                        if (0 === t.digits && -1 !== e.indexOf(a) && (e = e.substring(0, e.indexOf(a))), 
                                        null !== t.min || null !== t.max) {
                                            var d = e.toString().replace(a, ".");
                                            null !== t.min && d < t.min ? e = t.min.toString().replace(".", a) : null !== t.max && d > t.max && (e = t.max.toString().replace(".", a));
                                        }
                                        return r && "-" !== e.charAt(0) && (e = "-" + e), u(e.toString().split(""), f, t, c).join("");
                                    },
                                    onBeforeWrite: function(e, t, n, a) {
                                        function r(e, t) {
                                            if (!1 !== a.__financeInput || t) {
                                                var n = e.indexOf(a.radixPoint);
                                                -1 !== n && e.splice(n, 1);
                                            }
                                            if ("" !== a.groupSeparator) for (;-1 !== (n = e.indexOf(a.groupSeparator)); ) e.splice(n, 1);
                                            return e;
                                        }
                                        var o, l;
                                        if (a.stripLeadingZeroes && (l = function(e, t) {
                                            var n = new RegExp("(^" + ("" !== t.negationSymbol.front ? (0, i.default)(t.negationSymbol.front) + "?" : "") + (0, 
                                            i.default)(t.prefix) + ")(.*)(" + (0, i.default)(t.suffix) + ("" != t.negationSymbol.back ? (0, 
                                            i.default)(t.negationSymbol.back) + "?" : "") + "$)").exec(e.slice().reverse().join("")), a = n ? n[2] : "", r = !1;
                                            return a && (a = a.split(t.radixPoint.charAt(0))[0], r = new RegExp("^[0" + t.groupSeparator + "]*").exec(a)), 
                                            !(!r || !(r[0].length > 1 || r[0].length > 0 && r[0].length < a.length)) && r;
                                        }(t, a))) for (var c = t.join("").lastIndexOf(l[0].split("").reverse().join("")) - (l[0] == l.input ? 0 : 1), f = l[0] == l.input ? 1 : 0, p = l[0].length - f; p > 0; p--) this.maskset.validPositions.splice(c + p, 1), 
                                        delete t[c + p];
                                        if (e) switch (e.type) {
                                          case "blur":
                                          case "checkval":
                                            if (null !== a.min) {
                                                var d = a.onUnMask(t.slice().reverse().join(""), void 0, s.extend({}, a, {
                                                    unmaskAsNumber: !0
                                                }));
                                                if (null !== a.min && d < a.min) return {
                                                    refreshFromBuffer: !0,
                                                    buffer: u(a.min.toString().replace(".", a.radixPoint).split(""), a.digits, a).reverse()
                                                };
                                            }
                                            if (t[t.length - 1] === a.negationSymbol.front) {
                                                var h = new RegExp("(^" + ("" != a.negationSymbol.front ? (0, i.default)(a.negationSymbol.front) + "?" : "") + (0, 
                                                i.default)(a.prefix) + ")(.*)(" + (0, i.default)(a.suffix) + ("" != a.negationSymbol.back ? (0, 
                                                i.default)(a.negationSymbol.back) + "?" : "") + "$)").exec(r(t.slice(), !0).reverse().join(""));
                                                0 == (h ? h[2] : "") && (o = {
                                                    refreshFromBuffer: !0,
                                                    buffer: [ 0 ]
                                                });
                                            } else if ("" !== a.radixPoint) t.indexOf(a.radixPoint) === a.suffix.length && (o && o.buffer ? o.buffer.splice(0, 1 + a.suffix.length) : (t.splice(0, 1 + a.suffix.length), 
                                            o = {
                                                refreshFromBuffer: !0,
                                                buffer: r(t)
                                            }));
                                            if (a.enforceDigitsOnBlur) {
                                                var v = (o = o || {}) && o.buffer || t.slice().reverse();
                                                o.refreshFromBuffer = !0, o.buffer = u(v, a.digits, a, !0).reverse();
                                            }
                                        }
                                        return o;
                                    },
                                    onKeyDown: function(e, t, n, i) {
                                        var a, o = s(this);
                                        if (3 != e.location) {
                                            var l, c = e.key;
                                            if ((l = i.shortcuts && i.shortcuts[c]) && l.length > 1) return this.inputmask.__valueSet.call(this, parseFloat(this.inputmask.unmaskedvalue()) * parseInt(l)), 
                                            o.trigger("setvalue"), !1;
                                        }
                                        if (e.ctrlKey) switch (e.key) {
                                          case r.keys.ArrowUp:
                                            return this.inputmask.__valueSet.call(this, parseFloat(this.inputmask.unmaskedvalue()) + parseInt(i.step)), 
                                            o.trigger("setvalue"), !1;

                                          case r.keys.ArrowDown:
                                            return this.inputmask.__valueSet.call(this, parseFloat(this.inputmask.unmaskedvalue()) - parseInt(i.step)), 
                                            o.trigger("setvalue"), !1;
                                        }
                                        if (!e.shiftKey && (e.key === r.keys.Delete || e.key === r.keys.Backspace || e.key === r.keys.BACKSPACE_SAFARI) && n.begin !== t.length) {
                                            if (t[e.key === r.keys.Delete ? n.begin - 1 : n.end] === i.negationSymbol.front) return a = t.slice().reverse(), 
                                            "" !== i.negationSymbol.front && a.shift(), "" !== i.negationSymbol.back && a.pop(), 
                                            o.trigger("setvalue", [ a.join(""), n.begin ]), !1;
                                            if (!0 === i._radixDance) {
                                                var f, p = t.indexOf(i.radixPoint);
                                                if (i.digitsOptional) {
                                                    if (0 === p) return (a = t.slice().reverse()).pop(), o.trigger("setvalue", [ a.join(""), n.begin >= a.length ? a.length : n.begin ]), 
                                                    !1;
                                                } else if (-1 !== p && (n.begin < p || n.end < p || e.key === r.keys.Delete && (n.begin === p || n.begin - 1 === p))) return n.begin === n.end && (e.key === r.keys.Backspace || e.key === r.keys.BACKSPACE_SAFARI ? n.begin++ : e.key === r.keys.Delete && n.begin - 1 === p && (f = s.extend({}, n), 
                                                n.begin--, n.end--)), (a = t.slice().reverse()).splice(a.length - n.begin, n.begin - n.end + 1), 
                                                a = u(a, i.digits, i).join(""), f && (n = f), o.trigger("setvalue", [ a, n.begin >= a.length ? p + 1 : n.begin ]), 
                                                !1;
                                            }
                                        }
                                    }
                                },
                                currency: {
                                    prefix: "",
                                    groupSeparator: ",",
                                    alias: "numeric",
                                    digits: 2,
                                    digitsOptional: !1
                                },
                                decimal: {
                                    alias: "numeric"
                                },
                                integer: {
                                    alias: "numeric",
                                    inputmode: "numeric",
                                    digits: 0
                                },
                                percentage: {
                                    alias: "numeric",
                                    min: 0,
                                    max: 100,
                                    suffix: " %",
                                    digits: 0,
                                    allowMinus: !1
                                },
                                indianns: {
                                    alias: "numeric",
                                    _mask: function(e) {
                                        return "(" + e.groupSeparator + "99){*|1}(" + e.groupSeparator + "999){1|1}";
                                    },
                                    groupSeparator: ",",
                                    radixPoint: ".",
                                    placeholder: "0",
                                    digits: 2,
                                    digitsOptional: !1
                                }
                            });
                        },
                        9380: function(e, t) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = void 0;
                            var n = !("undefined" == typeof window || !window.document || !window.document.createElement);
                            t.default = n ? window : {};
                        },
                        7760: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.HandleNativePlaceholder = function(e, t) {
                                var n = e ? e.inputmask : this;
                                if (i.ie) {
                                    if (e.inputmask._valueGet() !== t && (e.placeholder !== t || "" === e.placeholder)) {
                                        var a = o.getBuffer.call(n).slice(), r = e.inputmask._valueGet();
                                        if (r !== t) {
                                            var l = o.getLastValidPosition.call(n);
                                            -1 === l && r === o.getBufferTemplate.call(n).join("") ? a = [] : -1 !== l && u.call(n, a), 
                                            p(e, a);
                                        }
                                    }
                                } else e.placeholder !== t && (e.placeholder = t, "" === e.placeholder && e.removeAttribute("placeholder"));
                            }, t.applyInputValue = c, t.checkVal = f, t.clearOptionalTail = u, t.unmaskedvalue = function(e) {
                                var t = e ? e.inputmask : this, n = t.opts, i = t.maskset;
                                if (e) {
                                    if (void 0 === e.inputmask) return e.value;
                                    e.inputmask && e.inputmask.refreshValue && c(e, e.inputmask._valueGet(!0));
                                }
                                for (var a = [], r = i.validPositions, l = 0, s = r.length; l < s; l++) r[l] && r[l].match && (1 != r[l].match.static || Array.isArray(i.metadata) && !0 !== r[l].generatedInput) && a.push(r[l].input);
                                var u = 0 === a.length ? "" : (t.isRTL ? a.reverse() : a).join("");
                                if ("function" == typeof n.onUnMask) {
                                    var f = (t.isRTL ? o.getBuffer.call(t).slice().reverse() : o.getBuffer.call(t)).join("");
                                    u = n.onUnMask.call(t, f, u, n);
                                }
                                return u;
                            }, t.writeBuffer = p;
                            var i = n(9845), a = n(6030), r = n(2839), o = n(8711), l = n(7215), s = n(4713);
                            function c(e, t, n) {
                                var i = e ? e.inputmask : this, a = i.opts;
                                e.inputmask.refreshValue = !1, "function" == typeof a.onBeforeMask && (t = a.onBeforeMask.call(i, t, a) || t), 
                                f(e, !0, !1, t = (t || "").toString().split(""), n), i.undoValue = i._valueGet(!0), 
                                (a.clearMaskOnLostFocus || a.clearIncomplete) && e.inputmask._valueGet() === o.getBufferTemplate.call(i).join("") && -1 === o.getLastValidPosition.call(i) && e.inputmask._valueSet("");
                            }
                            function u(e) {
                                e.length = 0;
                                for (var t, n = s.getMaskTemplate.call(this, !0, 0, !0, void 0, !0); void 0 !== (t = n.shift()); ) e.push(t);
                                return e;
                            }
                            function f(e, t, n, i, r) {
                                var c, u = e ? e.inputmask : this, f = u.maskset, d = u.opts, h = u.dependencyLib, v = i.slice(), m = "", g = -1, y = d.skipOptionalPartCharacter;
                                d.skipOptionalPartCharacter = "", o.resetMaskSet.call(u, !1), u.clicked = 0, g = d.radixPoint ? o.determineNewCaretPosition.call(u, {
                                    begin: 0,
                                    end: 0
                                }, !1, !1 === d.__financeInput ? "radixFocus" : void 0).begin : 0, f.p = g, u.caretPos = {
                                    begin: g
                                };
                                var k = [], b = u.caretPos;
                                if (v.forEach(function(e, t) {
                                    if (void 0 !== e) {
                                        var i = new h.Event("_checkval");
                                        i.key = e, m += e;
                                        var r = o.getLastValidPosition.call(u, void 0, !0);
                                        !function(e, t) {
                                            for (var n = s.getMaskTemplate.call(u, !0, 0).slice(e, o.seekNext.call(u, e, !1, !1)).join("").replace(/'/g, ""), i = n.indexOf(t); i > 0 && " " === n[i - 1]; ) i--;
                                            var a = 0 === i && !o.isMask.call(u, e) && (s.getTest.call(u, e).match.nativeDef === t.charAt(0) || !0 === s.getTest.call(u, e).match.static && s.getTest.call(u, e).match.nativeDef === "'" + t.charAt(0) || " " === s.getTest.call(u, e).match.nativeDef && (s.getTest.call(u, e + 1).match.nativeDef === t.charAt(0) || !0 === s.getTest.call(u, e + 1).match.static && s.getTest.call(u, e + 1).match.nativeDef === "'" + t.charAt(0)));
                                            if (!a && i > 0 && !o.isMask.call(u, e, !1, !0)) {
                                                var r = o.seekNext.call(u, e);
                                                u.caretPos.begin < r && (u.caretPos = {
                                                    begin: r
                                                });
                                            }
                                            return a;
                                        }(g, m) ? (c = a.EventHandlers.keypressEvent.call(u, i, !0, !1, n, u.caretPos.begin)) && (g = u.caretPos.begin + 1, 
                                        m = "") : c = a.EventHandlers.keypressEvent.call(u, i, !0, !1, n, r + 1), c ? (void 0 !== c.pos && f.validPositions[c.pos] && !0 === f.validPositions[c.pos].match.static && void 0 === f.validPositions[c.pos].alternation && (k.push(c.pos), 
                                        u.isRTL || (c.forwardPosition = c.pos + 1)), p.call(u, void 0, o.getBuffer.call(u), c.forwardPosition, i, !1), 
                                        u.caretPos = {
                                            begin: c.forwardPosition,
                                            end: c.forwardPosition
                                        }, b = u.caretPos) : void 0 === f.validPositions[t] && v[t] === s.getPlaceholder.call(u, t) && o.isMask.call(u, t, !0) ? u.caretPos.begin++ : u.caretPos = b;
                                    }
                                }), k.length > 0) {
                                    var x, w, P = o.seekNext.call(u, -1, void 0, !1);
                                    if (!l.isComplete.call(u, o.getBuffer.call(u)) && k.length <= P || l.isComplete.call(u, o.getBuffer.call(u)) && k.length > 0 && k.length !== P && 0 === k[0]) for (var S = P; void 0 !== (x = k.shift()); ) if (x < S) {
                                        var O = new h.Event("_checkval");
                                        if ((w = f.validPositions[x]).generatedInput = !0, O.key = w.input, (c = a.EventHandlers.keypressEvent.call(u, O, !0, !1, n, S)) && void 0 !== c.pos && c.pos !== x && f.validPositions[c.pos] && !0 === f.validPositions[c.pos].match.static) k.push(c.pos); else if (!c) break;
                                        S++;
                                    }
                                }
                                t && p.call(u, e, o.getBuffer.call(u), c ? c.forwardPosition : u.caretPos.begin, r || new h.Event("checkval"), r && ("input" === r.type && u.undoValue !== o.getBuffer.call(u).join("") || "paste" === r.type)), 
                                d.skipOptionalPartCharacter = y;
                            }
                            function p(e, t, n, i, a) {
                                var s = e ? e.inputmask : this, c = s.opts, u = s.dependencyLib;
                                if (i && "function" == typeof c.onBeforeWrite) {
                                    var f = c.onBeforeWrite.call(s, i, t, n, c);
                                    if (f) {
                                        if (f.refreshFromBuffer) {
                                            var p = f.refreshFromBuffer;
                                            l.refreshFromBuffer.call(s, !0 === p ? p : p.start, p.end, f.buffer || t), t = o.getBuffer.call(s, !0);
                                        }
                                        void 0 !== n && (n = void 0 !== f.caret ? f.caret : n);
                                    }
                                }
                                if (void 0 !== e && (e.inputmask._valueSet(t.join("")), void 0 === n || void 0 !== i && "blur" === i.type || o.caret.call(s, e, n, void 0, void 0, void 0 !== i && "keydown" === i.type && (i.key === r.keys.Delete || i.key === r.keys.Backspace)), 
                                void 0 === e.inputmask.writeBufferHook || e.inputmask.writeBufferHook(n), !0 === a)) {
                                    var d = u(e), h = e.inputmask._valueGet();
                                    e.inputmask.skipInputEvent = !0, d.trigger("input"), setTimeout(function() {
                                        h === o.getBufferTemplate.call(s).join("") ? d.trigger("cleared") : !0 === l.isComplete.call(s, t) && d.trigger("complete");
                                    }, 0);
                                }
                            }
                        },
                        2394: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = void 0;
                            var i = v(n(3976)), a = v(n(7392)), r = v(n(4963)), o = n(9716), l = v(n(9380)), s = n(7760), c = n(157), u = n(2391), f = n(8711), p = n(7215), d = n(4713);
                            function h(e) {
                                return h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, h(e);
                            }
                            function v(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                };
                            }
                            var m = l.default.document, g = "_inputmask_opts";
                            function y(e, t, n) {
                                if (!(this instanceof y)) return new y(e, t, n);
                                this.dependencyLib = r.default, this.el = void 0, this.events = {}, this.maskset = void 0, 
                                !0 !== n && ("[object Object]" === Object.prototype.toString.call(e) ? t = e : (t = t || {}, 
                                e && (t.alias = e)), this.opts = r.default.extend(!0, {}, this.defaults, t), this.noMasksCache = t && void 0 !== t.definitions, 
                                this.userOptions = t || {}, k(this.opts.alias, t, this.opts)), this.refreshValue = !1, 
                                this.undoValue = void 0, this.$el = void 0, this.skipInputEvent = !1, this.validationEvent = !1, 
                                this.ignorable = !1, this.maxLength, this.mouseEnter = !1, this.clicked = 0, this.originalPlaceholder = void 0, 
                                this.isComposing = !1, this.hasAlternator = !1;
                            }
                            function k(e, t, n) {
                                var i = y.prototype.aliases[e];
                                return i ? (i.alias && k(i.alias, void 0, n), r.default.extend(!0, n, i), r.default.extend(!0, n, t), 
                                !0) : (null === n.mask && (n.mask = e), !1);
                            }
                            y.prototype = {
                                dataAttribute: "data-inputmask",
                                defaults: i.default,
                                definitions: a.default,
                                aliases: {},
                                masksCache: {},
                                i18n: {},
                                get isRTL() {
                                    return this.opts.isRTL || this.opts.numericInput;
                                },
                                mask: function(e) {
                                    var t = this;
                                    return "string" == typeof e && (e = m.getElementById(e) || m.querySelectorAll(e)), 
                                    (e = e.nodeName ? [ e ] : Array.isArray(e) ? e : [].slice.call(e)).forEach(function(e, n) {
                                        var i = r.default.extend(!0, {}, t.opts);
                                        if (function(e, t, n, i) {
                                            function a(t, a) {
                                                var r = "" === i ? t : i + "-" + t;
                                                null !== (a = void 0 !== a ? a : e.getAttribute(r)) && ("string" == typeof a && (0 === t.indexOf("on") ? a = l.default[a] : "false" === a ? a = !1 : "true" === a && (a = !0)), 
                                                n[t] = a);
                                            }
                                            if (!0 === t.importDataAttributes) {
                                                var o, s, c, u, f = e.getAttribute(i);
                                                if (f && "" !== f && (f = f.replace(/'/g, '"'), s = JSON.parse("{" + f + "}")), 
                                                s) for (u in c = void 0, s) if ("alias" === u.toLowerCase()) {
                                                    c = s[u];
                                                    break;
                                                }
                                                for (o in a("alias", c), n.alias && k(n.alias, n, t), t) {
                                                    if (s) for (u in c = void 0, s) if (u.toLowerCase() === o.toLowerCase()) {
                                                        c = s[u];
                                                        break;
                                                    }
                                                    a(o, c);
                                                }
                                            }
                                            r.default.extend(!0, t, n), ("rtl" === e.dir || t.rightAlign) && (e.style.textAlign = "right");
                                            ("rtl" === e.dir || t.numericInput) && (e.dir = "ltr", e.removeAttribute("dir"), 
                                            t.isRTL = !0);
                                            return Object.keys(n).length;
                                        }(e, i, r.default.extend(!0, {}, t.userOptions), t.dataAttribute)) {
                                            var a = (0, u.generateMaskSet)(i, t.noMasksCache);
                                            void 0 !== a && (void 0 !== e.inputmask && (e.inputmask.opts.autoUnmask = !0, e.inputmask.remove()), 
                                            e.inputmask = new y(void 0, void 0, !0), e.inputmask.opts = i, e.inputmask.noMasksCache = t.noMasksCache, 
                                            e.inputmask.userOptions = r.default.extend(!0, {}, t.userOptions), e.inputmask.el = e, 
                                            e.inputmask.$el = (0, r.default)(e), e.inputmask.maskset = a, r.default.data(e, g, t.userOptions), 
                                            c.mask.call(e.inputmask));
                                        }
                                    }), e && e[0] && e[0].inputmask || this;
                                },
                                option: function(e, t) {
                                    return "string" == typeof e ? this.opts[e] : "object" === h(e) ? (r.default.extend(this.userOptions, e), 
                                    this.el && !0 !== t && this.mask(this.el), this) : void 0;
                                },
                                unmaskedvalue: function(e) {
                                    if (this.maskset = this.maskset || (0, u.generateMaskSet)(this.opts, this.noMasksCache), 
                                    void 0 === this.el || void 0 !== e) {
                                        var t = ("function" == typeof this.opts.onBeforeMask && this.opts.onBeforeMask.call(this, e, this.opts) || e).split("");
                                        s.checkVal.call(this, void 0, !1, !1, t), "function" == typeof this.opts.onBeforeWrite && this.opts.onBeforeWrite.call(this, void 0, f.getBuffer.call(this), 0, this.opts);
                                    }
                                    return s.unmaskedvalue.call(this, this.el);
                                },
                                remove: function() {
                                    if (this.el) {
                                        r.default.data(this.el, g, null);
                                        var e = this.opts.autoUnmask ? (0, s.unmaskedvalue)(this.el) : this._valueGet(this.opts.autoUnmask);
                                        e !== f.getBufferTemplate.call(this).join("") ? this._valueSet(e, this.opts.autoUnmask) : this._valueSet(""), 
                                        o.EventRuler.off(this.el), Object.getOwnPropertyDescriptor && Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.el), "value") && this.__valueGet && Object.defineProperty(this.el, "value", {
                                            get: this.__valueGet,
                                            set: this.__valueSet,
                                            configurable: !0
                                        }) : m.__lookupGetter__ && this.el.__lookupGetter__("value") && this.__valueGet && (this.el.__defineGetter__("value", this.__valueGet), 
                                        this.el.__defineSetter__("value", this.__valueSet)), this.el.inputmask = void 0;
                                    }
                                    return this.el;
                                },
                                getemptymask: function() {
                                    return this.maskset = this.maskset || (0, u.generateMaskSet)(this.opts, this.noMasksCache), 
                                    (this.isRTL ? f.getBufferTemplate.call(this).reverse() : f.getBufferTemplate.call(this)).join("");
                                },
                                hasMaskedValue: function() {
                                    return !this.opts.autoUnmask;
                                },
                                isComplete: function() {
                                    return this.maskset = this.maskset || (0, u.generateMaskSet)(this.opts, this.noMasksCache), 
                                    p.isComplete.call(this, f.getBuffer.call(this));
                                },
                                getmetadata: function() {
                                    if (this.maskset = this.maskset || (0, u.generateMaskSet)(this.opts, this.noMasksCache), 
                                    Array.isArray(this.maskset.metadata)) {
                                        var e = d.getMaskTemplate.call(this, !0, 0, !1).join("");
                                        return this.maskset.metadata.forEach(function(t) {
                                            return t.mask !== e || (e = t, !1);
                                        }), e;
                                    }
                                    return this.maskset.metadata;
                                },
                                isValid: function(e) {
                                    if (this.maskset = this.maskset || (0, u.generateMaskSet)(this.opts, this.noMasksCache), 
                                    e) {
                                        var t = ("function" == typeof this.opts.onBeforeMask && this.opts.onBeforeMask.call(this, e, this.opts) || e).split("");
                                        s.checkVal.call(this, void 0, !0, !1, t);
                                    } else e = this.isRTL ? f.getBuffer.call(this).slice().reverse().join("") : f.getBuffer.call(this).join("");
                                    for (var n = f.getBuffer.call(this), i = f.determineLastRequiredPosition.call(this), a = n.length - 1; a > i && !f.isMask.call(this, a); a--) ;
                                    return n.splice(i, a + 1 - i), p.isComplete.call(this, n) && e === (this.isRTL ? f.getBuffer.call(this).slice().reverse().join("") : f.getBuffer.call(this).join(""));
                                },
                                format: function(e, t) {
                                    this.maskset = this.maskset || (0, u.generateMaskSet)(this.opts, this.noMasksCache);
                                    var n = ("function" == typeof this.opts.onBeforeMask && this.opts.onBeforeMask.call(this, e, this.opts) || e).split("");
                                    s.checkVal.call(this, void 0, !0, !1, n);
                                    var i = this.isRTL ? f.getBuffer.call(this).slice().reverse().join("") : f.getBuffer.call(this).join("");
                                    return t ? {
                                        value: i,
                                        metadata: this.getmetadata()
                                    } : i;
                                },
                                setValue: function(e) {
                                    this.el && (0, r.default)(this.el).trigger("setvalue", [ e ]);
                                },
                                analyseMask: u.analyseMask
                            }, y.extendDefaults = function(e) {
                                r.default.extend(!0, y.prototype.defaults, e);
                            }, y.extendDefinitions = function(e) {
                                r.default.extend(!0, y.prototype.definitions, e);
                            }, y.extendAliases = function(e) {
                                r.default.extend(!0, y.prototype.aliases, e);
                            }, y.format = function(e, t, n) {
                                return y(t).format(e, n);
                            }, y.unmask = function(e, t) {
                                return y(t).unmaskedvalue(e);
                            }, y.isValid = function(e, t) {
                                return y(t).isValid(e);
                            }, y.remove = function(e) {
                                "string" == typeof e && (e = m.getElementById(e) || m.querySelectorAll(e)), (e = e.nodeName ? [ e ] : e).forEach(function(e) {
                                    e.inputmask && e.inputmask.remove();
                                });
                            }, y.setValue = function(e, t) {
                                "string" == typeof e && (e = m.getElementById(e) || m.querySelectorAll(e)), (e = e.nodeName ? [ e ] : e).forEach(function(e) {
                                    e.inputmask ? e.inputmask.setValue(t) : (0, r.default)(e).trigger("setvalue", [ t ]);
                                });
                            }, y.dependencyLib = r.default, l.default.Inputmask = y;
                            t.default = y;
                        },
                        5296: function(e, t, n) {
                            function i(e) {
                                return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, i(e);
                            }
                            var a = d(n(9380)), r = d(n(2394));
                            function o(e, t) {
                                for (var n = 0; n < t.length; n++) {
                                    var a = t[n];
                                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), 
                                    Object.defineProperty(e, (r = a.key, o = void 0, o = function(e, t) {
                                        if ("object" !== i(e) || null === e) return e;
                                        var n = e[Symbol.toPrimitive];
                                        if (void 0 !== n) {
                                            var a = n.call(e, t || "default");
                                            if ("object" !== i(a)) return a;
                                            throw new TypeError("@@toPrimitive must return a primitive value.");
                                        }
                                        return ("string" === t ? String : Number)(e);
                                    }(r, "string"), "symbol" === i(o) ? o : String(o)), a);
                                }
                                var r, o;
                            }
                            function l(e) {
                                var t = u();
                                return function() {
                                    var n, a = p(e);
                                    if (t) {
                                        var r = p(this).constructor;
                                        n = Reflect.construct(a, arguments, r);
                                    } else n = a.apply(this, arguments);
                                    return function(e, t) {
                                        if (t && ("object" === i(t) || "function" == typeof t)) return t;
                                        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
                                        return function(e) {
                                            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                                            return e;
                                        }(e);
                                    }(this, n);
                                };
                            }
                            function s(e) {
                                var t = "function" == typeof Map ? new Map : void 0;
                                return s = function(e) {
                                    if (null === e || !function(e) {
                                        try {
                                            return -1 !== Function.toString.call(e).indexOf("[native code]");
                                        } catch (t) {
                                            return "function" == typeof e;
                                        }
                                    }(e)) return e;
                                    if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
                                    if (void 0 !== t) {
                                        if (t.has(e)) return t.get(e);
                                        t.set(e, n);
                                    }
                                    function n() {
                                        return c(e, arguments, p(this).constructor);
                                    }
                                    return n.prototype = Object.create(e.prototype, {
                                        constructor: {
                                            value: n,
                                            enumerable: !1,
                                            writable: !0,
                                            configurable: !0
                                        }
                                    }), f(n, e);
                                }, s(e);
                            }
                            function c(e, t, n) {
                                return c = u() ? Reflect.construct.bind() : function(e, t, n) {
                                    var i = [ null ];
                                    i.push.apply(i, t);
                                    var a = new (Function.bind.apply(e, i));
                                    return n && f(a, n.prototype), a;
                                }, c.apply(null, arguments);
                            }
                            function u() {
                                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                                if (Reflect.construct.sham) return !1;
                                if ("function" == typeof Proxy) return !0;
                                try {
                                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), 
                                    !0;
                                } catch (e) {
                                    return !1;
                                }
                            }
                            function f(e, t) {
                                return f = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                                    return e.__proto__ = t, e;
                                }, f(e, t);
                            }
                            function p(e) {
                                return p = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                                    return e.__proto__ || Object.getPrototypeOf(e);
                                }, p(e);
                            }
                            function d(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                };
                            }
                            var h = a.default.document;
                            if (h && h.head && h.head.attachShadow && a.default.customElements && void 0 === a.default.customElements.get("input-mask")) {
                                var v = function(e) {
                                    !function(e, t) {
                                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                                        e.prototype = Object.create(t && t.prototype, {
                                            constructor: {
                                                value: e,
                                                writable: !0,
                                                configurable: !0
                                            }
                                        }), Object.defineProperty(e, "prototype", {
                                            writable: !1
                                        }), t && f(e, t);
                                    }(s, e);
                                    var t, n, i, a = l(s);
                                    function s() {
                                        var e;
                                        !function(e, t) {
                                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                                        }(this, s);
                                        var t = (e = a.call(this)).getAttributeNames(), n = e.attachShadow({
                                            mode: "closed"
                                        });
                                        for (var i in e.input = h.createElement("input"), e.input.type = "text", n.appendChild(e.input), 
                                        t) Object.prototype.hasOwnProperty.call(t, i) && e.input.setAttribute(t[i], e.getAttribute(t[i]));
                                        var o = new r.default;
                                        return o.dataAttribute = "", o.mask(e.input), e.input.inputmask.shadowRoot = n, 
                                        e;
                                    }
                                    return t = s, (n = [ {
                                        key: "attributeChangedCallback",
                                        value: function(e, t, n) {
                                            this.input.setAttribute(e, n);
                                        }
                                    }, {
                                        key: "value",
                                        get: function() {
                                            return this.input.value;
                                        },
                                        set: function(e) {
                                            this.input.value = e;
                                        }
                                    } ]) && o(t.prototype, n), i && o(t, i), Object.defineProperty(t, "prototype", {
                                        writable: !1
                                    }), s;
                                }(s(HTMLElement));
                                a.default.customElements.define("input-mask", v);
                            }
                        },
                        2839: function(e, t) {
                            function n(e) {
                                return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, n(e);
                            }
                            function i(e, t) {
                                return function(e) {
                                    if (Array.isArray(e)) return e;
                                }(e) || function(e, t) {
                                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                    if (null != n) {
                                        var i, a, r, o, l = [], s = !0, c = !1;
                                        try {
                                            if (r = (n = n.call(e)).next, 0 === t) {
                                                if (Object(n) !== n) return;
                                                s = !1;
                                            } else for (;!(s = (i = r.call(n)).done) && (l.push(i.value), l.length !== t); s = !0) ;
                                        } catch (e) {
                                            c = !0, a = e;
                                        } finally {
                                            try {
                                                if (!s && null != n.return && (o = n.return(), Object(o) !== o)) return;
                                            } finally {
                                                if (c) throw a;
                                            }
                                        }
                                        return l;
                                    }
                                }(e, t) || function(e, t) {
                                    if (!e) return;
                                    if ("string" == typeof e) return a(e, t);
                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                    "Object" === n && e.constructor && (n = e.constructor.name);
                                    if ("Map" === n || "Set" === n) return Array.from(e);
                                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return a(e, t);
                                }(e, t) || function() {
                                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                }();
                            }
                            function a(e, t) {
                                (null == t || t > e.length) && (t = e.length);
                                for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
                                return i;
                            }
                            function r(e, t) {
                                var n = Object.keys(e);
                                if (Object.getOwnPropertySymbols) {
                                    var i = Object.getOwnPropertySymbols(e);
                                    t && (i = i.filter(function(t) {
                                        return Object.getOwnPropertyDescriptor(e, t).enumerable;
                                    })), n.push.apply(n, i);
                                }
                                return n;
                            }
                            function o(e, t, i) {
                                return (t = function(e) {
                                    var t = function(e, t) {
                                        if ("object" !== n(e) || null === e) return e;
                                        var i = e[Symbol.toPrimitive];
                                        if (void 0 !== i) {
                                            var a = i.call(e, t || "default");
                                            if ("object" !== n(a)) return a;
                                            throw new TypeError("@@toPrimitive must return a primitive value.");
                                        }
                                        return ("string" === t ? String : Number)(e);
                                    }(e, "string");
                                    return "symbol" === n(t) ? t : String(t);
                                }(t)) in e ? Object.defineProperty(e, t, {
                                    value: i,
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0
                                }) : e[t] = i, e;
                            }
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.keys = t.keyCode = void 0, t.toKey = function(e, t) {
                                return s[e] || (t ? String.fromCharCode(e) : String.fromCharCode(e).toLowerCase());
                            }, t.toKeyCode = function(e) {
                                return l[e];
                            };
                            var l = t.keyCode = function(e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = null != arguments[t] ? arguments[t] : {};
                                    t % 2 ? r(Object(n), !0).forEach(function(t) {
                                        o(e, t, n[t]);
                                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : r(Object(n)).forEach(function(t) {
                                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                                    });
                                }
                                return e;
                            }({
                                c: 67,
                                x: 88,
                                z: 90,
                                BACKSPACE_SAFARI: 127,
                                Enter: 13,
                                Meta_LEFT: 91,
                                Meta_RIGHT: 92,
                                Space: 32
                            }, {
                                Alt: 18,
                                AltGraph: 18,
                                ArrowDown: 40,
                                ArrowLeft: 37,
                                ArrowRight: 39,
                                ArrowUp: 38,
                                Backspace: 8,
                                CapsLock: 20,
                                Control: 17,
                                ContextMenu: 93,
                                Dead: 221,
                                Delete: 46,
                                End: 35,
                                Escape: 27,
                                F1: 112,
                                F2: 113,
                                F3: 114,
                                F4: 115,
                                F5: 116,
                                F6: 117,
                                F7: 118,
                                F8: 119,
                                F9: 120,
                                F10: 121,
                                F11: 122,
                                F12: 123,
                                Home: 36,
                                Insert: 45,
                                NumLock: 144,
                                PageDown: 34,
                                PageUp: 33,
                                Pause: 19,
                                PrintScreen: 44,
                                Process: 229,
                                Shift: 16,
                                ScrollLock: 145,
                                Tab: 9,
                                Unidentified: 229
                            }), s = Object.entries(l).reduce(function(e, t) {
                                var n = i(t, 2), a = n[0], r = n[1];
                                return e[r] = void 0 === e[r] ? a : e[r], e;
                            }, {});
                            t.keys = Object.entries(l).reduce(function(e, t) {
                                var n = i(t, 2), a = n[0];
                                n[1];
                                return e[a] = "Space" === a ? " " : a, e;
                            }, {});
                        },
                        2391: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.analyseMask = function(e, t, n) {
                                var i, a, s, c, u, f, p = /(?:[?*+]|\{[0-9+*]+(?:,[0-9+*]*)?(?:\|[0-9+*]*)?\})|[^.?*+^${[]()|\\]+|./g, d = /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g, h = !1, v = new o.default, m = [], g = [], y = !1;
                                function k(e, i, a) {
                                    a = void 0 !== a ? a : e.matches.length;
                                    var o = e.matches[a - 1];
                                    if (t) {
                                        if (0 === i.indexOf("[") || h && /\\d|\\s|\\w|\\p/i.test(i) || "." === i) {
                                            var s = n.casing ? "i" : "";
                                            /\\p\{.*}/i.test(i) && (s += "u"), e.matches.splice(a++, 0, {
                                                fn: new RegExp(i, s),
                                                static: !1,
                                                optionality: !1,
                                                newBlockMarker: void 0 === o ? "master" : o.def !== i,
                                                casing: null,
                                                def: i,
                                                placeholder: "object" === l(n.placeholder) ? n.placeholder[v.matches.length] : void 0,
                                                nativeDef: i
                                            });
                                        } else h && (i = i[i.length - 1]), i.split("").forEach(function(t, i) {
                                            o = e.matches[a - 1], e.matches.splice(a++, 0, {
                                                fn: /[a-z]/i.test(n.staticDefinitionSymbol || t) ? new RegExp("[" + (n.staticDefinitionSymbol || t) + "]", n.casing ? "i" : "") : null,
                                                static: !0,
                                                optionality: !1,
                                                newBlockMarker: void 0 === o ? "master" : o.def !== t && !0 !== o.static,
                                                casing: null,
                                                def: n.staticDefinitionSymbol || t,
                                                placeholder: void 0 !== n.staticDefinitionSymbol ? t : "object" === l(n.placeholder) ? n.placeholder[v.matches.length] : void 0,
                                                nativeDef: (h ? "'" : "") + t
                                            });
                                        });
                                        h = !1;
                                    } else {
                                        var c = n.definitions && n.definitions[i] || n.usePrototypeDefinitions && r.default.prototype.definitions[i];
                                        c && !h ? e.matches.splice(a++, 0, {
                                            fn: c.validator ? "string" == typeof c.validator ? new RegExp(c.validator, n.casing ? "i" : "") : new function() {
                                                this.test = c.validator;
                                            } : /./,
                                            static: c.static || !1,
                                            optionality: c.optional || !1,
                                            defOptionality: c.optional || !1,
                                            newBlockMarker: void 0 === o || c.optional ? "master" : o.def !== (c.definitionSymbol || i),
                                            casing: c.casing,
                                            def: c.definitionSymbol || i,
                                            placeholder: c.placeholder,
                                            nativeDef: i,
                                            generated: c.generated
                                        }) : (e.matches.splice(a++, 0, {
                                            fn: /[a-z]/i.test(n.staticDefinitionSymbol || i) ? new RegExp("[" + (n.staticDefinitionSymbol || i) + "]", n.casing ? "i" : "") : null,
                                            static: !0,
                                            optionality: !1,
                                            newBlockMarker: void 0 === o ? "master" : o.def !== i && !0 !== o.static,
                                            casing: null,
                                            def: n.staticDefinitionSymbol || i,
                                            placeholder: void 0 !== n.staticDefinitionSymbol ? i : void 0,
                                            nativeDef: (h ? "'" : "") + i
                                        }), h = !1);
                                    }
                                }
                                function b() {
                                    if (m.length > 0) {
                                        if (k(c = m[m.length - 1], a), c.isAlternator) {
                                            u = m.pop();
                                            for (var e = 0; e < u.matches.length; e++) u.matches[e].isGroup && (u.matches[e].isGroup = !1);
                                            m.length > 0 ? (c = m[m.length - 1]).matches.push(u) : v.matches.push(u);
                                        }
                                    } else k(v, a);
                                }
                                function x(e) {
                                    var t = new o.default(!0);
                                    return t.openGroup = !1, t.matches = e, t;
                                }
                                function w() {
                                    if ((s = m.pop()).openGroup = !1, void 0 !== s) if (m.length > 0) {
                                        if ((c = m[m.length - 1]).matches.push(s), c.isAlternator) {
                                            u = m.pop();
                                            for (var e = 0; e < u.matches.length; e++) u.matches[e].isGroup = !1, u.matches[e].alternatorGroup = !1;
                                            m.length > 0 ? (c = m[m.length - 1]).matches.push(u) : v.matches.push(u);
                                        }
                                    } else v.matches.push(s); else b();
                                }
                                function P(e) {
                                    var t = e.pop();
                                    return t.isQuantifier && (t = x([ e.pop(), t ])), t;
                                }
                                t && (n.optionalmarker[0] = void 0, n.optionalmarker[1] = void 0);
                                for (;i = t ? d.exec(e) : p.exec(e); ) {
                                    if (a = i[0], t) {
                                        switch (a.charAt(0)) {
                                          case "?":
                                            a = "{0,1}";
                                            break;

                                          case "+":
                                          case "*":
                                            a = "{" + a + "}";
                                            break;

                                          case "|":
                                            if (0 === m.length) {
                                                var S = x(v.matches);
                                                S.openGroup = !0, m.push(S), v.matches = [], y = !0;
                                            }
                                        }
                                        switch (a) {
                                          case "\\d":
                                            a = "[0-9]";
                                            break;

                                          case "\\p":
                                            a += d.exec(e)[0], a += d.exec(e)[0];
                                        }
                                    }
                                    if (h) b(); else switch (a.charAt(0)) {
                                      case "$":
                                      case "^":
                                        t || b();
                                        break;

                                      case n.escapeChar:
                                        h = !0, t && b();
                                        break;

                                      case n.optionalmarker[1]:
                                      case n.groupmarker[1]:
                                        w();
                                        break;

                                      case n.optionalmarker[0]:
                                        m.push(new o.default(!1, !0));
                                        break;

                                      case n.groupmarker[0]:
                                        m.push(new o.default(!0));
                                        break;

                                      case n.quantifiermarker[0]:
                                        var O = new o.default(!1, !1, !0), _ = (a = a.replace(/[{}?]/g, "")).split("|"), M = _[0].split(","), E = isNaN(M[0]) ? M[0] : parseInt(M[0]), j = 1 === M.length ? E : isNaN(M[1]) ? M[1] : parseInt(M[1]), T = isNaN(_[1]) ? _[1] : parseInt(_[1]);
                                        "*" !== E && "+" !== E || (E = "*" === j ? 0 : 1), O.quantifier = {
                                            min: E,
                                            max: j,
                                            jit: T
                                        };
                                        var A = m.length > 0 ? m[m.length - 1].matches : v.matches;
                                        (i = A.pop()).isGroup || (i = x([ i ])), A.push(i), A.push(O);
                                        break;

                                      case n.alternatormarker:
                                        if (m.length > 0) {
                                            var D = (c = m[m.length - 1]).matches[c.matches.length - 1];
                                            f = c.openGroup && (void 0 === D.matches || !1 === D.isGroup && !1 === D.isAlternator) ? m.pop() : P(c.matches);
                                        } else f = P(v.matches);
                                        if (f.isAlternator) m.push(f); else if (f.alternatorGroup ? (u = m.pop(), f.alternatorGroup = !1) : u = new o.default(!1, !1, !1, !0), 
                                        u.matches.push(f), m.push(u), f.openGroup) {
                                            f.openGroup = !1;
                                            var L = new o.default(!0);
                                            L.alternatorGroup = !0, m.push(L);
                                        }
                                        break;

                                      default:
                                        b();
                                    }
                                }
                                y && w();
                                for (;m.length > 0; ) s = m.pop(), v.matches.push(s);
                                v.matches.length > 0 && (!function e(i) {
                                    i && i.matches && i.matches.forEach(function(a, r) {
                                        var o = i.matches[r + 1];
                                        (void 0 === o || void 0 === o.matches || !1 === o.isQuantifier) && a && a.isGroup && (a.isGroup = !1, 
                                        t || (k(a, n.groupmarker[0], 0), !0 !== a.openGroup && k(a, n.groupmarker[1]))), 
                                        e(a);
                                    });
                                }(v), g.push(v));
                                (n.numericInput || n.isRTL) && function e(t) {
                                    for (var i in t.matches = t.matches.reverse(), t.matches) if (Object.prototype.hasOwnProperty.call(t.matches, i)) {
                                        var a = parseInt(i);
                                        if (t.matches[i].isQuantifier && t.matches[a + 1] && t.matches[a + 1].isGroup) {
                                            var r = t.matches[i];
                                            t.matches.splice(i, 1), t.matches.splice(a + 1, 0, r);
                                        }
                                        void 0 !== t.matches[i].matches ? t.matches[i] = e(t.matches[i]) : t.matches[i] = ((o = t.matches[i]) === n.optionalmarker[0] ? o = n.optionalmarker[1] : o === n.optionalmarker[1] ? o = n.optionalmarker[0] : o === n.groupmarker[0] ? o = n.groupmarker[1] : o === n.groupmarker[1] && (o = n.groupmarker[0]), 
                                        o);
                                    }
                                    var o;
                                    return t;
                                }(g[0]);
                                return g;
                            }, t.generateMaskSet = function(e, t) {
                                var n;
                                function o(e, t) {
                                    var n = t.repeat, i = t.groupmarker, r = t.quantifiermarker, o = t.keepStatic;
                                    if (n > 0 || "*" === n || "+" === n) {
                                        var l = "*" === n ? 0 : "+" === n ? 1 : n;
                                        if (l != n) e = i[0] + e + i[1] + r[0] + l + "," + n + r[1]; else for (var c = e, u = 1; u < l; u++) e += c;
                                    }
                                    if (!0 === o) {
                                        var f = e.match(new RegExp("(.)\\[([^\\]]*)\\]", "g"));
                                        f && f.forEach(function(t, n) {
                                            var i = function(e, t) {
                                                return function(e) {
                                                    if (Array.isArray(e)) return e;
                                                }(e) || function(e, t) {
                                                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                                                    if (null != n) {
                                                        var i, a, r, o, l = [], s = !0, c = !1;
                                                        try {
                                                            if (r = (n = n.call(e)).next, 0 === t) {
                                                                if (Object(n) !== n) return;
                                                                s = !1;
                                                            } else for (;!(s = (i = r.call(n)).done) && (l.push(i.value), l.length !== t); s = !0) ;
                                                        } catch (e) {
                                                            c = !0, a = e;
                                                        } finally {
                                                            try {
                                                                if (!s && null != n.return && (o = n.return(), Object(o) !== o)) return;
                                                            } finally {
                                                                if (c) throw a;
                                                            }
                                                        }
                                                        return l;
                                                    }
                                                }(e, t) || function(e, t) {
                                                    if (!e) return;
                                                    if ("string" == typeof e) return s(e, t);
                                                    var n = Object.prototype.toString.call(e).slice(8, -1);
                                                    "Object" === n && e.constructor && (n = e.constructor.name);
                                                    if ("Map" === n || "Set" === n) return Array.from(e);
                                                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return s(e, t);
                                                }(e, t) || function() {
                                                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                                                }();
                                            }(t.split("["), 2), r = i[0], o = i[1];
                                            o = o.replace("]", ""), e = e.replace(new RegExp("".concat((0, a.default)(r), "\\[").concat((0, 
                                            a.default)(o), "\\]")), r.charAt(0) === o.charAt(0) ? "(".concat(r, "|").concat(r).concat(o, ")") : "".concat(r, "[").concat(o, "]"));
                                        });
                                    }
                                    return e;
                                }
                                function c(e, n, a) {
                                    var s, c, u = !1;
                                    return null !== e && "" !== e || ((u = null !== a.regex) ? e = (e = a.regex).replace(/^(\^)(.*)(\$)$/, "$2") : (u = !0, 
                                    e = ".*")), 1 === e.length && !1 === a.greedy && 0 !== a.repeat && (a.placeholder = ""), 
                                    e = o(e, a), c = u ? "regex_" + a.regex : a.numericInput ? e.split("").reverse().join("") : e, 
                                    null !== a.keepStatic && (c = "ks_" + a.keepStatic + c), "object" === l(a.placeholder) && (c = "ph_" + JSON.stringify(a.placeholder) + c), 
                                    void 0 === r.default.prototype.masksCache[c] || !0 === t ? (s = {
                                        mask: e,
                                        maskToken: r.default.prototype.analyseMask(e, u, a),
                                        validPositions: [],
                                        _buffer: void 0,
                                        buffer: void 0,
                                        tests: {},
                                        excludes: {},
                                        metadata: n,
                                        maskLength: void 0,
                                        jitOffset: {}
                                    }, !0 !== t && (r.default.prototype.masksCache[c] = s, s = i.default.extend(!0, {}, r.default.prototype.masksCache[c]))) : s = i.default.extend(!0, {}, r.default.prototype.masksCache[c]), 
                                    s;
                                }
                                "function" == typeof e.mask && (e.mask = e.mask(e));
                                if (Array.isArray(e.mask)) {
                                    if (e.mask.length > 1) {
                                        null === e.keepStatic && (e.keepStatic = !0);
                                        var u = e.groupmarker[0];
                                        return (e.isRTL ? e.mask.reverse() : e.mask).forEach(function(t) {
                                            u.length > 1 && (u += e.alternatormarker), void 0 !== t.mask && "function" != typeof t.mask ? u += t.mask : u += t;
                                        }), c(u += e.groupmarker[1], e.mask, e);
                                    }
                                    e.mask = e.mask.pop();
                                }
                                n = e.mask && void 0 !== e.mask.mask && "function" != typeof e.mask.mask ? c(e.mask.mask, e.mask, e) : c(e.mask, e.mask, e);
                                null === e.keepStatic && (e.keepStatic = !1);
                                return n;
                            };
                            var i = c(n(4963)), a = c(n(7184)), r = c(n(2394)), o = c(n(9695));
                            function l(e) {
                                return l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, l(e);
                            }
                            function s(e, t) {
                                (null == t || t > e.length) && (t = e.length);
                                for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
                                return i;
                            }
                            function c(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                };
                            }
                        },
                        157: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.mask = function() {
                                var e = this, t = this.opts, n = this.el, c = this.dependencyLib;
                                r.EventRuler.off(n);
                                var u = function(t, n) {
                                    var i = t.getAttribute("type"), a = "input" === t.tagName.toLowerCase() && n.supportsInputType.includes(i) || t.isContentEditable || "textarea" === t.tagName.toLowerCase();
                                    if (!a) if ("input" === t.tagName.toLowerCase()) {
                                        var s = document.createElement("input");
                                        s.setAttribute("type", i), a = "text" === s.type, s = null;
                                    } else a = "partial";
                                    return !1 !== a ? function(t) {
                                        var i, a;
                                        function s() {
                                            return this.inputmask ? this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : -1 !== l.getLastValidPosition.call(e) || !0 !== n.nullable ? (this.inputmask.shadowRoot || this.ownerDocument).activeElement === this && n.clearMaskOnLostFocus ? (e.isRTL ? o.clearOptionalTail.call(e, l.getBuffer.call(e).slice()).reverse() : o.clearOptionalTail.call(e, l.getBuffer.call(e).slice())).join("") : i.call(this) : "" : i.call(this);
                                        }
                                        function u(e) {
                                            a.call(this, e), this.inputmask && (0, o.applyInputValue)(this, e);
                                        }
                                        if (!t.inputmask.__valueGet) {
                                            if (!0 !== n.noValuePatching) {
                                                if (Object.getOwnPropertyDescriptor) {
                                                    var f = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t), "value") : void 0;
                                                    f && f.get && f.set ? (i = f.get, a = f.set, Object.defineProperty(t, "value", {
                                                        get: s,
                                                        set: u,
                                                        configurable: !0
                                                    })) : "input" !== t.tagName.toLowerCase() && (i = function() {
                                                        return this.textContent;
                                                    }, a = function(e) {
                                                        this.textContent = e;
                                                    }, Object.defineProperty(t, "value", {
                                                        get: s,
                                                        set: u,
                                                        configurable: !0
                                                    }));
                                                } else document.__lookupGetter__ && t.__lookupGetter__("value") && (i = t.__lookupGetter__("value"), 
                                                a = t.__lookupSetter__("value"), t.__defineGetter__("value", s), t.__defineSetter__("value", u));
                                                t.inputmask.__valueGet = i, t.inputmask.__valueSet = a;
                                            }
                                            t.inputmask._valueGet = function(t) {
                                                return e.isRTL && !0 !== t ? i.call(this.el).split("").reverse().join("") : i.call(this.el);
                                            }, t.inputmask._valueSet = function(t, n) {
                                                a.call(this.el, null == t ? "" : !0 !== n && e.isRTL ? t.split("").reverse().join("") : t);
                                            }, void 0 === i && (i = function() {
                                                return this.value;
                                            }, a = function(e) {
                                                this.value = e;
                                            }, function(t) {
                                                if (c.valHooks && (void 0 === c.valHooks[t] || !0 !== c.valHooks[t].inputmaskpatch)) {
                                                    var i = c.valHooks[t] && c.valHooks[t].get ? c.valHooks[t].get : function(e) {
                                                        return e.value;
                                                    }, a = c.valHooks[t] && c.valHooks[t].set ? c.valHooks[t].set : function(e, t) {
                                                        return e.value = t, e;
                                                    };
                                                    c.valHooks[t] = {
                                                        get: function(t) {
                                                            if (t.inputmask) {
                                                                if (t.inputmask.opts.autoUnmask) return t.inputmask.unmaskedvalue();
                                                                var a = i(t);
                                                                return -1 !== l.getLastValidPosition.call(e, void 0, void 0, t.inputmask.maskset.validPositions) || !0 !== n.nullable ? a : "";
                                                            }
                                                            return i(t);
                                                        },
                                                        set: function(e, t) {
                                                            var n = a(e, t);
                                                            return e.inputmask && (0, o.applyInputValue)(e, t), n;
                                                        },
                                                        inputmaskpatch: !0
                                                    };
                                                }
                                            }(t.type), function(e) {
                                                r.EventRuler.on(e, "mouseenter", function() {
                                                    var e = this, t = e.inputmask._valueGet(!0);
                                                    t != (e.inputmask.isRTL ? l.getBuffer.call(e.inputmask).slice().reverse() : l.getBuffer.call(e.inputmask)).join("") && (0, 
                                                    o.applyInputValue)(e, t);
                                                });
                                            }(t));
                                        }
                                    }(t) : t.inputmask = void 0, a;
                                }(n, t);
                                if (!1 !== u) {
                                    e.originalPlaceholder = n.placeholder, e.maxLength = void 0 !== n ? n.maxLength : void 0, 
                                    -1 === e.maxLength && (e.maxLength = void 0), "inputMode" in n && null === n.getAttribute("inputmode") && (n.inputMode = t.inputmode, 
                                    n.setAttribute("inputmode", t.inputmode)), !0 === u && (t.showMaskOnFocus = t.showMaskOnFocus && -1 === [ "cc-number", "cc-exp" ].indexOf(n.autocomplete), 
                                    i.iphone && (t.insertModeVisual = !1, n.setAttribute("autocorrect", "off")), r.EventRuler.on(n, "submit", a.EventHandlers.submitEvent), 
                                    r.EventRuler.on(n, "reset", a.EventHandlers.resetEvent), r.EventRuler.on(n, "blur", a.EventHandlers.blurEvent), 
                                    r.EventRuler.on(n, "focus", a.EventHandlers.focusEvent), r.EventRuler.on(n, "invalid", a.EventHandlers.invalidEvent), 
                                    r.EventRuler.on(n, "click", a.EventHandlers.clickEvent), r.EventRuler.on(n, "mouseleave", a.EventHandlers.mouseleaveEvent), 
                                    r.EventRuler.on(n, "mouseenter", a.EventHandlers.mouseenterEvent), r.EventRuler.on(n, "paste", a.EventHandlers.pasteEvent), 
                                    r.EventRuler.on(n, "cut", a.EventHandlers.cutEvent), r.EventRuler.on(n, "complete", t.oncomplete), 
                                    r.EventRuler.on(n, "incomplete", t.onincomplete), r.EventRuler.on(n, "cleared", t.oncleared), 
                                    !0 !== t.inputEventOnly && r.EventRuler.on(n, "keydown", a.EventHandlers.keyEvent), 
                                    (i.mobile || t.inputEventOnly) && n.removeAttribute("maxLength"), r.EventRuler.on(n, "input", a.EventHandlers.inputFallBackEvent)), 
                                    r.EventRuler.on(n, "setvalue", a.EventHandlers.setValueEvent), void 0 === e.applyMaskHook || e.applyMaskHook(), 
                                    l.getBufferTemplate.call(e).join(""), e.undoValue = e._valueGet(!0);
                                    var f = (n.inputmask.shadowRoot || n.ownerDocument).activeElement;
                                    if ("" !== n.inputmask._valueGet(!0) || !1 === t.clearMaskOnLostFocus || f === n) {
                                        (0, o.applyInputValue)(n, n.inputmask._valueGet(!0), t);
                                        var p = l.getBuffer.call(e).slice();
                                        !1 === s.isComplete.call(e, p) && t.clearIncomplete && l.resetMaskSet.call(e, !1), 
                                        t.clearMaskOnLostFocus && f !== n && (-1 === l.getLastValidPosition.call(e) ? p = [] : o.clearOptionalTail.call(e, p)), 
                                        (!1 === t.clearMaskOnLostFocus || t.showMaskOnFocus && f === n || "" !== n.inputmask._valueGet(!0)) && (0, 
                                        o.writeBuffer)(n, p), f === n && l.caret.call(e, n, l.seekNext.call(e, l.getLastValidPosition.call(e)));
                                    }
                                }
                            };
                            var i = n(9845), a = n(6030), r = n(9716), o = n(7760), l = n(8711), s = n(7215);
                        },
                        9695: function(e, t) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.default = function(e, t, n, i) {
                                this.matches = [], this.openGroup = e || !1, this.alternatorGroup = !1, this.isGroup = e || !1, 
                                this.isOptional = t || !1, this.isQuantifier = n || !1, this.isAlternator = i || !1, 
                                this.quantifier = {
                                    min: 1,
                                    max: 1
                                };
                            };
                        },
                        3194: function() {
                            Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", {
                                value: function(e, t) {
                                    if (null == this) throw new TypeError('"this" is null or not defined');
                                    var n = Object(this), i = n.length >>> 0;
                                    if (0 === i) return !1;
                                    for (var a = 0 | t, r = Math.max(a >= 0 ? a : i - Math.abs(a), 0); r < i; ) {
                                        if (n[r] === e) return !0;
                                        r++;
                                    }
                                    return !1;
                                }
                            });
                        },
                        9302: function() {
                            var e = Function.bind.call(Function.call, Array.prototype.reduce), t = Function.bind.call(Function.call, Object.prototype.propertyIsEnumerable), n = Function.bind.call(Function.call, Array.prototype.concat), i = Object.keys;
                            Object.entries || (Object.entries = function(a) {
                                return e(i(a), function(e, i) {
                                    return n(e, "string" == typeof i && t(a, i) ? [ [ i, a[i] ] ] : []);
                                }, []);
                            });
                        },
                        7149: function() {
                            function e(t) {
                                return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, e(t);
                            }
                            "function" != typeof Object.getPrototypeOf && (Object.getPrototypeOf = "object" === e("test".__proto__) ? function(e) {
                                return e.__proto__;
                            } : function(e) {
                                return e.constructor.prototype;
                            });
                        },
                        4013: function() {
                            String.prototype.includes || (String.prototype.includes = function(e, t) {
                                return "number" != typeof t && (t = 0), !(t + e.length > this.length) && -1 !== this.indexOf(e, t);
                            });
                        },
                        8711: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.caret = function(e, t, n, i, r) {
                                var o, l = this, s = this.opts;
                                if (void 0 === t) return "selectionStart" in e && "selectionEnd" in e ? (t = e.selectionStart, 
                                n = e.selectionEnd) : a.default.getSelection ? (o = a.default.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode !== e && o.commonAncestorContainer !== e || (t = o.startOffset, 
                                n = o.endOffset) : document.selection && document.selection.createRange && (n = (t = 0 - (o = document.selection.createRange()).duplicate().moveStart("character", -e.inputmask._valueGet().length)) + o.text.length), 
                                {
                                    begin: i ? t : f.call(l, t),
                                    end: i ? n : f.call(l, n)
                                };
                                if (Array.isArray(t) && (n = l.isRTL ? t[0] : t[1], t = l.isRTL ? t[1] : t[0]), 
                                void 0 !== t.begin && (n = l.isRTL ? t.begin : t.end, t = l.isRTL ? t.end : t.begin), 
                                "number" == typeof t) {
                                    t = i ? t : f.call(l, t), n = "number" == typeof (n = i ? n : f.call(l, n)) ? n : t;
                                    var c = parseInt(((e.ownerDocument.defaultView || a.default).getComputedStyle ? (e.ownerDocument.defaultView || a.default).getComputedStyle(e, null) : e.currentStyle).fontSize) * n;
                                    if (e.scrollLeft = c > e.scrollWidth ? c : 0, e.inputmask.caretPos = {
                                        begin: t,
                                        end: n
                                    }, s.insertModeVisual && !1 === s.insertMode && t === n && (r || n++), e === (e.inputmask.shadowRoot || e.ownerDocument).activeElement) {
                                        if ("setSelectionRange" in e) e.setSelectionRange(t, n); else if (a.default.getSelection) {
                                            if (o = document.createRange(), void 0 === e.firstChild || null === e.firstChild) {
                                                var u = document.createTextNode("");
                                                e.appendChild(u);
                                            }
                                            o.setStart(e.firstChild, t < e.inputmask._valueGet().length ? t : e.inputmask._valueGet().length), 
                                            o.setEnd(e.firstChild, n < e.inputmask._valueGet().length ? n : e.inputmask._valueGet().length), 
                                            o.collapse(!0);
                                            var p = a.default.getSelection();
                                            p.removeAllRanges(), p.addRange(o);
                                        } else e.createTextRange && ((o = e.createTextRange()).collapse(!0), o.moveEnd("character", n), 
                                        o.moveStart("character", t), o.select());
                                        void 0 === e.inputmask.caretHook || e.inputmask.caretHook.call(l, {
                                            begin: t,
                                            end: n
                                        });
                                    }
                                }
                            }, t.determineLastRequiredPosition = function(e) {
                                var t, n, i = this, a = i.maskset, l = i.dependencyLib, c = s.call(i), u = {}, f = a.validPositions[c], p = o.getMaskTemplate.call(i, !0, s.call(i), !0, !0), d = p.length, h = void 0 !== f ? f.locator.slice() : void 0;
                                for (t = c + 1; t < p.length; t++) h = (n = o.getTestTemplate.call(i, t, h, t - 1)).locator.slice(), 
                                u[t] = l.extend(!0, {}, n);
                                var v = f && void 0 !== f.alternation ? f.locator[f.alternation] : void 0;
                                for (t = d - 1; t > c && ((n = u[t]).match.optionality || n.match.optionalQuantifier && n.match.newBlockMarker || v && (v !== u[t].locator[f.alternation] && !0 !== n.match.static || !0 === n.match.static && n.locator[f.alternation] && r.checkAlternationMatch.call(i, n.locator[f.alternation].toString().split(","), v.toString().split(",")) && "" !== o.getTests.call(i, t)[0].def)) && p[t] === o.getPlaceholder.call(i, t, n.match); t--) d--;
                                return e ? {
                                    l: d,
                                    def: u[d] ? u[d].match : void 0
                                } : d;
                            }, t.determineNewCaretPosition = function(e, t, n) {
                                var i, a, r, f = this, p = f.maskset, d = f.opts;
                                t && (f.isRTL ? e.end = e.begin : e.begin = e.end);
                                if (e.begin === e.end) {
                                    switch (n = n || d.positionCaretOnClick) {
                                      case "none":
                                        break;

                                      case "select":
                                        e = {
                                            begin: 0,
                                            end: l.call(f).length
                                        };
                                        break;

                                      case "ignore":
                                        e.end = e.begin = u.call(f, s.call(f));
                                        break;

                                      case "radixFocus":
                                        if (f.clicked > 1 && 0 === p.validPositions.length) break;
                                        if (function(e) {
                                            if ("" !== d.radixPoint && 0 !== d.digits) {
                                                var t = p.validPositions;
                                                if (void 0 === t[e] || void 0 === t[e].input) {
                                                    if (e < u.call(f, -1)) return !0;
                                                    var n = l.call(f).indexOf(d.radixPoint);
                                                    if (-1 !== n) {
                                                        for (var i = 0, a = t.length; i < a; i++) if (t[i] && n < i && t[i].input !== o.getPlaceholder.call(f, i)) return !1;
                                                        return !0;
                                                    }
                                                }
                                            }
                                            return !1;
                                        }(e.begin)) {
                                            var h = l.call(f).join("").indexOf(d.radixPoint);
                                            e.end = e.begin = d.numericInput ? u.call(f, h) : h;
                                            break;
                                        }

                                      default:
                                        if (i = e.begin, a = s.call(f, i, !0), i <= (r = u.call(f, -1 !== a || c.call(f, 0) ? a : -1))) e.end = e.begin = c.call(f, i, !1, !0) ? i : u.call(f, i); else {
                                            var v = p.validPositions[a], m = o.getTestTemplate.call(f, r, v ? v.match.locator : void 0, v), g = o.getPlaceholder.call(f, r, m.match);
                                            if ("" !== g && l.call(f)[r] !== g && !0 !== m.match.optionalQuantifier && !0 !== m.match.newBlockMarker || !c.call(f, r, d.keepStatic, !0) && m.match.def === g) {
                                                var y = u.call(f, r);
                                                (i >= y || i === r) && (r = y);
                                            }
                                            e.end = e.begin = r;
                                        }
                                    }
                                    return e;
                                }
                            }, t.getBuffer = l, t.getBufferTemplate = function() {
                                var e = this.maskset;
                                void 0 === e._buffer && (e._buffer = o.getMaskTemplate.call(this, !1, 1), void 0 === e.buffer && (e.buffer = e._buffer.slice()));
                                return e._buffer;
                            }, t.getLastValidPosition = s, t.isMask = c, t.resetMaskSet = function(e) {
                                var t = this.maskset;
                                t.buffer = void 0, !0 !== e && (t.validPositions = [], t.p = 0);
                                !1 === e && (t.tests = {}, t.jitOffset = {});
                            }, t.seekNext = u, t.seekPrevious = function(e, t) {
                                var n = this, i = e - 1;
                                if (e <= 0) return 0;
                                for (;i > 0 && (!0 === t && (!0 !== o.getTest.call(n, i).match.newBlockMarker || !c.call(n, i, void 0, !0)) || !0 !== t && !c.call(n, i, void 0, !0)); ) i--;
                                return i;
                            }, t.translatePosition = f;
                            var i, a = (i = n(9380)) && i.__esModule ? i : {
                                default: i
                            }, r = n(7215), o = n(4713);
                            function l(e) {
                                var t = this, n = t.maskset;
                                return void 0 !== n.buffer && !0 !== e || (n.buffer = o.getMaskTemplate.call(t, !0, s.call(t), !0), 
                                void 0 === n._buffer && (n._buffer = n.buffer.slice())), n.buffer;
                            }
                            function s(e, t, n) {
                                var i = this.maskset, a = -1, r = -1, o = n || i.validPositions;
                                void 0 === e && (e = -1);
                                for (var l = 0, s = o.length; l < s; l++) o[l] && (t || !0 !== o[l].generatedInput) && (l <= e && (a = l), 
                                l >= e && (r = l));
                                return -1 === a || a === e ? r : -1 === r || e - a < r - e ? a : r;
                            }
                            function c(e, t, n) {
                                var i = this, a = this.maskset, r = o.getTestTemplate.call(i, e).match;
                                if ("" === r.def && (r = o.getTest.call(i, e).match), !0 !== r.static) return r.fn;
                                if (!0 === n && void 0 !== a.validPositions[e] && !0 !== a.validPositions[e].generatedInput) return !0;
                                if (!0 !== t && e > -1) {
                                    if (n) {
                                        var l = o.getTests.call(i, e);
                                        return l.length > 1 + ("" === l[l.length - 1].match.def ? 1 : 0);
                                    }
                                    var s = o.determineTestTemplate.call(i, e, o.getTests.call(i, e)), c = o.getPlaceholder.call(i, e, s.match);
                                    return s.match.def !== c;
                                }
                                return !1;
                            }
                            function u(e, t, n) {
                                var i = this;
                                void 0 === n && (n = !0);
                                for (var a = e + 1; "" !== o.getTest.call(i, a).match.def && (!0 === t && (!0 !== o.getTest.call(i, a).match.newBlockMarker || !c.call(i, a, void 0, !0)) || !0 !== t && !c.call(i, a, void 0, n)); ) a++;
                                return a;
                            }
                            function f(e) {
                                var t = this.opts, n = this.el;
                                return !this.isRTL || "number" != typeof e || t.greedy && "" === t.placeholder || !n || (e = this._valueGet().length - e) < 0 && (e = 0), 
                                e;
                            }
                        },
                        4713: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.determineTestTemplate = f, t.getDecisionTaker = s, t.getMaskTemplate = function(e, t, n, i, a) {
                                var r = this, o = this.opts, l = this.maskset, s = o.greedy;
                                a && o.greedy && (o.greedy = !1, r.maskset.tests = {});
                                t = t || 0;
                                var p, d, v, m, g = [], y = 0;
                                do {
                                    if (!0 === e && l.validPositions[y]) d = (v = a && l.validPositions[y].match.optionality && void 0 === l.validPositions[y + 1] && (!0 === l.validPositions[y].generatedInput || l.validPositions[y].input == o.skipOptionalPartCharacter && y > 0) ? f.call(r, y, h.call(r, y, p, y - 1)) : l.validPositions[y]).match, 
                                    p = v.locator.slice(), g.push(!0 === n ? v.input : !1 === n ? d.nativeDef : c.call(r, y, d)); else {
                                        d = (v = u.call(r, y, p, y - 1)).match, p = v.locator.slice();
                                        var k = !0 !== i && (!1 !== o.jitMasking ? o.jitMasking : d.jit);
                                        (m = (m || l.validPositions[y - 1]) && d.static && d.def !== o.groupSeparator && null === d.fn) || !1 === k || void 0 === k || "number" == typeof k && isFinite(k) && k > y ? g.push(!1 === n ? d.nativeDef : c.call(r, g.length, d)) : m = !1;
                                    }
                                    y++;
                                } while (!0 !== d.static || "" !== d.def || t > y);
                                "" === g[g.length - 1] && g.pop();
                                !1 === n && void 0 !== l.maskLength || (l.maskLength = y - 1);
                                return o.greedy = s, g;
                            }, t.getPlaceholder = c, t.getTest = p, t.getTestTemplate = u, t.getTests = h, t.isSubsetOf = d;
                            var i, a = (i = n(2394)) && i.__esModule ? i : {
                                default: i
                            }, r = n(8711);
                            function o(e) {
                                return o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e;
                                } : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                                }, o(e);
                            }
                            function l(e, t) {
                                var n = (null != e.alternation ? e.mloc[s(e)] : e.locator).join("");
                                if ("" !== n) for (n = n.split(":")[0]; n.length < t; ) n += "0";
                                return n;
                            }
                            function s(e) {
                                var t = e.locator[e.alternation];
                                return "string" == typeof t && t.length > 0 && (t = t.split(",")[0]), void 0 !== t ? t.toString() : "";
                            }
                            function c(e, t, n) {
                                var i = this, a = this.opts, l = this.maskset;
                                if (void 0 !== (t = t || p.call(i, e).match).placeholder || !0 === n) {
                                    if ("" !== t.placeholder && !0 === t.static && !0 !== t.generated) {
                                        var s = r.getLastValidPosition.call(i, e), c = r.seekNext.call(i, s);
                                        return (n ? e <= c : e < c) ? a.staticDefinitionSymbol && t.static ? t.nativeDef : t.def : "function" == typeof t.placeholder ? t.placeholder(a) : t.placeholder;
                                    }
                                    return "function" == typeof t.placeholder ? t.placeholder(a) : t.placeholder;
                                }
                                if (!0 === t.static) {
                                    if (e > -1 && void 0 === l.validPositions[e]) {
                                        var u, f = h.call(i, e), d = [];
                                        if ("string" == typeof a.placeholder && f.length > 1 + ("" === f[f.length - 1].match.def ? 1 : 0)) for (var v = 0; v < f.length; v++) if ("" !== f[v].match.def && !0 !== f[v].match.optionality && !0 !== f[v].match.optionalQuantifier && (!0 === f[v].match.static || void 0 === u || !1 !== f[v].match.fn.test(u.match.def, l, e, !0, a)) && (d.push(f[v]), 
                                        !0 === f[v].match.static && (u = f[v]), d.length > 1 && /[0-9a-bA-Z]/.test(d[0].match.def))) return a.placeholder.charAt(e % a.placeholder.length);
                                    }
                                    return t.def;
                                }
                                return "object" === o(a.placeholder) ? t.def : a.placeholder.charAt(e % a.placeholder.length);
                            }
                            function u(e, t, n) {
                                return this.maskset.validPositions[e] || f.call(this, e, h.call(this, e, t ? t.slice() : t, n));
                            }
                            function f(e, t) {
                                var n = this.opts, i = 0, a = function(e, t) {
                                    var n = 0, i = !1;
                                    t.forEach(function(e) {
                                        e.match.optionality && (0 !== n && n !== e.match.optionality && (i = !0), (0 === n || n > e.match.optionality) && (n = e.match.optionality));
                                    }), n && (0 == e || 1 == t.length ? n = 0 : i || (n = 0));
                                    return n;
                                }(e, t);
                                e = e > 0 ? e - 1 : 0;
                                var r, o, s, c = l(p.call(this, e));
                                n.greedy && t.length > 1 && "" === t[t.length - 1].match.def && (i = 1);
                                for (var u = 0; u < t.length - i; u++) {
                                    var f = t[u];
                                    r = l(f, c.length);
                                    var d = Math.abs(r - c);
                                    (!0 !== f.unMatchedAlternationStopped || t.filter(function(e) {
                                        return !0 !== e.unMatchedAlternationStopped;
                                    }).length <= 1) && (void 0 === o || "" !== r && d < o || s && !n.greedy && s.match.optionality && s.match.optionality - a > 0 && "master" === s.match.newBlockMarker && (!f.match.optionality || f.match.optionality - a < 1 || !f.match.newBlockMarker) || s && !n.greedy && s.match.optionalQuantifier && !f.match.optionalQuantifier) && (o = d, 
                                    s = f);
                                }
                                return s;
                            }
                            function p(e, t) {
                                var n = this.maskset;
                                return n.validPositions[e] ? n.validPositions[e] : (t || h.call(this, e))[0];
                            }
                            function d(e, t, n) {
                                function i(e) {
                                    for (var t, n = [], i = -1, a = 0, r = e.length; a < r; a++) if ("-" === e.charAt(a)) for (t = e.charCodeAt(a + 1); ++i < t; ) n.push(String.fromCharCode(i)); else i = e.charCodeAt(a), 
                                    n.push(e.charAt(a));
                                    return n.join("");
                                }
                                return e.match.def === t.match.nativeDef || !(!(n.regex || e.match.fn instanceof RegExp && t.match.fn instanceof RegExp) || !0 === e.match.static || !0 === t.match.static) && ("." === t.match.fn.source || -1 !== i(t.match.fn.source.replace(/[[\]/]/g, "")).indexOf(i(e.match.fn.source.replace(/[[\]/]/g, ""))));
                            }
                            function h(e, t, n) {
                                var i, r, o = this, l = this.dependencyLib, s = this.maskset, c = this.opts, u = this.el, p = s.maskToken, h = t ? n : 0, v = t ? t.slice() : [ 0 ], m = [], g = !1, y = t ? t.join("") : "", k = !1;
                                function b(t, n, r, l) {
                                    function f(r, l, p) {
                                        function v(e, t) {
                                            var n = 0 === t.matches.indexOf(e);
                                            return n || t.matches.every(function(i, a) {
                                                return !0 === i.isQuantifier ? n = v(e, t.matches[a - 1]) : Object.prototype.hasOwnProperty.call(i, "matches") && (n = v(e, i)), 
                                                !n;
                                            }), n;
                                        }
                                        function w(e, t, n) {
                                            var i, a;
                                            if ((s.tests[e] || s.validPositions[e]) && (s.validPositions[e] ? [ s.validPositions[e] ] : s.tests[e]).every(function(e, r) {
                                                if (e.mloc[t]) return i = e, !1;
                                                var o = void 0 !== n ? n : e.alternation, l = void 0 !== e.locator[o] ? e.locator[o].toString().indexOf(t) : -1;
                                                return (void 0 === a || l < a) && -1 !== l && (i = e, a = l), !0;
                                            }), i) {
                                                var r = i.locator[i.alternation], o = i.mloc[t] || i.mloc[r] || i.locator;
                                                if (-1 !== o[o.length - 1].toString().indexOf(":")) o.pop();
                                                return o.slice((void 0 !== n ? n : i.alternation) + 1);
                                            }
                                            return void 0 !== n ? w(e, t) : void 0;
                                        }
                                        function P(t, n) {
                                            return !0 === t.match.static && !0 !== n.match.static && n.match.fn.test(t.match.def, s, e, !1, c, !1);
                                        }
                                        function S(e, t) {
                                            var n = e.alternation, i = void 0 === t || n <= t.alternation && -1 === e.locator[n].toString().indexOf(t.locator[n]);
                                            if (!i && n > t.alternation) for (var a = 0; a < n; a++) if (e.locator[a] !== t.locator[a]) {
                                                n = a, i = !0;
                                                break;
                                            }
                                            return !!i && function(n) {
                                                e.mloc = e.mloc || {};
                                                var i = e.locator[n];
                                                if (void 0 !== i) {
                                                    if ("string" == typeof i && (i = i.split(",")[0]), void 0 === e.mloc[i] && (e.mloc[i] = e.locator.slice(), 
                                                    e.mloc[i].push(":".concat(e.alternation))), void 0 !== t) {
                                                        for (var a in t.mloc) "string" == typeof a && (a = parseInt(a.split(",")[0])), e.mloc[a + 0] = t.mloc[a];
                                                        e.locator[n] = Object.keys(e.mloc).join(",");
                                                    }
                                                    return e.alternation > n && (e.alternation = n), !0;
                                                }
                                                return e.alternation = void 0, !1;
                                            }(n);
                                        }
                                        function O(e, t) {
                                            if (e.locator.length !== t.locator.length) return !1;
                                            for (var n = e.alternation + 1; n < e.locator.length; n++) if (e.locator[n] !== t.locator[n]) return !1;
                                            return !0;
                                        }
                                        if (h > e + c._maxTestPos) throw new Error("Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. ".concat(s.mask));
                                        if (h === e && void 0 === r.matches) {
                                            if (m.push({
                                                match: r,
                                                locator: l.reverse(),
                                                cd: y,
                                                mloc: {}
                                            }), !r.optionality || void 0 !== p || !(c.definitions && c.definitions[r.nativeDef] && c.definitions[r.nativeDef].optional || a.default.prototype.definitions[r.nativeDef] && a.default.prototype.definitions[r.nativeDef].optional)) return !0;
                                            g = !0, h = e;
                                        } else if (void 0 !== r.matches) {
                                            if (r.isGroup && p !== r) return function() {
                                                if (r = f(t.matches[t.matches.indexOf(r) + 1], l, p)) return !0;
                                            }();
                                            if (r.isOptional) return function() {
                                                var t = r, a = m.length;
                                                if (r = b(r, n, l, p), m.length > 0) {
                                                    if (m.forEach(function(e, t) {
                                                        t >= a && (e.match.optionality = e.match.optionality ? e.match.optionality + 1 : 1);
                                                    }), i = m[m.length - 1].match, void 0 !== p || !v(i, t)) return r;
                                                    g = !0, h = e;
                                                }
                                            }();
                                            if (r.isAlternator) return function() {
                                                function i(e) {
                                                    for (var t, n = e.matches[0].matches ? e.matches[0].matches.length : 1, i = 0; i < e.matches.length && n === (t = e.matches[i].matches ? e.matches[i].matches.length : 1); i++) ;
                                                    return n !== t;
                                                }
                                                o.hasAlternator = !0;
                                                var a, v = r, y = [], b = m.slice(), x = l.length, _ = n.length > 0 ? n.shift() : -1;
                                                if (-1 === _ || "string" == typeof _) {
                                                    var M, E = h, j = n.slice(), T = [];
                                                    if ("string" == typeof _) T = _.split(","); else for (M = 0; M < v.matches.length; M++) T.push(M.toString());
                                                    if (void 0 !== s.excludes[e]) {
                                                        for (var A = T.slice(), D = 0, L = s.excludes[e].length; D < L; D++) {
                                                            var C = s.excludes[e][D].toString().split(":");
                                                            l.length == C[1] && T.splice(T.indexOf(C[0]), 1);
                                                        }
                                                        0 === T.length && (delete s.excludes[e], T = A);
                                                    }
                                                    (!0 === c.keepStatic || isFinite(parseInt(c.keepStatic)) && E >= c.keepStatic) && (T = T.slice(0, 1));
                                                    for (var B = 0; B < T.length; B++) {
                                                        M = parseInt(T[B]), m = [], n = "string" == typeof _ && w(h, M, x) || j.slice();
                                                        var I = v.matches[M];
                                                        if (I && f(I, [ M ].concat(l), p)) r = !0; else if (0 === B && (k = i(v)), I && I.matches && I.matches.length > v.matches[0].matches.length) break;
                                                        a = m.slice(), h = E, m = [];
                                                        for (var R = 0; R < a.length; R++) {
                                                            var F = a[R], N = !1;
                                                            F.alternation = F.alternation || x, S(F);
                                                            for (var V = 0; V < y.length; V++) {
                                                                var G = y[V];
                                                                if ("string" != typeof _ || void 0 !== F.alternation && T.includes(F.locator[F.alternation].toString())) {
                                                                    if (F.match.nativeDef === G.match.nativeDef) {
                                                                        N = !0, S(G, F);
                                                                        break;
                                                                    }
                                                                    if (d(F, G, c)) {
                                                                        S(F, G) && (N = !0, y.splice(y.indexOf(G), 0, F));
                                                                        break;
                                                                    }
                                                                    if (d(G, F, c)) {
                                                                        S(G, F);
                                                                        break;
                                                                    }
                                                                    if (P(F, G)) {
                                                                        O(F, G) || void 0 !== u.inputmask.userOptions.keepStatic ? S(F, G) && (N = !0, y.splice(y.indexOf(G), 0, F)) : c.keepStatic = !0;
                                                                        break;
                                                                    }
                                                                    if (P(G, F)) {
                                                                        S(G, F);
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                            N || y.push(F);
                                                        }
                                                    }
                                                    m = b.concat(y), h = e, g = m.length > 0 && k, r = y.length > 0 && !k, k && g && !r && m.forEach(function(e, t) {
                                                        e.unMatchedAlternationStopped = !0;
                                                    }), n = j.slice();
                                                } else r = f(v.matches[_] || t.matches[_], [ _ ].concat(l), p);
                                                if (r) return !0;
                                            }();
                                            if (r.isQuantifier && p !== t.matches[t.matches.indexOf(r) - 1]) return function() {
                                                for (var a = r, o = !1, u = n.length > 0 ? n.shift() : 0; u < (isNaN(a.quantifier.max) ? u + 1 : a.quantifier.max) && h <= e; u++) {
                                                    var p = t.matches[t.matches.indexOf(a) - 1];
                                                    if (r = f(p, [ u ].concat(l), p)) {
                                                        if (m.forEach(function(t, n) {
                                                            (i = x(p, t.match) ? t.match : m[m.length - 1].match).optionalQuantifier = u >= a.quantifier.min, 
                                                            i.jit = (u + 1) * (p.matches.indexOf(i) + 1) > a.quantifier.jit, i.optionalQuantifier && v(i, p) && (g = !0, 
                                                            h = e, c.greedy && null == s.validPositions[e - 1] && u > a.quantifier.min && -1 != [ "*", "+" ].indexOf(a.quantifier.max) && (m.pop(), 
                                                            y = void 0), o = !0, r = !1), !o && i.jit && (s.jitOffset[e] = p.matches.length - p.matches.indexOf(i));
                                                        }), o) break;
                                                        return !0;
                                                    }
                                                }
                                            }();
                                            if (r = b(r, n, l, p)) return !0;
                                        } else h++;
                                    }
                                    for (var p = n.length > 0 ? n.shift() : 0; p < t.matches.length; p++) if (!0 !== t.matches[p].isQuantifier) {
                                        var v = f(t.matches[p], [ p ].concat(r), l);
                                        if (v && h === e) return v;
                                        if (h > e) break;
                                    }
                                }
                                function x(e, t) {
                                    var n = -1 != e.matches.indexOf(t);
                                    return n || e.matches.forEach(function(e, i) {
                                        void 0 === e.matches || n || (n = x(e, t));
                                    }), n;
                                }
                                if (e > -1) {
                                    if (void 0 === t) {
                                        for (var w, P = e - 1; void 0 === (w = s.validPositions[P] || s.tests[P]) && P > -1; ) P--;
                                        void 0 !== w && P > -1 && (v = function(e, t) {
                                            var n, i = [];
                                            return Array.isArray(t) || (t = [ t ]), t.length > 0 && (void 0 === t[0].alternation || !0 === c.keepStatic ? 0 === (i = f.call(o, e, t.slice()).locator.slice()).length && (i = t[0].locator.slice()) : t.forEach(function(e) {
                                                "" !== e.def && (0 === i.length ? (n = e.alternation, i = e.locator.slice()) : e.locator[n] && -1 === i[n].toString().indexOf(e.locator[n]) && (i[n] += "," + e.locator[n]));
                                            })), i;
                                        }(P, w), y = v.join(""), h = P);
                                    }
                                    if (s.tests[e] && s.tests[e][0].cd === y) return s.tests[e];
                                    for (var S = v.shift(); S < p.length; S++) if (b(p[S], v, [ S ]) && h === e || h > e) break;
                                }
                                return (0 === m.length || g) && m.push({
                                    match: {
                                        fn: null,
                                        static: !0,
                                        optionality: !1,
                                        casing: null,
                                        def: "",
                                        placeholder: ""
                                    },
                                    locator: k && 0 === m.filter(function(e) {
                                        return !0 !== e.unMatchedAlternationStopped;
                                    }).length ? [ 0 ] : [],
                                    mloc: {},
                                    cd: y
                                }), void 0 !== t && s.tests[e] ? r = l.extend(!0, [], m) : (s.tests[e] = l.extend(!0, [], m), 
                                r = s.tests[e]), m.forEach(function(e) {
                                    e.match.optionality = e.match.defOptionality || !1;
                                }), r;
                            }
                        },
                        7215: function(e, t, n) {
                            Object.defineProperty(t, "__esModule", {
                                value: !0
                            }), t.alternate = l, t.checkAlternationMatch = function(e, t, n) {
                                for (var i, a = this.opts.greedy ? t : t.slice(0, 1), r = !1, o = void 0 !== n ? n.split(",") : [], l = 0; l < o.length; l++) -1 !== (i = e.indexOf(o[l])) && e.splice(i, 1);
                                for (var s = 0; s < e.length; s++) if (a.includes(e[s])) {
                                    r = !0;
                                    break;
                                }
                                return r;
                            }, t.handleRemove = function(e, t, n, i, s) {
                                var c = this, u = this.maskset, f = this.opts;
                                if ((f.numericInput || c.isRTL) && (t === a.keys.Backspace ? t = a.keys.Delete : t === a.keys.Delete && (t = a.keys.Backspace), 
                                c.isRTL)) {
                                    var p = n.end;
                                    n.end = n.begin, n.begin = p;
                                }
                                var d, h = r.getLastValidPosition.call(c, void 0, !0);
                                n.end >= r.getBuffer.call(c).length && h >= n.end && (n.end = h + 1);
                                t === a.keys.Backspace ? n.end - n.begin < 1 && (n.begin = r.seekPrevious.call(c, n.begin)) : t === a.keys.Delete && n.begin === n.end && (n.end = r.isMask.call(c, n.end, !0, !0) ? n.end + 1 : r.seekNext.call(c, n.end) + 1);
                                !1 !== (d = v.call(c, n)) && ((!0 !== i && !1 !== f.keepStatic || null !== f.regex && -1 !== o.getTest.call(c, n.begin).match.def.indexOf("|")) && l.call(c, !0), 
                                !0 !== i && (u.p = t === a.keys.Delete ? n.begin + d : n.begin, u.p = r.determineNewCaretPosition.call(c, {
                                    begin: u.p,
                                    end: u.p
                                }, !1, !1 === f.insertMode && t === a.keys.Backspace ? "none" : void 0).begin));
                            }, t.isComplete = c, t.isSelection = u, t.isValid = f, t.refreshFromBuffer = d, 
                            t.revalidateMask = v;
                            var i = n(6030), a = n(2839), r = n(8711), o = n(4713);
                            function l(e, t, n, i, a, s) {
                                var c = this, u = this.dependencyLib, p = this.opts, d = c.maskset;
                                if (!c.hasAlternator) return !1;
                                var h, v, m, g, y, k, b, x, w, P, S, O = u.extend(!0, [], d.validPositions), _ = u.extend(!0, {}, d.tests), M = !1, E = !1, j = void 0 !== a ? a : r.getLastValidPosition.call(c);
                                if (s && (P = s.begin, S = s.end, s.begin > s.end && (P = s.end, S = s.begin)), 
                                -1 === j && void 0 === a) h = 0, v = (g = o.getTest.call(c, h)).alternation; else for (;j >= 0; j--) if ((m = d.validPositions[j]) && void 0 !== m.alternation) {
                                    if (j <= (e || 0) && g && g.locator[m.alternation] !== m.locator[m.alternation]) break;
                                    h = j, v = d.validPositions[h].alternation, g = m;
                                }
                                if (void 0 !== v) {
                                    b = parseInt(h), d.excludes[b] = d.excludes[b] || [], !0 !== e && d.excludes[b].push((0, 
                                    o.getDecisionTaker)(g) + ":" + g.alternation);
                                    var T = [], A = -1;
                                    for (y = b; b < r.getLastValidPosition.call(c, void 0, !0) + 1; y++) -1 === A && e <= y && void 0 !== t && (T.push(t), 
                                    A = T.length - 1), (k = d.validPositions[b]) && !0 !== k.generatedInput && (void 0 === s || y < P || y >= S) && T.push(k.input), 
                                    d.validPositions.splice(b, 1);
                                    for (-1 === A && void 0 !== t && (T.push(t), A = T.length - 1); void 0 !== d.excludes[b] && d.excludes[b].length < 10; ) {
                                        for (d.tests = {}, r.resetMaskSet.call(c, !0), M = !0, y = 0; y < T.length && (x = M.caret || 0 == p.insertMode && null != x ? r.seekNext.call(c, x) : r.getLastValidPosition.call(c, void 0, !0) + 1, 
                                        w = T[y], M = f.call(c, x, w, !1, i, !0)); y++) y === A && (E = M), 1 == e && M && (E = {
                                            caretPos: y
                                        });
                                        if (M) break;
                                        if (r.resetMaskSet.call(c), g = o.getTest.call(c, b), d.validPositions = u.extend(!0, [], O), 
                                        d.tests = u.extend(!0, {}, _), !d.excludes[b]) {
                                            E = l.call(c, e, t, n, i, b - 1, s);
                                            break;
                                        }
                                        if (null != g.alternation) {
                                            var D = (0, o.getDecisionTaker)(g);
                                            if (-1 !== d.excludes[b].indexOf(D + ":" + g.alternation)) {
                                                E = l.call(c, e, t, n, i, b - 1, s);
                                                break;
                                            }
                                            for (d.excludes[b].push(D + ":" + g.alternation), y = b; y < r.getLastValidPosition.call(c, void 0, !0) + 1; y++) d.validPositions.splice(b);
                                        } else delete d.excludes[b];
                                    }
                                }
                                return E && !1 === p.keepStatic || delete d.excludes[b], E;
                            }
                            function s(e, t, n) {
                                var i = this.opts, r = this.maskset;
                                switch (i.casing || t.casing) {
                                  case "upper":
                                    e = e.toUpperCase();
                                    break;

                                  case "lower":
                                    e = e.toLowerCase();
                                    break;

                                  case "title":
                                    var o = r.validPositions[n - 1];
                                    e = 0 === n || o && o.input === String.fromCharCode(a.keyCode.Space) ? e.toUpperCase() : e.toLowerCase();
                                    break;

                                  default:
                                    if ("function" == typeof i.casing) {
                                        var l = Array.prototype.slice.call(arguments);
                                        l.push(r.validPositions), e = i.casing.apply(this, l);
                                    }
                                }
                                return e;
                            }
                            function c(e) {
                                var t = this, n = this.opts, i = this.maskset;
                                if ("function" == typeof n.isComplete) return n.isComplete(e, n);
                                if ("*" !== n.repeat) {
                                    var a = !1, l = r.determineLastRequiredPosition.call(t, !0), s = l.l;
                                    if (void 0 === l.def || l.def.newBlockMarker || l.def.optionality || l.def.optionalQuantifier) {
                                        a = !0;
                                        for (var c = 0; c <= s; c++) {
                                            var u = o.getTestTemplate.call(t, c).match;
                                            if (!0 !== u.static && void 0 === i.validPositions[c] && (!1 === u.optionality || void 0 === u.optionality || u.optionality && 0 == u.newBlockMarker) && (!1 === u.optionalQuantifier || void 0 === u.optionalQuantifier) || !0 === u.static && "" != u.def && e[c] !== o.getPlaceholder.call(t, c, u)) {
                                                a = !1;
                                                break;
                                            }
                                        }
                                    }
                                    return a;
                                }
                            }
                            function u(e) {
                                var t = this.opts.insertMode ? 0 : 1;
                                return this.isRTL ? e.begin - e.end > t : e.end - e.begin > t;
                            }
                            function f(e, t, n, i, a, p, m) {
                                var g = this, y = this.dependencyLib, k = this.opts, b = g.maskset;
                                n = !0 === n;
                                var x = e;
                                function w(e) {
                                    if (void 0 !== e) {
                                        if (void 0 !== e.remove && (Array.isArray(e.remove) || (e.remove = [ e.remove ]), 
                                        e.remove.sort(function(e, t) {
                                            return g.isRTL ? e.pos - t.pos : t.pos - e.pos;
                                        }).forEach(function(e) {
                                            v.call(g, {
                                                begin: e,
                                                end: e + 1
                                            });
                                        }), e.remove = void 0), void 0 !== e.insert && (Array.isArray(e.insert) || (e.insert = [ e.insert ]), 
                                        e.insert.sort(function(e, t) {
                                            return g.isRTL ? t.pos - e.pos : e.pos - t.pos;
                                        }).forEach(function(e) {
                                            "" !== e.c && f.call(g, e.pos, e.c, void 0 === e.strict || e.strict, void 0 !== e.fromIsValid ? e.fromIsValid : i);
                                        }), e.insert = void 0), e.refreshFromBuffer && e.buffer) {
                                            var t = e.refreshFromBuffer;
                                            d.call(g, !0 === t ? t : t.start, t.end, e.buffer), e.refreshFromBuffer = void 0;
                                        }
                                        void 0 !== e.rewritePosition && (x = e.rewritePosition, e = !0);
                                    }
                                    return e;
                                }
                                function P(t, n, a) {
                                    var l = !1;
                                    return o.getTests.call(g, t).every(function(c, f) {
                                        var p = c.match;
                                        if (r.getBuffer.call(g, !0), !1 !== (l = (!p.jit || void 0 !== b.validPositions[r.seekPrevious.call(g, t)]) && (null != p.fn ? p.fn.test(n, b, t, a, k, u.call(g, e)) : (n === p.def || n === k.skipOptionalPartCharacter) && "" !== p.def && {
                                            c: o.getPlaceholder.call(g, t, p, !0) || p.def,
                                            pos: t
                                        }))) {
                                            var d = void 0 !== l.c ? l.c : n, h = t;
                                            return d = d === k.skipOptionalPartCharacter && !0 === p.static ? o.getPlaceholder.call(g, t, p, !0) || p.def : d, 
                                            !0 !== (l = w(l)) && void 0 !== l.pos && l.pos !== t && (h = l.pos), !0 !== l && void 0 === l.pos && void 0 === l.c ? !1 : (!1 === v.call(g, e, y.extend({}, c, {
                                                input: s.call(g, d, p, h)
                                            }), i, h) && (l = !1), !1);
                                        }
                                        return !0;
                                    }), l;
                                }
                                void 0 !== e.begin && (x = g.isRTL ? e.end : e.begin);
                                var S = !0, O = y.extend(!0, [], b.validPositions);
                                if (!1 === k.keepStatic && void 0 !== b.excludes[x] && !0 !== a && !0 !== i) for (var _ = x; _ < (g.isRTL ? e.begin : e.end); _++) void 0 !== b.excludes[_] && (b.excludes[_] = void 0, 
                                delete b.tests[_]);
                                if ("function" == typeof k.preValidation && !0 !== i && !0 !== p && (S = w(S = k.preValidation.call(g, r.getBuffer.call(g), x, t, u.call(g, e), k, b, e, n || a))), 
                                !0 === S) {
                                    if (S = P(x, t, n), (!n || !0 === i) && !1 === S && !0 !== p) {
                                        var M = b.validPositions[x];
                                        if (!M || !0 !== M.match.static || M.match.def !== t && t !== k.skipOptionalPartCharacter) {
                                            if (k.insertMode || void 0 === b.validPositions[r.seekNext.call(g, x)] || e.end > x) {
                                                var E = !1;
                                                if (b.jitOffset[x] && void 0 === b.validPositions[r.seekNext.call(g, x)] && !1 !== (S = f.call(g, x + b.jitOffset[x], t, !0, !0)) && (!0 !== a && (S.caret = x), 
                                                E = !0), e.end > x && (b.validPositions[x] = void 0), !E && !r.isMask.call(g, x, k.keepStatic && 0 === x)) for (var j = x + 1, T = r.seekNext.call(g, x, !1, 0 !== x); j <= T; j++) if (!1 !== (S = P(j, t, n))) {
                                                    S = h.call(g, x, void 0 !== S.pos ? S.pos : j) || S, x = j;
                                                    break;
                                                }
                                            }
                                        } else S = {
                                            caret: r.seekNext.call(g, x)
                                        };
                                    }
                                    g.hasAlternator && !0 !== a && !n && (a = !0, !1 === S && k.keepStatic && (c.call(g, r.getBuffer.call(g)) || 0 === x) ? S = l.call(g, x, t, n, i, void 0, e) : (u.call(g, e) && b.tests[x] && b.tests[x].length > 1 && k.keepStatic || 1 == S && !0 !== k.numericInput && b.tests[x] && b.tests[x].length > 1 && r.getLastValidPosition.call(g, void 0, !0) > x) && (S = l.call(g, !0))), 
                                    !0 === S && (S = {
                                        pos: x
                                    });
                                }
                                if ("function" == typeof k.postValidation && !0 !== i && !0 !== p) {
                                    var A = k.postValidation.call(g, r.getBuffer.call(g, !0), void 0 !== e.begin ? g.isRTL ? e.end : e.begin : e, t, S, k, b, n, m);
                                    void 0 !== A && (S = !0 === A ? S : A);
                                }
                                S && void 0 === S.pos && (S.pos = x), !1 === S || !0 === p ? (r.resetMaskSet.call(g, !0), 
                                b.validPositions = y.extend(!0, [], O)) : h.call(g, void 0, x, !0);
                                var D = w(S);
                                void 0 !== g.maxLength && r.getBuffer.call(g).length > g.maxLength && !i && (r.resetMaskSet.call(g, !0), 
                                b.validPositions = y.extend(!0, [], O), D = !1);
                                return D;
                            }
                            function p(e, t, n) {
                                for (var i = this.maskset, a = !1, r = o.getTests.call(this, e), l = 0; l < r.length; l++) {
                                    if (r[l].match && (r[l].match.nativeDef === t.match[n.shiftPositions ? "def" : "nativeDef"] && (!n.shiftPositions || !t.match.static) || r[l].match.nativeDef === t.match.nativeDef || n.regex && !r[l].match.static && r[l].match.fn.test(t.input, i, e, !1, n))) {
                                        a = !0;
                                        break;
                                    }
                                    if (r[l].match && r[l].match.def === t.match.nativeDef) {
                                        a = void 0;
                                        break;
                                    }
                                }
                                return !1 === a && void 0 !== i.jitOffset[e] && (a = p.call(this, e + i.jitOffset[e], t, n)), 
                                a;
                            }
                            function d(e, t, n) {
                                var a, o, l = this, s = this.maskset, c = this.opts, u = this.dependencyLib, f = c.skipOptionalPartCharacter, p = l.isRTL ? n.slice().reverse() : n;
                                if (c.skipOptionalPartCharacter = "", !0 === e) r.resetMaskSet.call(l, !1), e = 0, 
                                t = n.length, o = r.determineNewCaretPosition.call(l, {
                                    begin: 0,
                                    end: 0
                                }, !1).begin; else {
                                    for (a = e; a < t; a++) s.validPositions.splice(e, 0);
                                    o = e;
                                }
                                var d = new u.Event("keypress");
                                for (a = e; a < t; a++) {
                                    d.key = p[a].toString(), l.ignorable = !1;
                                    var h = i.EventHandlers.keypressEvent.call(l, d, !0, !1, !1, o);
                                    !1 !== h && void 0 !== h && (o = h.forwardPosition);
                                }
                                c.skipOptionalPartCharacter = f;
                            }
                            function h(e, t, n) {
                                var i = this, a = this.maskset, l = this.dependencyLib;
                                if (void 0 === e) for (e = t - 1; e > 0 && !a.validPositions[e]; e--) ;
                                for (var s = e; s < t; s++) if (void 0 === a.validPositions[s] && !r.isMask.call(i, s, !1)) if (0 == s ? o.getTest.call(i, s) : a.validPositions[s - 1]) {
                                    var c = o.getTests.call(i, s).slice();
                                    "" === c[c.length - 1].match.def && c.pop();
                                    var u, p = o.determineTestTemplate.call(i, s, c);
                                    if (p && (!0 !== p.match.jit || "master" === p.match.newBlockMarker && (u = a.validPositions[s + 1]) && !0 === u.match.optionalQuantifier) && ((p = l.extend({}, p, {
                                        input: o.getPlaceholder.call(i, s, p.match, !0) || p.match.def
                                    })).generatedInput = !0, v.call(i, s, p, !0), !0 !== n)) {
                                        var d = a.validPositions[t].input;
                                        return a.validPositions[t] = void 0, f.call(i, t, d, !0, !0);
                                    }
                                }
                            }
                            function v(e, t, n, i) {
                                var a = this, l = this.maskset, s = this.opts, c = this.dependencyLib;
                                function d(e, t, n) {
                                    var i = t[e];
                                    if (void 0 !== i && !0 === i.match.static && !0 !== i.match.optionality && (void 0 === t[0] || void 0 === t[0].alternation)) {
                                        var a = n.begin <= e - 1 ? t[e - 1] && !0 === t[e - 1].match.static && t[e - 1] : t[e - 1], r = n.end > e + 1 ? t[e + 1] && !0 === t[e + 1].match.static && t[e + 1] : t[e + 1];
                                        return a && r;
                                    }
                                    return !1;
                                }
                                var h = 0, v = void 0 !== e.begin ? e.begin : e, m = void 0 !== e.end ? e.end : e, g = !0;
                                if (e.begin > e.end && (v = e.end, m = e.begin), i = void 0 !== i ? i : v, void 0 === n && (v !== m || s.insertMode && void 0 !== l.validPositions[i] || void 0 === t || t.match.optionalQuantifier || t.match.optionality)) {
                                    var y, k = c.extend(!0, [], l.validPositions), b = r.getLastValidPosition.call(a, void 0, !0);
                                    l.p = v;
                                    var x = u.call(a, e) ? v : i;
                                    for (y = b; y >= x; y--) l.validPositions.splice(y, 1), void 0 === t && delete l.tests[y + 1];
                                    var w, P, S = i, O = S;
                                    for (t && (l.validPositions[i] = c.extend(!0, {}, t), O++, S++), null == k[m] && l.jitOffset[m] && (m += l.jitOffset[m] + 1), 
                                    y = t ? m : m - 1; y <= b; y++) {
                                        if (void 0 !== (w = k[y]) && !0 !== w.generatedInput && (y >= m || y >= v && d(y, k, {
                                            begin: v,
                                            end: m
                                        }))) {
                                            for (;"" !== o.getTest.call(a, O).match.def; ) {
                                                if (!1 !== (P = p.call(a, O, w, s)) || "+" === w.match.def) {
                                                    "+" === w.match.def && r.getBuffer.call(a, !0);
                                                    var _ = f.call(a, O, w.input, "+" !== w.match.def, !0);
                                                    if (g = !1 !== _, S = (_.pos || O) + 1, !g && P) break;
                                                } else g = !1;
                                                if (g) {
                                                    void 0 === t && w.match.static && y === e.begin && h++;
                                                    break;
                                                }
                                                if (!g && r.getBuffer.call(a), O > l.maskLength) break;
                                                O++;
                                            }
                                            "" == o.getTest.call(a, O).match.def && (g = !1), O = S;
                                        }
                                        if (!g) break;
                                    }
                                    if (!g) return l.validPositions = c.extend(!0, [], k), r.resetMaskSet.call(a, !0), 
                                    !1;
                                } else t && o.getTest.call(a, i).match.cd === t.match.cd && (l.validPositions[i] = c.extend(!0, {}, t));
                                return r.resetMaskSet.call(a, !0), h;
                            }
                        }
                    }, t = {};
                    function n(i) {
                        var a = t[i];
                        if (void 0 !== a) return a.exports;
                        var r = t[i] = {
                            exports: {}
                        };
                        return e[i](r, r.exports, n), r.exports;
                    }
                    var i = {};
                    return function() {
                        var e = i;
                        Object.defineProperty(e, "__esModule", {
                            value: !0
                        }), e.default = void 0, n(7149), n(3194), n(9302), n(4013), n(3851), n(219), n(207), 
                        n(5296);
                        var t, a = (t = n(2394)) && t.__esModule ? t : {
                            default: t
                        };
                        e.default = a.default;
                    }(), i;
                }();
            });
        }
    };
    var __webpack_module_cache__ = {};
    function __webpack_require__(moduleId) {
        var cachedModule = __webpack_module_cache__[moduleId];
        if (cachedModule !== void 0) return cachedModule.exports;
        var module = __webpack_module_cache__[moduleId] = {
            exports: {}
        };
        __webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        return module.exports;
    }
    (() => {
        __webpack_require__.d = (exports, definition) => {
            for (var key in definition) if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) Object.defineProperty(exports, key, {
                enumerable: true,
                get: definition[key]
            });
        };
    })();
    (() => {
        __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
    })();
    (() => {
        __webpack_require__.r = exports => {
            if (typeof Symbol !== "undefined" && Symbol.toStringTag) Object.defineProperty(exports, Symbol.toStringTag, {
                value: "Module"
            });
            Object.defineProperty(exports, "__esModule", {
                value: true
            });
        };
    })();
    (() => {
        "use strict";
        var iconsAndAliases_namespaceObject = {};
        __webpack_require__.r(iconsAndAliases_namespaceObject);
        __webpack_require__.d(iconsAndAliases_namespaceObject, {
            AArrowDown: () => AArrowDown,
            AArrowUp: () => AArrowUp,
            ALargeSmall: () => ALargeSmall,
            Accessibility: () => Accessibility,
            Activity: () => Activity,
            ActivitySquare: () => SquareActivity,
            AirVent: () => AirVent,
            Airplay: () => Airplay,
            AlarmCheck: () => AlarmClockCheck,
            AlarmClock: () => AlarmClock,
            AlarmClockCheck: () => AlarmClockCheck,
            AlarmClockMinus: () => AlarmClockMinus,
            AlarmClockOff: () => AlarmClockOff,
            AlarmClockPlus: () => AlarmClockPlus,
            AlarmMinus: () => AlarmClockMinus,
            AlarmPlus: () => AlarmClockPlus,
            AlarmSmoke: () => AlarmSmoke,
            Album: () => Album,
            AlertCircle: () => CircleAlert,
            AlertOctagon: () => OctagonAlert,
            AlertTriangle: () => TriangleAlert,
            AlignCenter: () => TextAlignCenter,
            AlignCenterHorizontal: () => AlignCenterHorizontal,
            AlignCenterVertical: () => AlignCenterVertical,
            AlignEndHorizontal: () => AlignEndHorizontal,
            AlignEndVertical: () => AlignEndVertical,
            AlignHorizontalDistributeCenter: () => AlignHorizontalDistributeCenter,
            AlignHorizontalDistributeEnd: () => AlignHorizontalDistributeEnd,
            AlignHorizontalDistributeStart: () => AlignHorizontalDistributeStart,
            AlignHorizontalJustifyCenter: () => AlignHorizontalJustifyCenter,
            AlignHorizontalJustifyEnd: () => AlignHorizontalJustifyEnd,
            AlignHorizontalJustifyStart: () => AlignHorizontalJustifyStart,
            AlignHorizontalSpaceAround: () => AlignHorizontalSpaceAround,
            AlignHorizontalSpaceBetween: () => AlignHorizontalSpaceBetween,
            AlignJustify: () => TextAlignJustify,
            AlignLeft: () => TextAlignStart,
            AlignRight: () => TextAlignEnd,
            AlignStartHorizontal: () => AlignStartHorizontal,
            AlignStartVertical: () => AlignStartVertical,
            AlignVerticalDistributeCenter: () => AlignVerticalDistributeCenter,
            AlignVerticalDistributeEnd: () => AlignVerticalDistributeEnd,
            AlignVerticalDistributeStart: () => AlignVerticalDistributeStart,
            AlignVerticalJustifyCenter: () => AlignVerticalJustifyCenter,
            AlignVerticalJustifyEnd: () => AlignVerticalJustifyEnd,
            AlignVerticalJustifyStart: () => AlignVerticalJustifyStart,
            AlignVerticalSpaceAround: () => AlignVerticalSpaceAround,
            AlignVerticalSpaceBetween: () => AlignVerticalSpaceBetween,
            Ambulance: () => Ambulance,
            Ampersand: () => Ampersand,
            Ampersands: () => Ampersands,
            Amphora: () => Amphora,
            Anchor: () => Anchor,
            Angry: () => Angry,
            Annoyed: () => Annoyed,
            Antenna: () => Antenna,
            Anvil: () => Anvil,
            Aperture: () => Aperture,
            AppWindow: () => AppWindow,
            AppWindowMac: () => AppWindowMac,
            Apple: () => Apple,
            Archive: () => Archive,
            ArchiveRestore: () => ArchiveRestore,
            ArchiveX: () => ArchiveX,
            AreaChart: () => ChartArea,
            Armchair: () => Armchair,
            ArrowBigDown: () => ArrowBigDown,
            ArrowBigDownDash: () => ArrowBigDownDash,
            ArrowBigLeft: () => ArrowBigLeft,
            ArrowBigLeftDash: () => ArrowBigLeftDash,
            ArrowBigRight: () => ArrowBigRight,
            ArrowBigRightDash: () => ArrowBigRightDash,
            ArrowBigUp: () => ArrowBigUp,
            ArrowBigUpDash: () => ArrowBigUpDash,
            ArrowDown: () => ArrowDown,
            ArrowDown01: () => ArrowDown01,
            ArrowDown10: () => ArrowDown10,
            ArrowDownAZ: () => ArrowDownAZ,
            ArrowDownAz: () => ArrowDownAZ,
            ArrowDownCircle: () => CircleArrowDown,
            ArrowDownFromLine: () => ArrowDownFromLine,
            ArrowDownLeft: () => ArrowDownLeft,
            ArrowDownLeftFromCircle: () => CircleArrowOutDownLeft,
            ArrowDownLeftFromSquare: () => SquareArrowOutDownLeft,
            ArrowDownLeftSquare: () => SquareArrowDownLeft,
            ArrowDownNarrowWide: () => ArrowDownNarrowWide,
            ArrowDownRight: () => ArrowDownRight,
            ArrowDownRightFromCircle: () => CircleArrowOutDownRight,
            ArrowDownRightFromSquare: () => SquareArrowOutDownRight,
            ArrowDownRightSquare: () => SquareArrowDownRight,
            ArrowDownSquare: () => SquareArrowDown,
            ArrowDownToDot: () => ArrowDownToDot,
            ArrowDownToLine: () => ArrowDownToLine,
            ArrowDownUp: () => ArrowDownUp,
            ArrowDownWideNarrow: () => ArrowDownWideNarrow,
            ArrowDownZA: () => ArrowDownZA,
            ArrowDownZa: () => ArrowDownZA,
            ArrowLeft: () => ArrowLeft,
            ArrowLeftCircle: () => CircleArrowLeft,
            ArrowLeftFromLine: () => ArrowLeftFromLine,
            ArrowLeftRight: () => ArrowLeftRight,
            ArrowLeftSquare: () => SquareArrowLeft,
            ArrowLeftToLine: () => ArrowLeftToLine,
            ArrowRight: () => ArrowRight,
            ArrowRightCircle: () => CircleArrowRight,
            ArrowRightFromLine: () => ArrowRightFromLine,
            ArrowRightLeft: () => ArrowRightLeft,
            ArrowRightSquare: () => SquareArrowRight,
            ArrowRightToLine: () => ArrowRightToLine,
            ArrowUp: () => ArrowUp,
            ArrowUp01: () => ArrowUp01,
            ArrowUp10: () => ArrowUp10,
            ArrowUpAZ: () => ArrowUpAZ,
            ArrowUpAz: () => ArrowUpAZ,
            ArrowUpCircle: () => CircleArrowUp,
            ArrowUpDown: () => ArrowUpDown,
            ArrowUpFromDot: () => ArrowUpFromDot,
            ArrowUpFromLine: () => ArrowUpFromLine,
            ArrowUpLeft: () => ArrowUpLeft,
            ArrowUpLeftFromCircle: () => CircleArrowOutUpLeft,
            ArrowUpLeftFromSquare: () => SquareArrowOutUpLeft,
            ArrowUpLeftSquare: () => SquareArrowUpLeft,
            ArrowUpNarrowWide: () => ArrowUpNarrowWide,
            ArrowUpRight: () => ArrowUpRight,
            ArrowUpRightFromCircle: () => CircleArrowOutUpRight,
            ArrowUpRightFromSquare: () => SquareArrowOutUpRight,
            ArrowUpRightSquare: () => SquareArrowUpRight,
            ArrowUpSquare: () => SquareArrowUp,
            ArrowUpToLine: () => ArrowUpToLine,
            ArrowUpWideNarrow: () => ArrowUpWideNarrow,
            ArrowUpZA: () => ArrowUpZA,
            ArrowUpZa: () => ArrowUpZA,
            ArrowsUpFromLine: () => ArrowsUpFromLine,
            Asterisk: () => Asterisk,
            AsteriskSquare: () => SquareAsterisk,
            AtSign: () => AtSign,
            Atom: () => Atom,
            AudioLines: () => AudioLines,
            AudioWaveform: () => AudioWaveform,
            Award: () => Award,
            Axe: () => Axe,
            Axis3D: () => Axis3d,
            Axis3d: () => Axis3d,
            Baby: () => Baby,
            Backpack: () => Backpack,
            Badge: () => Badge,
            BadgeAlert: () => BadgeAlert,
            BadgeCent: () => BadgeCent,
            BadgeCheck: () => BadgeCheck,
            BadgeDollarSign: () => BadgeDollarSign,
            BadgeEuro: () => BadgeEuro,
            BadgeHelp: () => BadgeQuestionMark,
            BadgeIndianRupee: () => BadgeIndianRupee,
            BadgeInfo: () => BadgeInfo,
            BadgeJapaneseYen: () => BadgeJapaneseYen,
            BadgeMinus: () => BadgeMinus,
            BadgePercent: () => BadgePercent,
            BadgePlus: () => BadgePlus,
            BadgePoundSterling: () => BadgePoundSterling,
            BadgeQuestionMark: () => BadgeQuestionMark,
            BadgeRussianRuble: () => BadgeRussianRuble,
            BadgeSwissFranc: () => BadgeSwissFranc,
            BadgeTurkishLira: () => BadgeTurkishLira,
            BadgeX: () => BadgeX,
            BaggageClaim: () => BaggageClaim,
            Ban: () => Ban,
            Banana: () => Banana,
            Bandage: () => Bandage,
            Banknote: () => Banknote,
            BanknoteArrowDown: () => BanknoteArrowDown,
            BanknoteArrowUp: () => BanknoteArrowUp,
            BanknoteX: () => BanknoteX,
            BarChart: () => ChartNoAxesColumnIncreasing,
            BarChart2: () => ChartNoAxesColumn,
            BarChart3: () => ChartColumn,
            BarChart4: () => ChartColumnIncreasing,
            BarChartBig: () => ChartColumnBig,
            BarChartHorizontal: () => ChartBar,
            BarChartHorizontalBig: () => ChartBarBig,
            Barcode: () => Barcode,
            Barrel: () => Barrel,
            Baseline: () => Baseline,
            Bath: () => Bath,
            Battery: () => Battery,
            BatteryCharging: () => BatteryCharging,
            BatteryFull: () => BatteryFull,
            BatteryLow: () => BatteryLow,
            BatteryMedium: () => BatteryMedium,
            BatteryPlus: () => BatteryPlus,
            BatteryWarning: () => BatteryWarning,
            Beaker: () => Beaker,
            Bean: () => Bean,
            BeanOff: () => BeanOff,
            Bed: () => Bed,
            BedDouble: () => BedDouble,
            BedSingle: () => BedSingle,
            Beef: () => Beef,
            Beer: () => Beer,
            BeerOff: () => BeerOff,
            Bell: () => Bell,
            BellDot: () => BellDot,
            BellElectric: () => BellElectric,
            BellMinus: () => BellMinus,
            BellOff: () => BellOff,
            BellPlus: () => BellPlus,
            BellRing: () => BellRing,
            BetweenHorizonalEnd: () => BetweenHorizontalEnd,
            BetweenHorizonalStart: () => BetweenHorizontalStart,
            BetweenHorizontalEnd: () => BetweenHorizontalEnd,
            BetweenHorizontalStart: () => BetweenHorizontalStart,
            BetweenVerticalEnd: () => BetweenVerticalEnd,
            BetweenVerticalStart: () => BetweenVerticalStart,
            BicepsFlexed: () => BicepsFlexed,
            Bike: () => Bike,
            Binary: () => Binary,
            Binoculars: () => Binoculars,
            Biohazard: () => Biohazard,
            Bird: () => Bird,
            Bitcoin: () => Bitcoin,
            Blend: () => Blend,
            Blinds: () => Blinds,
            Blocks: () => Blocks,
            Bluetooth: () => Bluetooth,
            BluetoothConnected: () => BluetoothConnected,
            BluetoothOff: () => BluetoothOff,
            BluetoothSearching: () => BluetoothSearching,
            Bold: () => Bold,
            Bolt: () => Bolt,
            Bomb: () => Bomb,
            Bone: () => Bone,
            Book: () => Book,
            BookA: () => BookA,
            BookAlert: () => BookAlert,
            BookAudio: () => BookAudio,
            BookCheck: () => BookCheck,
            BookCopy: () => BookCopy,
            BookDashed: () => BookDashed,
            BookDown: () => BookDown,
            BookHeadphones: () => BookHeadphones,
            BookHeart: () => BookHeart,
            BookImage: () => BookImage,
            BookKey: () => BookKey,
            BookLock: () => BookLock,
            BookMarked: () => BookMarked,
            BookMinus: () => BookMinus,
            BookOpen: () => BookOpen,
            BookOpenCheck: () => BookOpenCheck,
            BookOpenText: () => BookOpenText,
            BookPlus: () => BookPlus,
            BookTemplate: () => BookDashed,
            BookText: () => BookText,
            BookType: () => BookType,
            BookUp: () => BookUp,
            BookUp2: () => BookUp2,
            BookUser: () => BookUser,
            BookX: () => BookX,
            Bookmark: () => Bookmark,
            BookmarkCheck: () => BookmarkCheck,
            BookmarkMinus: () => BookmarkMinus,
            BookmarkPlus: () => BookmarkPlus,
            BookmarkX: () => BookmarkX,
            BoomBox: () => BoomBox,
            Bot: () => Bot,
            BotMessageSquare: () => BotMessageSquare,
            BotOff: () => BotOff,
            BottleWine: () => BottleWine,
            BowArrow: () => BowArrow,
            Box: () => Box,
            BoxSelect: () => SquareDashed,
            Boxes: () => Boxes,
            Braces: () => Braces,
            Brackets: () => Brackets,
            Brain: () => Brain,
            BrainCircuit: () => BrainCircuit,
            BrainCog: () => BrainCog,
            BrickWall: () => BrickWall,
            BrickWallFire: () => BrickWallFire,
            BrickWallShield: () => BrickWallShield,
            Briefcase: () => Briefcase,
            BriefcaseBusiness: () => BriefcaseBusiness,
            BriefcaseConveyorBelt: () => BriefcaseConveyorBelt,
            BriefcaseMedical: () => BriefcaseMedical,
            BringToFront: () => BringToFront,
            Brush: () => Brush,
            BrushCleaning: () => BrushCleaning,
            Bubbles: () => Bubbles,
            Bug: () => Bug,
            BugOff: () => BugOff,
            BugPlay: () => BugPlay,
            Building: () => Building,
            Building2: () => Building2,
            Bus: () => Bus,
            BusFront: () => BusFront,
            Cable: () => Cable,
            CableCar: () => CableCar,
            Cake: () => Cake,
            CakeSlice: () => CakeSlice,
            Calculator: () => Calculator,
            Calendar: () => Calendar,
            Calendar1: () => Calendar1,
            CalendarArrowDown: () => CalendarArrowDown,
            CalendarArrowUp: () => CalendarArrowUp,
            CalendarCheck: () => CalendarCheck,
            CalendarCheck2: () => CalendarCheck2,
            CalendarClock: () => CalendarClock,
            CalendarCog: () => CalendarCog,
            CalendarDays: () => CalendarDays,
            CalendarFold: () => CalendarFold,
            CalendarHeart: () => CalendarHeart,
            CalendarMinus: () => CalendarMinus,
            CalendarMinus2: () => CalendarMinus2,
            CalendarOff: () => CalendarOff,
            CalendarPlus: () => CalendarPlus,
            CalendarPlus2: () => CalendarPlus2,
            CalendarRange: () => CalendarRange,
            CalendarSearch: () => CalendarSearch,
            CalendarSync: () => CalendarSync,
            CalendarX: () => CalendarX,
            CalendarX2: () => CalendarX2,
            Camera: () => Camera,
            CameraOff: () => CameraOff,
            CandlestickChart: () => ChartCandlestick,
            Candy: () => Candy,
            CandyCane: () => CandyCane,
            CandyOff: () => CandyOff,
            Cannabis: () => Cannabis,
            Captions: () => Captions,
            CaptionsOff: () => CaptionsOff,
            Car: () => Car,
            CarFront: () => CarFront,
            CarTaxiFront: () => CarTaxiFront,
            Caravan: () => Caravan,
            CardSim: () => CardSim,
            Carrot: () => Carrot,
            CaseLower: () => CaseLower,
            CaseSensitive: () => CaseSensitive,
            CaseUpper: () => CaseUpper,
            CassetteTape: () => CassetteTape,
            Cast: () => Cast,
            Castle: () => Castle,
            Cat: () => Cat,
            Cctv: () => Cctv,
            ChartArea: () => ChartArea,
            ChartBar: () => ChartBar,
            ChartBarBig: () => ChartBarBig,
            ChartBarDecreasing: () => ChartBarDecreasing,
            ChartBarIncreasing: () => ChartBarIncreasing,
            ChartBarStacked: () => ChartBarStacked,
            ChartCandlestick: () => ChartCandlestick,
            ChartColumn: () => ChartColumn,
            ChartColumnBig: () => ChartColumnBig,
            ChartColumnDecreasing: () => ChartColumnDecreasing,
            ChartColumnIncreasing: () => ChartColumnIncreasing,
            ChartColumnStacked: () => ChartColumnStacked,
            ChartGantt: () => ChartGantt,
            ChartLine: () => ChartLine,
            ChartNetwork: () => ChartNetwork,
            ChartNoAxesColumn: () => ChartNoAxesColumn,
            ChartNoAxesColumnDecreasing: () => ChartNoAxesColumnDecreasing,
            ChartNoAxesColumnIncreasing: () => ChartNoAxesColumnIncreasing,
            ChartNoAxesCombined: () => ChartNoAxesCombined,
            ChartNoAxesGantt: () => ChartNoAxesGantt,
            ChartPie: () => ChartPie,
            ChartScatter: () => ChartScatter,
            ChartSpline: () => ChartSpline,
            Check: () => Check,
            CheckCheck: () => CheckCheck,
            CheckCircle: () => CircleCheckBig,
            CheckCircle2: () => CircleCheck,
            CheckLine: () => CheckLine,
            CheckSquare: () => SquareCheckBig,
            CheckSquare2: () => SquareCheck,
            ChefHat: () => ChefHat,
            Cherry: () => Cherry,
            ChevronDown: () => ChevronDown,
            ChevronDownCircle: () => CircleChevronDown,
            ChevronDownSquare: () => SquareChevronDown,
            ChevronFirst: () => ChevronFirst,
            ChevronLast: () => ChevronLast,
            ChevronLeft: () => ChevronLeft,
            ChevronLeftCircle: () => CircleChevronLeft,
            ChevronLeftSquare: () => SquareChevronLeft,
            ChevronRight: () => ChevronRight,
            ChevronRightCircle: () => CircleChevronRight,
            ChevronRightSquare: () => SquareChevronRight,
            ChevronUp: () => ChevronUp,
            ChevronUpCircle: () => CircleChevronUp,
            ChevronUpSquare: () => SquareChevronUp,
            ChevronsDown: () => ChevronsDown,
            ChevronsDownUp: () => ChevronsDownUp,
            ChevronsLeft: () => ChevronsLeft,
            ChevronsLeftRight: () => ChevronsLeftRight,
            ChevronsLeftRightEllipsis: () => ChevronsLeftRightEllipsis,
            ChevronsRight: () => ChevronsRight,
            ChevronsRightLeft: () => ChevronsRightLeft,
            ChevronsUp: () => ChevronsUp,
            ChevronsUpDown: () => ChevronsUpDown,
            Chrome: () => Chromium,
            Chromium: () => Chromium,
            Church: () => Church,
            Cigarette: () => Cigarette,
            CigaretteOff: () => CigaretteOff,
            Circle: () => Circle,
            CircleAlert: () => CircleAlert,
            CircleArrowDown: () => CircleArrowDown,
            CircleArrowLeft: () => CircleArrowLeft,
            CircleArrowOutDownLeft: () => CircleArrowOutDownLeft,
            CircleArrowOutDownRight: () => CircleArrowOutDownRight,
            CircleArrowOutUpLeft: () => CircleArrowOutUpLeft,
            CircleArrowOutUpRight: () => CircleArrowOutUpRight,
            CircleArrowRight: () => CircleArrowRight,
            CircleArrowUp: () => CircleArrowUp,
            CircleCheck: () => CircleCheck,
            CircleCheckBig: () => CircleCheckBig,
            CircleChevronDown: () => CircleChevronDown,
            CircleChevronLeft: () => CircleChevronLeft,
            CircleChevronRight: () => CircleChevronRight,
            CircleChevronUp: () => CircleChevronUp,
            CircleDashed: () => CircleDashed,
            CircleDivide: () => CircleDivide,
            CircleDollarSign: () => CircleDollarSign,
            CircleDot: () => CircleDot,
            CircleDotDashed: () => CircleDotDashed,
            CircleEllipsis: () => CircleEllipsis,
            CircleEqual: () => CircleEqual,
            CircleFadingArrowUp: () => CircleFadingArrowUp,
            CircleFadingPlus: () => CircleFadingPlus,
            CircleGauge: () => CircleGauge,
            CircleHelp: () => CircleQuestionMark,
            CircleMinus: () => CircleMinus,
            CircleOff: () => CircleOff,
            CircleParking: () => CircleParking,
            CircleParkingOff: () => CircleParkingOff,
            CirclePause: () => CirclePause,
            CirclePercent: () => CirclePercent,
            CirclePlay: () => CirclePlay,
            CirclePlus: () => CirclePlus,
            CirclePoundSterling: () => CirclePoundSterling,
            CirclePower: () => CirclePower,
            CircleQuestionMark: () => CircleQuestionMark,
            CircleSlash: () => CircleSlash,
            CircleSlash2: () => CircleSlash2,
            CircleSlashed: () => CircleSlash2,
            CircleSmall: () => CircleSmall,
            CircleStar: () => CircleStar,
            CircleStop: () => CircleStop,
            CircleUser: () => CircleUser,
            CircleUserRound: () => CircleUserRound,
            CircleX: () => CircleX,
            CircuitBoard: () => CircuitBoard,
            Citrus: () => Citrus,
            Clapperboard: () => Clapperboard,
            Clipboard: () => Clipboard,
            ClipboardCheck: () => ClipboardCheck,
            ClipboardClock: () => ClipboardClock,
            ClipboardCopy: () => ClipboardCopy,
            ClipboardEdit: () => ClipboardPen,
            ClipboardList: () => ClipboardList,
            ClipboardMinus: () => ClipboardMinus,
            ClipboardPaste: () => ClipboardPaste,
            ClipboardPen: () => ClipboardPen,
            ClipboardPenLine: () => ClipboardPenLine,
            ClipboardPlus: () => ClipboardPlus,
            ClipboardSignature: () => ClipboardPenLine,
            ClipboardType: () => ClipboardType,
            ClipboardX: () => ClipboardX,
            Clock: () => Clock,
            Clock1: () => Clock1,
            Clock10: () => Clock10,
            Clock11: () => Clock11,
            Clock12: () => Clock12,
            Clock2: () => Clock2,
            Clock3: () => Clock3,
            Clock4: () => Clock4,
            Clock5: () => Clock5,
            Clock6: () => Clock6,
            Clock7: () => Clock7,
            Clock8: () => Clock8,
            Clock9: () => Clock9,
            ClockAlert: () => ClockAlert,
            ClockArrowDown: () => ClockArrowDown,
            ClockArrowUp: () => ClockArrowUp,
            ClockFading: () => ClockFading,
            ClockPlus: () => ClockPlus,
            ClosedCaption: () => ClosedCaption,
            Cloud: () => Cloud,
            CloudAlert: () => CloudAlert,
            CloudCheck: () => CloudCheck,
            CloudCog: () => CloudCog,
            CloudDownload: () => CloudDownload,
            CloudDrizzle: () => CloudDrizzle,
            CloudFog: () => CloudFog,
            CloudHail: () => CloudHail,
            CloudLightning: () => CloudLightning,
            CloudMoon: () => CloudMoon,
            CloudMoonRain: () => CloudMoonRain,
            CloudOff: () => CloudOff,
            CloudRain: () => CloudRain,
            CloudRainWind: () => CloudRainWind,
            CloudSnow: () => CloudSnow,
            CloudSun: () => CloudSun,
            CloudSunRain: () => CloudSunRain,
            CloudUpload: () => CloudUpload,
            Cloudy: () => Cloudy,
            Clover: () => Clover,
            Club: () => Club,
            Code: () => Code,
            Code2: () => CodeXml,
            CodeSquare: () => SquareCode,
            CodeXml: () => CodeXml,
            Codepen: () => Codepen,
            Codesandbox: () => Codesandbox,
            Coffee: () => Coffee,
            Cog: () => Cog,
            Coins: () => Coins,
            Columns: () => Columns2,
            Columns2: () => Columns2,
            Columns3: () => Columns3,
            Columns3Cog: () => Columns3Cog,
            Columns4: () => Columns4,
            ColumnsSettings: () => Columns3Cog,
            Combine: () => Combine,
            Command: () => Command,
            Compass: () => Compass,
            Component: () => Component,
            Computer: () => Computer,
            ConciergeBell: () => ConciergeBell,
            Cone: () => Cone,
            Construction: () => Construction,
            Contact: () => Contact,
            Contact2: () => ContactRound,
            ContactRound: () => ContactRound,
            Container: () => Container,
            Contrast: () => Contrast,
            Cookie: () => Cookie,
            CookingPot: () => CookingPot,
            Copy: () => Copy,
            CopyCheck: () => CopyCheck,
            CopyMinus: () => CopyMinus,
            CopyPlus: () => CopyPlus,
            CopySlash: () => CopySlash,
            CopyX: () => CopyX,
            Copyleft: () => Copyleft,
            Copyright: () => Copyright,
            CornerDownLeft: () => CornerDownLeft,
            CornerDownRight: () => CornerDownRight,
            CornerLeftDown: () => CornerLeftDown,
            CornerLeftUp: () => CornerLeftUp,
            CornerRightDown: () => CornerRightDown,
            CornerRightUp: () => CornerRightUp,
            CornerUpLeft: () => CornerUpLeft,
            CornerUpRight: () => CornerUpRight,
            Cpu: () => Cpu,
            CreativeCommons: () => CreativeCommons,
            CreditCard: () => CreditCard,
            Croissant: () => Croissant,
            Crop: () => Crop,
            Cross: () => Cross,
            Crosshair: () => Crosshair,
            Crown: () => Crown,
            Cuboid: () => Cuboid,
            CupSoda: () => CupSoda,
            CurlyBraces: () => Braces,
            Currency: () => Currency,
            Cylinder: () => Cylinder,
            Dam: () => Dam,
            Database: () => Database,
            DatabaseBackup: () => DatabaseBackup,
            DatabaseZap: () => DatabaseZap,
            DecimalsArrowLeft: () => DecimalsArrowLeft,
            DecimalsArrowRight: () => DecimalsArrowRight,
            Delete: () => Delete,
            Dessert: () => Dessert,
            Diameter: () => Diameter,
            Diamond: () => Diamond,
            DiamondMinus: () => DiamondMinus,
            DiamondPercent: () => DiamondPercent,
            DiamondPlus: () => DiamondPlus,
            Dice1: () => Dice1,
            Dice2: () => Dice2,
            Dice3: () => Dice3,
            Dice4: () => Dice4,
            Dice5: () => Dice5,
            Dice6: () => Dice6,
            Dices: () => Dices,
            Diff: () => Diff,
            Disc: () => Disc,
            Disc2: () => Disc2,
            Disc3: () => Disc3,
            DiscAlbum: () => DiscAlbum,
            Divide: () => Divide,
            DivideCircle: () => CircleDivide,
            DivideSquare: () => SquareDivide,
            Dna: () => Dna,
            DnaOff: () => DnaOff,
            Dock: () => Dock,
            Dog: () => Dog,
            DollarSign: () => DollarSign,
            Donut: () => Donut,
            DoorClosed: () => DoorClosed,
            DoorClosedLocked: () => DoorClosedLocked,
            DoorOpen: () => DoorOpen,
            Dot: () => Dot,
            DotSquare: () => SquareDot,
            Download: () => Download,
            DownloadCloud: () => CloudDownload,
            DraftingCompass: () => DraftingCompass,
            Drama: () => Drama,
            Dribbble: () => Dribbble,
            Drill: () => Drill,
            Drone: () => Drone,
            Droplet: () => Droplet,
            DropletOff: () => DropletOff,
            Droplets: () => Droplets,
            Drum: () => Drum,
            Drumstick: () => Drumstick,
            Dumbbell: () => Dumbbell,
            Ear: () => Ear,
            EarOff: () => EarOff,
            Earth: () => Earth,
            EarthLock: () => EarthLock,
            Eclipse: () => Eclipse,
            Edit: () => SquarePen,
            Edit2: () => Pen,
            Edit3: () => PenLine,
            Egg: () => Egg,
            EggFried: () => EggFried,
            EggOff: () => EggOff,
            Ellipsis: () => Ellipsis,
            EllipsisVertical: () => EllipsisVertical,
            Equal: () => Equal,
            EqualApproximately: () => EqualApproximately,
            EqualNot: () => EqualNot,
            EqualSquare: () => SquareEqual,
            Eraser: () => Eraser,
            EthernetPort: () => EthernetPort,
            Euro: () => Euro,
            EvCharger: () => EvCharger,
            Expand: () => Expand,
            ExternalLink: () => ExternalLink,
            Eye: () => Eye,
            EyeClosed: () => EyeClosed,
            EyeOff: () => EyeOff,
            Facebook: () => Facebook,
            Factory: () => Factory,
            Fan: () => Fan,
            FastForward: () => FastForward,
            Feather: () => Feather,
            Fence: () => Fence,
            FerrisWheel: () => FerrisWheel,
            Figma: () => Figma,
            File: () => File,
            FileArchive: () => FileArchive,
            FileAudio: () => FileAudio,
            FileAudio2: () => FileAudio2,
            FileAxis3D: () => FileAxis3d,
            FileAxis3d: () => FileAxis3d,
            FileBadge: () => FileBadge,
            FileBadge2: () => FileBadge2,
            FileBarChart: () => FileChartColumnIncreasing,
            FileBarChart2: () => FileChartColumn,
            FileBox: () => FileBox,
            FileChartColumn: () => FileChartColumn,
            FileChartColumnIncreasing: () => FileChartColumnIncreasing,
            FileChartLine: () => FileChartLine,
            FileChartPie: () => FileChartPie,
            FileCheck: () => FileCheck,
            FileCheck2: () => FileCheck2,
            FileClock: () => FileClock,
            FileCode: () => FileCode,
            FileCode2: () => FileCode2,
            FileCog: () => FileCog,
            FileCog2: () => FileCog,
            FileDiff: () => FileDiff,
            FileDigit: () => FileDigit,
            FileDown: () => FileDown,
            FileEdit: () => FilePen,
            FileHeart: () => FileHeart,
            FileImage: () => FileImage,
            FileInput: () => FileInput,
            FileJson: () => FileJson,
            FileJson2: () => FileJson2,
            FileKey: () => FileKey,
            FileKey2: () => FileKey2,
            FileLineChart: () => FileChartLine,
            FileLock: () => FileLock,
            FileLock2: () => FileLock2,
            FileMinus: () => FileMinus,
            FileMinus2: () => FileMinus2,
            FileMusic: () => FileMusic,
            FileOutput: () => FileOutput,
            FilePen: () => FilePen,
            FilePenLine: () => FilePenLine,
            FilePieChart: () => FileChartPie,
            FilePlay: () => FilePlay,
            FilePlus: () => FilePlus,
            FilePlus2: () => FilePlus2,
            FileQuestion: () => FileQuestionMark,
            FileQuestionMark: () => FileQuestionMark,
            FileScan: () => FileScan,
            FileSearch: () => FileSearch,
            FileSearch2: () => FileSearch2,
            FileSignature: () => FilePenLine,
            FileSliders: () => FileSliders,
            FileSpreadsheet: () => FileSpreadsheet,
            FileStack: () => FileStack,
            FileSymlink: () => FileSymlink,
            FileTerminal: () => FileTerminal,
            FileText: () => FileText,
            FileType: () => FileType,
            FileType2: () => FileType2,
            FileUp: () => FileUp,
            FileUser: () => FileUser,
            FileVideo: () => FilePlay,
            FileVideo2: () => FileVideoCamera,
            FileVideoCamera: () => FileVideoCamera,
            FileVolume: () => FileVolume,
            FileVolume2: () => FileVolume2,
            FileWarning: () => FileWarning,
            FileX: () => FileX,
            FileX2: () => FileX2,
            Files: () => Files,
            Film: () => Film,
            Filter: () => Funnel,
            FilterX: () => FunnelX,
            Fingerprint: () => Fingerprint,
            FireExtinguisher: () => FireExtinguisher,
            Fish: () => Fish,
            FishOff: () => FishOff,
            FishSymbol: () => FishSymbol,
            Flag: () => Flag,
            FlagOff: () => FlagOff,
            FlagTriangleLeft: () => FlagTriangleLeft,
            FlagTriangleRight: () => FlagTriangleRight,
            Flame: () => Flame,
            FlameKindling: () => FlameKindling,
            Flashlight: () => Flashlight,
            FlashlightOff: () => FlashlightOff,
            FlaskConical: () => FlaskConical,
            FlaskConicalOff: () => FlaskConicalOff,
            FlaskRound: () => FlaskRound,
            FlipHorizontal: () => FlipHorizontal,
            FlipHorizontal2: () => FlipHorizontal2,
            FlipVertical: () => FlipVertical,
            FlipVertical2: () => FlipVertical2,
            Flower: () => Flower,
            Flower2: () => Flower2,
            Focus: () => Focus,
            FoldHorizontal: () => FoldHorizontal,
            FoldVertical: () => FoldVertical,
            Folder: () => Folder,
            FolderArchive: () => FolderArchive,
            FolderCheck: () => FolderCheck,
            FolderClock: () => FolderClock,
            FolderClosed: () => FolderClosed,
            FolderCode: () => FolderCode,
            FolderCog: () => FolderCog,
            FolderCog2: () => FolderCog,
            FolderDot: () => FolderDot,
            FolderDown: () => FolderDown,
            FolderEdit: () => FolderPen,
            FolderGit: () => FolderGit,
            FolderGit2: () => FolderGit2,
            FolderHeart: () => FolderHeart,
            FolderInput: () => FolderInput,
            FolderKanban: () => FolderKanban,
            FolderKey: () => FolderKey,
            FolderLock: () => FolderLock,
            FolderMinus: () => FolderMinus,
            FolderOpen: () => FolderOpen,
            FolderOpenDot: () => FolderOpenDot,
            FolderOutput: () => FolderOutput,
            FolderPen: () => FolderPen,
            FolderPlus: () => FolderPlus,
            FolderRoot: () => FolderRoot,
            FolderSearch: () => FolderSearch,
            FolderSearch2: () => FolderSearch2,
            FolderSymlink: () => FolderSymlink,
            FolderSync: () => FolderSync,
            FolderTree: () => FolderTree,
            FolderUp: () => FolderUp,
            FolderX: () => FolderX,
            Folders: () => Folders,
            Footprints: () => Footprints,
            ForkKnife: () => Utensils,
            ForkKnifeCrossed: () => UtensilsCrossed,
            Forklift: () => Forklift,
            FormInput: () => RectangleEllipsis,
            Forward: () => Forward,
            Frame: () => Frame,
            Framer: () => Framer,
            Frown: () => Frown,
            Fuel: () => Fuel,
            Fullscreen: () => Fullscreen,
            FunctionSquare: () => SquareFunction,
            Funnel: () => Funnel,
            FunnelPlus: () => FunnelPlus,
            FunnelX: () => FunnelX,
            GalleryHorizontal: () => GalleryHorizontal,
            GalleryHorizontalEnd: () => GalleryHorizontalEnd,
            GalleryThumbnails: () => GalleryThumbnails,
            GalleryVertical: () => GalleryVertical,
            GalleryVerticalEnd: () => GalleryVerticalEnd,
            Gamepad: () => Gamepad,
            Gamepad2: () => Gamepad2,
            GanttChart: () => ChartNoAxesGantt,
            GanttChartSquare: () => SquareChartGantt,
            Gauge: () => Gauge,
            GaugeCircle: () => CircleGauge,
            Gavel: () => Gavel,
            Gem: () => Gem,
            GeorgianLari: () => GeorgianLari,
            Ghost: () => Ghost,
            Gift: () => Gift,
            GitBranch: () => GitBranch,
            GitBranchPlus: () => GitBranchPlus,
            GitCommit: () => GitCommitHorizontal,
            GitCommitHorizontal: () => GitCommitHorizontal,
            GitCommitVertical: () => GitCommitVertical,
            GitCompare: () => GitCompare,
            GitCompareArrows: () => GitCompareArrows,
            GitFork: () => GitFork,
            GitGraph: () => GitGraph,
            GitMerge: () => GitMerge,
            GitPullRequest: () => GitPullRequest,
            GitPullRequestArrow: () => GitPullRequestArrow,
            GitPullRequestClosed: () => GitPullRequestClosed,
            GitPullRequestCreate: () => GitPullRequestCreate,
            GitPullRequestCreateArrow: () => GitPullRequestCreateArrow,
            GitPullRequestDraft: () => GitPullRequestDraft,
            Github: () => Github,
            Gitlab: () => Gitlab,
            GlassWater: () => GlassWater,
            Glasses: () => Glasses,
            Globe: () => Globe,
            Globe2: () => Earth,
            GlobeLock: () => GlobeLock,
            Goal: () => Goal,
            Gpu: () => Gpu,
            Grab: () => HandGrab,
            GraduationCap: () => GraduationCap,
            Grape: () => Grape,
            Grid: () => Grid3x3,
            Grid2X2: () => Grid2x2,
            Grid2X2Check: () => Grid2x2Check,
            Grid2X2Plus: () => Grid2x2Plus,
            Grid2X2X: () => Grid2x2X,
            Grid2x2: () => Grid2x2,
            Grid2x2Check: () => Grid2x2Check,
            Grid2x2Plus: () => Grid2x2Plus,
            Grid2x2X: () => Grid2x2X,
            Grid3X3: () => Grid3x3,
            Grid3x2: () => Grid3x2,
            Grid3x3: () => Grid3x3,
            Grip: () => Grip,
            GripHorizontal: () => GripHorizontal,
            GripVertical: () => GripVertical,
            Group: () => Group,
            Guitar: () => Guitar,
            Ham: () => Ham,
            Hamburger: () => Hamburger,
            Hammer: () => Hammer,
            Hand: () => Hand,
            HandCoins: () => HandCoins,
            HandFist: () => HandFist,
            HandGrab: () => HandGrab,
            HandHeart: () => HandHeart,
            HandHelping: () => HandHelping,
            HandMetal: () => HandMetal,
            HandPlatter: () => HandPlatter,
            Handbag: () => Handbag,
            Handshake: () => Handshake,
            HardDrive: () => HardDrive,
            HardDriveDownload: () => HardDriveDownload,
            HardDriveUpload: () => HardDriveUpload,
            HardHat: () => HardHat,
            Hash: () => Hash,
            HatGlasses: () => HatGlasses,
            Haze: () => Haze,
            HdmiPort: () => HdmiPort,
            Heading: () => Heading,
            Heading1: () => Heading1,
            Heading2: () => Heading2,
            Heading3: () => Heading3,
            Heading4: () => Heading4,
            Heading5: () => Heading5,
            Heading6: () => Heading6,
            HeadphoneOff: () => HeadphoneOff,
            Headphones: () => Headphones,
            Headset: () => Headset,
            Heart: () => Heart,
            HeartCrack: () => HeartCrack,
            HeartHandshake: () => HeartHandshake,
            HeartMinus: () => HeartMinus,
            HeartOff: () => HeartOff,
            HeartPlus: () => HeartPlus,
            HeartPulse: () => HeartPulse,
            Heater: () => Heater,
            HelpCircle: () => CircleQuestionMark,
            HelpingHand: () => HandHelping,
            Hexagon: () => Hexagon,
            Highlighter: () => Highlighter,
            History: () => History,
            Home: () => House,
            Hop: () => Hop,
            HopOff: () => HopOff,
            Hospital: () => Hospital,
            Hotel: () => Hotel,
            Hourglass: () => Hourglass,
            House: () => House,
            HouseHeart: () => HouseHeart,
            HousePlug: () => HousePlug,
            HousePlus: () => HousePlus,
            HouseWifi: () => HouseWifi,
            IceCream: () => IceCreamCone,
            IceCream2: () => IceCreamBowl,
            IceCreamBowl: () => IceCreamBowl,
            IceCreamCone: () => IceCreamCone,
            IdCard: () => IdCard,
            IdCardLanyard: () => IdCardLanyard,
            Image: () => image_Image,
            ImageDown: () => ImageDown,
            ImageMinus: () => ImageMinus,
            ImageOff: () => ImageOff,
            ImagePlay: () => ImagePlay,
            ImagePlus: () => ImagePlus,
            ImageUp: () => ImageUp,
            ImageUpscale: () => ImageUpscale,
            Images: () => Images,
            Import: () => Import,
            Inbox: () => Inbox,
            Indent: () => ListIndentIncrease,
            IndentDecrease: () => ListIndentDecrease,
            IndentIncrease: () => ListIndentIncrease,
            IndianRupee: () => IndianRupee,
            Infinity: () => infinity_Infinity,
            Info: () => Info,
            Inspect: () => SquareMousePointer,
            InspectionPanel: () => InspectionPanel,
            Instagram: () => Instagram,
            Italic: () => Italic,
            IterationCcw: () => IterationCcw,
            IterationCw: () => IterationCw,
            JapaneseYen: () => JapaneseYen,
            Joystick: () => Joystick,
            Kanban: () => Kanban,
            KanbanSquare: () => SquareKanban,
            KanbanSquareDashed: () => SquareDashedKanban,
            Kayak: () => Kayak,
            Key: () => Key,
            KeyRound: () => KeyRound,
            KeySquare: () => KeySquare,
            Keyboard: () => Keyboard,
            KeyboardMusic: () => KeyboardMusic,
            KeyboardOff: () => KeyboardOff,
            Lamp: () => Lamp,
            LampCeiling: () => LampCeiling,
            LampDesk: () => LampDesk,
            LampFloor: () => LampFloor,
            LampWallDown: () => LampWallDown,
            LampWallUp: () => LampWallUp,
            LandPlot: () => LandPlot,
            Landmark: () => Landmark,
            Languages: () => Languages,
            Laptop: () => Laptop,
            Laptop2: () => LaptopMinimal,
            LaptopMinimal: () => LaptopMinimal,
            LaptopMinimalCheck: () => LaptopMinimalCheck,
            Lasso: () => Lasso,
            LassoSelect: () => LassoSelect,
            Laugh: () => Laugh,
            Layers: () => Layers,
            Layers2: () => Layers2,
            Layers3: () => Layers,
            Layout: () => PanelsTopLeft,
            LayoutDashboard: () => LayoutDashboard,
            LayoutGrid: () => LayoutGrid,
            LayoutList: () => LayoutList,
            LayoutPanelLeft: () => LayoutPanelLeft,
            LayoutPanelTop: () => LayoutPanelTop,
            LayoutTemplate: () => LayoutTemplate,
            Leaf: () => Leaf,
            LeafyGreen: () => LeafyGreen,
            Lectern: () => Lectern,
            LetterText: () => TextInitial,
            Library: () => Library,
            LibraryBig: () => LibraryBig,
            LibrarySquare: () => SquareLibrary,
            LifeBuoy: () => LifeBuoy,
            Ligature: () => Ligature,
            Lightbulb: () => Lightbulb,
            LightbulbOff: () => LightbulbOff,
            LineChart: () => ChartLine,
            LineSquiggle: () => LineSquiggle,
            Link: () => Link,
            Link2: () => Link2,
            Link2Off: () => Link2Off,
            Linkedin: () => Linkedin,
            List: () => List,
            ListCheck: () => ListCheck,
            ListChecks: () => ListChecks,
            ListChevronsDownUp: () => ListChevronsDownUp,
            ListChevronsUpDown: () => ListChevronsUpDown,
            ListCollapse: () => ListCollapse,
            ListEnd: () => ListEnd,
            ListFilter: () => ListFilter,
            ListFilterPlus: () => ListFilterPlus,
            ListIndentDecrease: () => ListIndentDecrease,
            ListIndentIncrease: () => ListIndentIncrease,
            ListMinus: () => ListMinus,
            ListMusic: () => ListMusic,
            ListOrdered: () => ListOrdered,
            ListPlus: () => ListPlus,
            ListRestart: () => ListRestart,
            ListStart: () => ListStart,
            ListTodo: () => ListTodo,
            ListTree: () => ListTree,
            ListVideo: () => ListVideo,
            ListX: () => ListX,
            Loader: () => Loader,
            Loader2: () => LoaderCircle,
            LoaderCircle: () => LoaderCircle,
            LoaderPinwheel: () => LoaderPinwheel,
            Locate: () => Locate,
            LocateFixed: () => LocateFixed,
            LocateOff: () => LocateOff,
            LocationEdit: () => MapPinPen,
            Lock: () => Lock,
            LockKeyhole: () => LockKeyhole,
            LockKeyholeOpen: () => LockKeyholeOpen,
            LockOpen: () => LockOpen,
            LogIn: () => LogIn,
            LogOut: () => LogOut,
            Logs: () => Logs,
            Lollipop: () => Lollipop,
            Luggage: () => Luggage,
            MSquare: () => SquareM,
            Magnet: () => Magnet,
            Mail: () => Mail,
            MailCheck: () => MailCheck,
            MailMinus: () => MailMinus,
            MailOpen: () => MailOpen,
            MailPlus: () => MailPlus,
            MailQuestion: () => MailQuestionMark,
            MailQuestionMark: () => MailQuestionMark,
            MailSearch: () => MailSearch,
            MailWarning: () => MailWarning,
            MailX: () => MailX,
            Mailbox: () => Mailbox,
            Mails: () => Mails,
            Map: () => app_Map,
            MapMinus: () => MapMinus,
            MapPin: () => MapPin,
            MapPinCheck: () => MapPinCheck,
            MapPinCheckInside: () => MapPinCheckInside,
            MapPinHouse: () => MapPinHouse,
            MapPinMinus: () => MapPinMinus,
            MapPinMinusInside: () => MapPinMinusInside,
            MapPinOff: () => MapPinOff,
            MapPinPen: () => MapPinPen,
            MapPinPlus: () => MapPinPlus,
            MapPinPlusInside: () => MapPinPlusInside,
            MapPinX: () => MapPinX,
            MapPinXInside: () => MapPinXInside,
            MapPinned: () => MapPinned,
            MapPlus: () => MapPlus,
            Mars: () => Mars,
            MarsStroke: () => MarsStroke,
            Martini: () => Martini,
            Maximize: () => Maximize,
            Maximize2: () => Maximize2,
            Medal: () => Medal,
            Megaphone: () => Megaphone,
            MegaphoneOff: () => MegaphoneOff,
            Meh: () => Meh,
            MemoryStick: () => MemoryStick,
            Menu: () => Menu,
            MenuSquare: () => SquareMenu,
            Merge: () => Merge,
            MessageCircle: () => MessageCircle,
            MessageCircleCode: () => MessageCircleCode,
            MessageCircleDashed: () => MessageCircleDashed,
            MessageCircleHeart: () => MessageCircleHeart,
            MessageCircleMore: () => MessageCircleMore,
            MessageCircleOff: () => MessageCircleOff,
            MessageCirclePlus: () => MessageCirclePlus,
            MessageCircleQuestion: () => MessageCircleQuestionMark,
            MessageCircleQuestionMark: () => MessageCircleQuestionMark,
            MessageCircleReply: () => MessageCircleReply,
            MessageCircleWarning: () => MessageCircleWarning,
            MessageCircleX: () => MessageCircleX,
            MessageSquare: () => MessageSquare,
            MessageSquareCode: () => MessageSquareCode,
            MessageSquareDashed: () => MessageSquareDashed,
            MessageSquareDiff: () => MessageSquareDiff,
            MessageSquareDot: () => MessageSquareDot,
            MessageSquareHeart: () => MessageSquareHeart,
            MessageSquareLock: () => MessageSquareLock,
            MessageSquareMore: () => MessageSquareMore,
            MessageSquareOff: () => MessageSquareOff,
            MessageSquarePlus: () => MessageSquarePlus,
            MessageSquareQuote: () => MessageSquareQuote,
            MessageSquareReply: () => MessageSquareReply,
            MessageSquareShare: () => MessageSquareShare,
            MessageSquareText: () => MessageSquareText,
            MessageSquareWarning: () => MessageSquareWarning,
            MessageSquareX: () => MessageSquareX,
            MessagesSquare: () => MessagesSquare,
            Mic: () => Mic,
            Mic2: () => MicVocal,
            MicOff: () => MicOff,
            MicVocal: () => MicVocal,
            Microchip: () => Microchip,
            Microscope: () => Microscope,
            Microwave: () => Microwave,
            Milestone: () => Milestone,
            Milk: () => Milk,
            MilkOff: () => MilkOff,
            Minimize: () => Minimize,
            Minimize2: () => Minimize2,
            Minus: () => Minus,
            MinusCircle: () => CircleMinus,
            MinusSquare: () => SquareMinus,
            Monitor: () => Monitor,
            MonitorCheck: () => MonitorCheck,
            MonitorCog: () => MonitorCog,
            MonitorDot: () => MonitorDot,
            MonitorDown: () => MonitorDown,
            MonitorOff: () => MonitorOff,
            MonitorPause: () => MonitorPause,
            MonitorPlay: () => MonitorPlay,
            MonitorSmartphone: () => MonitorSmartphone,
            MonitorSpeaker: () => MonitorSpeaker,
            MonitorStop: () => MonitorStop,
            MonitorUp: () => MonitorUp,
            MonitorX: () => MonitorX,
            Moon: () => Moon,
            MoonStar: () => MoonStar,
            MoreHorizontal: () => Ellipsis,
            MoreVertical: () => EllipsisVertical,
            Mountain: () => Mountain,
            MountainSnow: () => MountainSnow,
            Mouse: () => Mouse,
            MouseOff: () => MouseOff,
            MousePointer: () => MousePointer,
            MousePointer2: () => MousePointer2,
            MousePointerBan: () => MousePointerBan,
            MousePointerClick: () => MousePointerClick,
            MousePointerSquareDashed: () => SquareDashedMousePointer,
            Move: () => Move,
            Move3D: () => Move3d,
            Move3d: () => Move3d,
            MoveDiagonal: () => MoveDiagonal,
            MoveDiagonal2: () => MoveDiagonal2,
            MoveDown: () => MoveDown,
            MoveDownLeft: () => MoveDownLeft,
            MoveDownRight: () => MoveDownRight,
            MoveHorizontal: () => MoveHorizontal,
            MoveLeft: () => MoveLeft,
            MoveRight: () => MoveRight,
            MoveUp: () => MoveUp,
            MoveUpLeft: () => MoveUpLeft,
            MoveUpRight: () => MoveUpRight,
            MoveVertical: () => MoveVertical,
            Music: () => Music,
            Music2: () => Music2,
            Music3: () => Music3,
            Music4: () => Music4,
            Navigation: () => Navigation,
            Navigation2: () => Navigation2,
            Navigation2Off: () => Navigation2Off,
            NavigationOff: () => NavigationOff,
            Network: () => Network,
            Newspaper: () => Newspaper,
            Nfc: () => Nfc,
            NonBinary: () => NonBinary,
            Notebook: () => Notebook,
            NotebookPen: () => NotebookPen,
            NotebookTabs: () => NotebookTabs,
            NotebookText: () => NotebookText,
            NotepadText: () => NotepadText,
            NotepadTextDashed: () => NotepadTextDashed,
            Nut: () => Nut,
            NutOff: () => NutOff,
            Octagon: () => Octagon,
            OctagonAlert: () => OctagonAlert,
            OctagonMinus: () => OctagonMinus,
            OctagonPause: () => OctagonPause,
            OctagonX: () => OctagonX,
            Omega: () => Omega,
            Option: () => Option,
            Orbit: () => Orbit,
            Origami: () => Origami,
            Outdent: () => ListIndentDecrease,
            Package: () => Package,
            Package2: () => Package2,
            PackageCheck: () => PackageCheck,
            PackageMinus: () => PackageMinus,
            PackageOpen: () => PackageOpen,
            PackagePlus: () => PackagePlus,
            PackageSearch: () => PackageSearch,
            PackageX: () => PackageX,
            PaintBucket: () => PaintBucket,
            PaintRoller: () => PaintRoller,
            Paintbrush: () => Paintbrush,
            Paintbrush2: () => PaintbrushVertical,
            PaintbrushVertical: () => PaintbrushVertical,
            Palette: () => Palette,
            Palmtree: () => TreePalm,
            Panda: () => Panda,
            PanelBottom: () => PanelBottom,
            PanelBottomClose: () => PanelBottomClose,
            PanelBottomDashed: () => PanelBottomDashed,
            PanelBottomInactive: () => PanelBottomDashed,
            PanelBottomOpen: () => PanelBottomOpen,
            PanelLeft: () => PanelLeft,
            PanelLeftClose: () => PanelLeftClose,
            PanelLeftDashed: () => PanelLeftDashed,
            PanelLeftInactive: () => PanelLeftDashed,
            PanelLeftOpen: () => PanelLeftOpen,
            PanelLeftRightDashed: () => PanelLeftRightDashed,
            PanelRight: () => PanelRight,
            PanelRightClose: () => PanelRightClose,
            PanelRightDashed: () => PanelRightDashed,
            PanelRightInactive: () => PanelRightDashed,
            PanelRightOpen: () => PanelRightOpen,
            PanelTop: () => PanelTop,
            PanelTopBottomDashed: () => PanelTopBottomDashed,
            PanelTopClose: () => PanelTopClose,
            PanelTopDashed: () => PanelTopDashed,
            PanelTopInactive: () => PanelTopDashed,
            PanelTopOpen: () => PanelTopOpen,
            PanelsLeftBottom: () => PanelsLeftBottom,
            PanelsLeftRight: () => Columns3,
            PanelsRightBottom: () => PanelsRightBottom,
            PanelsTopBottom: () => Rows3,
            PanelsTopLeft: () => PanelsTopLeft,
            Paperclip: () => Paperclip,
            Parentheses: () => Parentheses,
            ParkingCircle: () => CircleParking,
            ParkingCircleOff: () => CircleParkingOff,
            ParkingMeter: () => ParkingMeter,
            ParkingSquare: () => SquareParking,
            ParkingSquareOff: () => SquareParkingOff,
            PartyPopper: () => PartyPopper,
            Pause: () => Pause,
            PauseCircle: () => CirclePause,
            PauseOctagon: () => OctagonPause,
            PawPrint: () => PawPrint,
            PcCase: () => PcCase,
            Pen: () => Pen,
            PenBox: () => SquarePen,
            PenLine: () => PenLine,
            PenOff: () => PenOff,
            PenSquare: () => SquarePen,
            PenTool: () => PenTool,
            Pencil: () => Pencil,
            PencilLine: () => PencilLine,
            PencilOff: () => PencilOff,
            PencilRuler: () => PencilRuler,
            Pentagon: () => Pentagon,
            Percent: () => Percent,
            PercentCircle: () => CirclePercent,
            PercentDiamond: () => DiamondPercent,
            PercentSquare: () => SquarePercent,
            PersonStanding: () => PersonStanding,
            PhilippinePeso: () => PhilippinePeso,
            Phone: () => Phone,
            PhoneCall: () => PhoneCall,
            PhoneForwarded: () => PhoneForwarded,
            PhoneIncoming: () => PhoneIncoming,
            PhoneMissed: () => PhoneMissed,
            PhoneOff: () => PhoneOff,
            PhoneOutgoing: () => PhoneOutgoing,
            Pi: () => Pi,
            PiSquare: () => SquarePi,
            Piano: () => Piano,
            Pickaxe: () => Pickaxe,
            PictureInPicture: () => PictureInPicture,
            PictureInPicture2: () => PictureInPicture2,
            PieChart: () => ChartPie,
            PiggyBank: () => PiggyBank,
            Pilcrow: () => Pilcrow,
            PilcrowLeft: () => PilcrowLeft,
            PilcrowRight: () => PilcrowRight,
            PilcrowSquare: () => SquarePilcrow,
            Pill: () => Pill,
            PillBottle: () => PillBottle,
            Pin: () => Pin,
            PinOff: () => PinOff,
            Pipette: () => Pipette,
            Pizza: () => Pizza,
            Plane: () => Plane,
            PlaneLanding: () => PlaneLanding,
            PlaneTakeoff: () => PlaneTakeoff,
            Play: () => Play,
            PlayCircle: () => CirclePlay,
            PlaySquare: () => SquarePlay,
            Plug: () => Plug,
            Plug2: () => Plug2,
            PlugZap: () => PlugZap,
            PlugZap2: () => PlugZap,
            Plus: () => Plus,
            PlusCircle: () => CirclePlus,
            PlusSquare: () => SquarePlus,
            Pocket: () => Pocket,
            PocketKnife: () => PocketKnife,
            Podcast: () => Podcast,
            Pointer: () => Pointer,
            PointerOff: () => PointerOff,
            Popcorn: () => Popcorn,
            Popsicle: () => Popsicle,
            PoundSterling: () => PoundSterling,
            Power: () => Power,
            PowerCircle: () => CirclePower,
            PowerOff: () => PowerOff,
            PowerSquare: () => SquarePower,
            Presentation: () => Presentation,
            Printer: () => Printer,
            PrinterCheck: () => PrinterCheck,
            Projector: () => Projector,
            Proportions: () => Proportions,
            Puzzle: () => Puzzle,
            Pyramid: () => Pyramid,
            QrCode: () => QrCode,
            Quote: () => Quote,
            Rabbit: () => Rabbit,
            Radar: () => Radar,
            Radiation: () => Radiation,
            Radical: () => Radical,
            Radio: () => Radio,
            RadioReceiver: () => RadioReceiver,
            RadioTower: () => RadioTower,
            Radius: () => Radius,
            RailSymbol: () => RailSymbol,
            Rainbow: () => Rainbow,
            Rat: () => Rat,
            Ratio: () => Ratio,
            Receipt: () => Receipt,
            ReceiptCent: () => ReceiptCent,
            ReceiptEuro: () => ReceiptEuro,
            ReceiptIndianRupee: () => ReceiptIndianRupee,
            ReceiptJapaneseYen: () => ReceiptJapaneseYen,
            ReceiptPoundSterling: () => ReceiptPoundSterling,
            ReceiptRussianRuble: () => ReceiptRussianRuble,
            ReceiptSwissFranc: () => ReceiptSwissFranc,
            ReceiptText: () => ReceiptText,
            ReceiptTurkishLira: () => ReceiptTurkishLira,
            RectangleCircle: () => RectangleCircle,
            RectangleEllipsis: () => RectangleEllipsis,
            RectangleGoggles: () => RectangleGoggles,
            RectangleHorizontal: () => RectangleHorizontal,
            RectangleVertical: () => RectangleVertical,
            Recycle: () => Recycle,
            Redo: () => Redo,
            Redo2: () => Redo2,
            RedoDot: () => RedoDot,
            RefreshCcw: () => RefreshCcw,
            RefreshCcwDot: () => RefreshCcwDot,
            RefreshCw: () => RefreshCw,
            RefreshCwOff: () => RefreshCwOff,
            Refrigerator: () => Refrigerator,
            Regex: () => Regex,
            RemoveFormatting: () => RemoveFormatting,
            Repeat: () => Repeat,
            Repeat1: () => Repeat1,
            Repeat2: () => Repeat2,
            Replace: () => Replace,
            ReplaceAll: () => ReplaceAll,
            Reply: () => Reply,
            ReplyAll: () => ReplyAll,
            Rewind: () => Rewind,
            Ribbon: () => Ribbon,
            Rocket: () => Rocket,
            RockingChair: () => RockingChair,
            RollerCoaster: () => RollerCoaster,
            Rose: () => Rose,
            Rotate3D: () => Rotate3d,
            Rotate3d: () => Rotate3d,
            RotateCcw: () => RotateCcw,
            RotateCcwKey: () => RotateCcwKey,
            RotateCcwSquare: () => RotateCcwSquare,
            RotateCw: () => RotateCw,
            RotateCwSquare: () => RotateCwSquare,
            Route: () => Route,
            RouteOff: () => RouteOff,
            Router: () => Router,
            Rows: () => Rows2,
            Rows2: () => Rows2,
            Rows3: () => Rows3,
            Rows4: () => Rows4,
            Rss: () => Rss,
            Ruler: () => Ruler,
            RulerDimensionLine: () => RulerDimensionLine,
            RussianRuble: () => RussianRuble,
            Sailboat: () => Sailboat,
            Salad: () => Salad,
            Sandwich: () => Sandwich,
            Satellite: () => Satellite,
            SatelliteDish: () => SatelliteDish,
            SaudiRiyal: () => SaudiRiyal,
            Save: () => Save,
            SaveAll: () => SaveAll,
            SaveOff: () => SaveOff,
            Scale: () => Scale,
            Scale3D: () => Scale3d,
            Scale3d: () => Scale3d,
            Scaling: () => Scaling,
            Scan: () => Scan,
            ScanBarcode: () => ScanBarcode,
            ScanEye: () => ScanEye,
            ScanFace: () => ScanFace,
            ScanHeart: () => ScanHeart,
            ScanLine: () => ScanLine,
            ScanQrCode: () => ScanQrCode,
            ScanSearch: () => ScanSearch,
            ScanText: () => ScanText,
            ScatterChart: () => ChartScatter,
            School: () => School,
            School2: () => University,
            Scissors: () => Scissors,
            ScissorsLineDashed: () => ScissorsLineDashed,
            ScissorsSquare: () => SquareScissors,
            ScissorsSquareDashedBottom: () => SquareBottomDashedScissors,
            ScreenShare: () => ScreenShare,
            ScreenShareOff: () => ScreenShareOff,
            Scroll: () => Scroll,
            ScrollText: () => ScrollText,
            Search: () => Search,
            SearchCheck: () => SearchCheck,
            SearchCode: () => SearchCode,
            SearchSlash: () => SearchSlash,
            SearchX: () => SearchX,
            Section: () => Section,
            Send: () => Send,
            SendHorizonal: () => SendHorizontal,
            SendHorizontal: () => SendHorizontal,
            SendToBack: () => SendToBack,
            SeparatorHorizontal: () => SeparatorHorizontal,
            SeparatorVertical: () => SeparatorVertical,
            Server: () => Server,
            ServerCog: () => ServerCog,
            ServerCrash: () => ServerCrash,
            ServerOff: () => ServerOff,
            Settings: () => Settings,
            Settings2: () => Settings2,
            Shapes: () => Shapes,
            Share: () => Share,
            Share2: () => Share2,
            Sheet: () => Sheet,
            Shell: () => Shell,
            Shield: () => Shield,
            ShieldAlert: () => ShieldAlert,
            ShieldBan: () => ShieldBan,
            ShieldCheck: () => ShieldCheck,
            ShieldClose: () => ShieldX,
            ShieldEllipsis: () => ShieldEllipsis,
            ShieldHalf: () => ShieldHalf,
            ShieldMinus: () => ShieldMinus,
            ShieldOff: () => ShieldOff,
            ShieldPlus: () => ShieldPlus,
            ShieldQuestion: () => ShieldQuestionMark,
            ShieldQuestionMark: () => ShieldQuestionMark,
            ShieldUser: () => ShieldUser,
            ShieldX: () => ShieldX,
            Ship: () => Ship,
            ShipWheel: () => ShipWheel,
            Shirt: () => Shirt,
            ShoppingBag: () => ShoppingBag,
            ShoppingBasket: () => ShoppingBasket,
            ShoppingCart: () => ShoppingCart,
            Shovel: () => Shovel,
            ShowerHead: () => ShowerHead,
            Shredder: () => Shredder,
            Shrimp: () => Shrimp,
            Shrink: () => Shrink,
            Shrub: () => Shrub,
            Shuffle: () => Shuffle,
            Sidebar: () => PanelLeft,
            SidebarClose: () => PanelLeftClose,
            SidebarOpen: () => PanelLeftOpen,
            Sigma: () => Sigma,
            SigmaSquare: () => SquareSigma,
            Signal: () => Signal,
            SignalHigh: () => SignalHigh,
            SignalLow: () => SignalLow,
            SignalMedium: () => SignalMedium,
            SignalZero: () => SignalZero,
            Signature: () => Signature,
            Signpost: () => Signpost,
            SignpostBig: () => SignpostBig,
            Siren: () => Siren,
            SkipBack: () => SkipBack,
            SkipForward: () => SkipForward,
            Skull: () => Skull,
            Slack: () => Slack,
            Slash: () => Slash,
            SlashSquare: () => SquareSlash,
            Slice: () => Slice,
            Sliders: () => SlidersVertical,
            SlidersHorizontal: () => SlidersHorizontal,
            SlidersVertical: () => SlidersVertical,
            Smartphone: () => Smartphone,
            SmartphoneCharging: () => SmartphoneCharging,
            SmartphoneNfc: () => SmartphoneNfc,
            Smile: () => Smile,
            SmilePlus: () => SmilePlus,
            Snail: () => Snail,
            Snowflake: () => Snowflake,
            SoapDispenserDroplet: () => SoapDispenserDroplet,
            Sofa: () => Sofa,
            SortAsc: () => ArrowUpNarrowWide,
            SortDesc: () => ArrowDownWideNarrow,
            Soup: () => Soup,
            Space: () => Space,
            Spade: () => Spade,
            Sparkle: () => Sparkle,
            Sparkles: () => Sparkles,
            Speaker: () => Speaker,
            Speech: () => Speech,
            SpellCheck: () => SpellCheck,
            SpellCheck2: () => SpellCheck2,
            Spline: () => Spline,
            SplinePointer: () => SplinePointer,
            Split: () => Split,
            SplitSquareHorizontal: () => SquareSplitHorizontal,
            SplitSquareVertical: () => SquareSplitVertical,
            Spool: () => Spool,
            Spotlight: () => Spotlight,
            SprayCan: () => SprayCan,
            Sprout: () => Sprout,
            Square: () => Square,
            SquareActivity: () => SquareActivity,
            SquareArrowDown: () => SquareArrowDown,
            SquareArrowDownLeft: () => SquareArrowDownLeft,
            SquareArrowDownRight: () => SquareArrowDownRight,
            SquareArrowLeft: () => SquareArrowLeft,
            SquareArrowOutDownLeft: () => SquareArrowOutDownLeft,
            SquareArrowOutDownRight: () => SquareArrowOutDownRight,
            SquareArrowOutUpLeft: () => SquareArrowOutUpLeft,
            SquareArrowOutUpRight: () => SquareArrowOutUpRight,
            SquareArrowRight: () => SquareArrowRight,
            SquareArrowUp: () => SquareArrowUp,
            SquareArrowUpLeft: () => SquareArrowUpLeft,
            SquareArrowUpRight: () => SquareArrowUpRight,
            SquareAsterisk: () => SquareAsterisk,
            SquareBottomDashedScissors: () => SquareBottomDashedScissors,
            SquareChartGantt: () => SquareChartGantt,
            SquareCheck: () => SquareCheck,
            SquareCheckBig: () => SquareCheckBig,
            SquareChevronDown: () => SquareChevronDown,
            SquareChevronLeft: () => SquareChevronLeft,
            SquareChevronRight: () => SquareChevronRight,
            SquareChevronUp: () => SquareChevronUp,
            SquareCode: () => SquareCode,
            SquareDashed: () => SquareDashed,
            SquareDashedBottom: () => SquareDashedBottom,
            SquareDashedBottomCode: () => SquareDashedBottomCode,
            SquareDashedKanban: () => SquareDashedKanban,
            SquareDashedMousePointer: () => SquareDashedMousePointer,
            SquareDashedTopSolid: () => SquareDashedTopSolid,
            SquareDivide: () => SquareDivide,
            SquareDot: () => SquareDot,
            SquareEqual: () => SquareEqual,
            SquareFunction: () => SquareFunction,
            SquareGanttChart: () => SquareChartGantt,
            SquareKanban: () => SquareKanban,
            SquareLibrary: () => SquareLibrary,
            SquareM: () => SquareM,
            SquareMenu: () => SquareMenu,
            SquareMinus: () => SquareMinus,
            SquareMousePointer: () => SquareMousePointer,
            SquareParking: () => SquareParking,
            SquareParkingOff: () => SquareParkingOff,
            SquarePause: () => SquarePause,
            SquarePen: () => SquarePen,
            SquarePercent: () => SquarePercent,
            SquarePi: () => SquarePi,
            SquarePilcrow: () => SquarePilcrow,
            SquarePlay: () => SquarePlay,
            SquarePlus: () => SquarePlus,
            SquarePower: () => SquarePower,
            SquareRadical: () => SquareRadical,
            SquareRoundCorner: () => SquareRoundCorner,
            SquareScissors: () => SquareScissors,
            SquareSigma: () => SquareSigma,
            SquareSlash: () => SquareSlash,
            SquareSplitHorizontal: () => SquareSplitHorizontal,
            SquareSplitVertical: () => SquareSplitVertical,
            SquareSquare: () => SquareSquare,
            SquareStack: () => SquareStack,
            SquareStar: () => SquareStar,
            SquareStop: () => SquareStop,
            SquareTerminal: () => SquareTerminal,
            SquareUser: () => SquareUser,
            SquareUserRound: () => SquareUserRound,
            SquareX: () => SquareX,
            SquaresExclude: () => SquaresExclude,
            SquaresIntersect: () => SquaresIntersect,
            SquaresSubtract: () => SquaresSubtract,
            SquaresUnite: () => SquaresUnite,
            Squircle: () => Squircle,
            SquircleDashed: () => SquircleDashed,
            Squirrel: () => Squirrel,
            Stamp: () => Stamp,
            Star: () => Star,
            StarHalf: () => StarHalf,
            StarOff: () => StarOff,
            Stars: () => Sparkles,
            StepBack: () => StepBack,
            StepForward: () => StepForward,
            Stethoscope: () => Stethoscope,
            Sticker: () => Sticker,
            StickyNote: () => StickyNote,
            StopCircle: () => CircleStop,
            Store: () => Store,
            StretchHorizontal: () => StretchHorizontal,
            StretchVertical: () => StretchVertical,
            Strikethrough: () => Strikethrough,
            Subscript: () => Subscript,
            Subtitles: () => Captions,
            Sun: () => Sun,
            SunDim: () => SunDim,
            SunMedium: () => SunMedium,
            SunMoon: () => SunMoon,
            SunSnow: () => SunSnow,
            Sunrise: () => Sunrise,
            Sunset: () => Sunset,
            Superscript: () => Superscript,
            SwatchBook: () => SwatchBook,
            SwissFranc: () => SwissFranc,
            SwitchCamera: () => SwitchCamera,
            Sword: () => Sword,
            Swords: () => Swords,
            Syringe: () => Syringe,
            Table: () => Table,
            Table2: () => Table2,
            TableCellsMerge: () => TableCellsMerge,
            TableCellsSplit: () => TableCellsSplit,
            TableColumnsSplit: () => TableColumnsSplit,
            TableConfig: () => Columns3Cog,
            TableOfContents: () => TableOfContents,
            TableProperties: () => TableProperties,
            TableRowsSplit: () => TableRowsSplit,
            Tablet: () => Tablet,
            TabletSmartphone: () => TabletSmartphone,
            Tablets: () => Tablets,
            Tag: () => Tag,
            Tags: () => Tags,
            Tally1: () => Tally1,
            Tally2: () => Tally2,
            Tally3: () => Tally3,
            Tally4: () => Tally4,
            Tally5: () => Tally5,
            Tangent: () => Tangent,
            Target: () => Target,
            Telescope: () => Telescope,
            Tent: () => Tent,
            TentTree: () => TentTree,
            Terminal: () => Terminal,
            TerminalSquare: () => SquareTerminal,
            TestTube: () => TestTube,
            TestTube2: () => TestTubeDiagonal,
            TestTubeDiagonal: () => TestTubeDiagonal,
            TestTubes: () => TestTubes,
            Text: () => TextAlignStart,
            TextAlignCenter: () => TextAlignCenter,
            TextAlignEnd: () => TextAlignEnd,
            TextAlignJustify: () => TextAlignJustify,
            TextAlignStart: () => TextAlignStart,
            TextCursor: () => TextCursor,
            TextCursorInput: () => TextCursorInput,
            TextInitial: () => TextInitial,
            TextQuote: () => TextQuote,
            TextSearch: () => TextSearch,
            TextSelect: () => TextSelect,
            TextSelection: () => TextSelect,
            TextWrap: () => TextWrap,
            Theater: () => Theater,
            Thermometer: () => Thermometer,
            ThermometerSnowflake: () => ThermometerSnowflake,
            ThermometerSun: () => ThermometerSun,
            ThumbsDown: () => ThumbsDown,
            ThumbsUp: () => ThumbsUp,
            Ticket: () => Ticket,
            TicketCheck: () => TicketCheck,
            TicketMinus: () => TicketMinus,
            TicketPercent: () => TicketPercent,
            TicketPlus: () => TicketPlus,
            TicketSlash: () => TicketSlash,
            TicketX: () => TicketX,
            Tickets: () => Tickets,
            TicketsPlane: () => TicketsPlane,
            Timer: () => Timer,
            TimerOff: () => TimerOff,
            TimerReset: () => TimerReset,
            ToggleLeft: () => ToggleLeft,
            ToggleRight: () => ToggleRight,
            Toilet: () => Toilet,
            ToolCase: () => ToolCase,
            Tornado: () => Tornado,
            Torus: () => Torus,
            Touchpad: () => Touchpad,
            TouchpadOff: () => TouchpadOff,
            TowerControl: () => TowerControl,
            ToyBrick: () => ToyBrick,
            Tractor: () => Tractor,
            TrafficCone: () => TrafficCone,
            Train: () => TramFront,
            TrainFront: () => TrainFront,
            TrainFrontTunnel: () => TrainFrontTunnel,
            TrainTrack: () => TrainTrack,
            TramFront: () => TramFront,
            Transgender: () => Transgender,
            Trash: () => Trash,
            Trash2: () => Trash2,
            TreeDeciduous: () => TreeDeciduous,
            TreePalm: () => TreePalm,
            TreePine: () => TreePine,
            Trees: () => Trees,
            Trello: () => Trello,
            TrendingDown: () => TrendingDown,
            TrendingUp: () => TrendingUp,
            TrendingUpDown: () => TrendingUpDown,
            Triangle: () => Triangle,
            TriangleAlert: () => TriangleAlert,
            TriangleDashed: () => TriangleDashed,
            TriangleRight: () => TriangleRight,
            Trophy: () => Trophy,
            Truck: () => Truck,
            TruckElectric: () => TruckElectric,
            TurkishLira: () => TurkishLira,
            Turntable: () => Turntable,
            Turtle: () => Turtle,
            Tv: () => Tv,
            Tv2: () => TvMinimal,
            TvMinimal: () => TvMinimal,
            TvMinimalPlay: () => TvMinimalPlay,
            Twitch: () => Twitch,
            Twitter: () => Twitter,
            Type: () => Type,
            TypeOutline: () => TypeOutline,
            Umbrella: () => Umbrella,
            UmbrellaOff: () => UmbrellaOff,
            Underline: () => Underline,
            Undo: () => Undo,
            Undo2: () => Undo2,
            UndoDot: () => UndoDot,
            UnfoldHorizontal: () => UnfoldHorizontal,
            UnfoldVertical: () => UnfoldVertical,
            Ungroup: () => Ungroup,
            University: () => University,
            Unlink: () => Unlink,
            Unlink2: () => Unlink2,
            Unlock: () => LockOpen,
            UnlockKeyhole: () => LockKeyholeOpen,
            Unplug: () => Unplug,
            Upload: () => Upload,
            UploadCloud: () => CloudUpload,
            Usb: () => Usb,
            User: () => User,
            User2: () => UserRound,
            UserCheck: () => UserCheck,
            UserCheck2: () => UserRoundCheck,
            UserCircle: () => CircleUser,
            UserCircle2: () => CircleUserRound,
            UserCog: () => UserCog,
            UserCog2: () => UserRoundCog,
            UserLock: () => UserLock,
            UserMinus: () => UserMinus,
            UserMinus2: () => UserRoundMinus,
            UserPen: () => UserPen,
            UserPlus: () => UserPlus,
            UserPlus2: () => UserRoundPlus,
            UserRound: () => UserRound,
            UserRoundCheck: () => UserRoundCheck,
            UserRoundCog: () => UserRoundCog,
            UserRoundMinus: () => UserRoundMinus,
            UserRoundPen: () => UserRoundPen,
            UserRoundPlus: () => UserRoundPlus,
            UserRoundSearch: () => UserRoundSearch,
            UserRoundX: () => UserRoundX,
            UserSearch: () => UserSearch,
            UserSquare: () => SquareUser,
            UserSquare2: () => SquareUserRound,
            UserStar: () => UserStar,
            UserX: () => UserX,
            UserX2: () => UserRoundX,
            Users: () => Users,
            Users2: () => UsersRound,
            UsersRound: () => UsersRound,
            Utensils: () => Utensils,
            UtensilsCrossed: () => UtensilsCrossed,
            UtilityPole: () => UtilityPole,
            Variable: () => Variable,
            Vault: () => Vault,
            VectorSquare: () => VectorSquare,
            Vegan: () => Vegan,
            VenetianMask: () => VenetianMask,
            Venus: () => Venus,
            VenusAndMars: () => VenusAndMars,
            Verified: () => BadgeCheck,
            Vibrate: () => Vibrate,
            VibrateOff: () => VibrateOff,
            Video: () => Video,
            VideoOff: () => VideoOff,
            Videotape: () => Videotape,
            View: () => View,
            Voicemail: () => Voicemail,
            Volleyball: () => Volleyball,
            Volume: () => Volume,
            Volume1: () => Volume1,
            Volume2: () => Volume2,
            VolumeOff: () => VolumeOff,
            VolumeX: () => VolumeX,
            Vote: () => Vote,
            Wallet: () => Wallet,
            Wallet2: () => WalletMinimal,
            WalletCards: () => WalletCards,
            WalletMinimal: () => WalletMinimal,
            Wallpaper: () => Wallpaper,
            Wand: () => Wand,
            Wand2: () => WandSparkles,
            WandSparkles: () => WandSparkles,
            Warehouse: () => Warehouse,
            WashingMachine: () => WashingMachine,
            Watch: () => Watch,
            Waves: () => Waves,
            WavesLadder: () => WavesLadder,
            Waypoints: () => Waypoints,
            Webcam: () => Webcam,
            Webhook: () => Webhook,
            WebhookOff: () => WebhookOff,
            Weight: () => Weight,
            Wheat: () => Wheat,
            WheatOff: () => WheatOff,
            WholeWord: () => WholeWord,
            Wifi: () => Wifi,
            WifiCog: () => WifiCog,
            WifiHigh: () => WifiHigh,
            WifiLow: () => WifiLow,
            WifiOff: () => WifiOff,
            WifiPen: () => WifiPen,
            WifiSync: () => WifiSync,
            WifiZero: () => WifiZero,
            Wind: () => Wind,
            WindArrowDown: () => WindArrowDown,
            Wine: () => Wine,
            WineOff: () => WineOff,
            Workflow: () => Workflow,
            Worm: () => Worm,
            WrapText: () => TextWrap,
            Wrench: () => Wrench,
            X: () => X,
            XCircle: () => CircleX,
            XOctagon: () => OctagonX,
            XSquare: () => SquareX,
            Youtube: () => Youtube,
            Zap: () => Zap,
            ZapOff: () => ZapOff,
            ZoomIn: () => ZoomIn,
            ZoomOut: () => ZoomOut
        });
        const flsModules = {};
        function getHash() {
            if (location.hash) return location.hash.replace("#", "");
        }
        let _slideUp = (target, duration = 500, showmore = 0) => {
            if (!target.classList.contains("_slide")) {
                target.classList.add("_slide");
                target.style.transitionProperty = "height, margin, padding";
                target.style.transitionDuration = duration + "ms";
                target.style.height = `${target.offsetHeight}px`;
                target.offsetHeight;
                target.style.overflow = "hidden";
                target.style.height = showmore ? `${showmore}px` : `0px`;
                target.style.paddingTop = 0;
                target.style.paddingBottom = 0;
                target.style.marginTop = 0;
                target.style.marginBottom = 0;
                window.setTimeout(() => {
                    target.hidden = !showmore ? true : false;
                    !showmore ? target.style.removeProperty("height") : null;
                    target.style.removeProperty("padding-top");
                    target.style.removeProperty("padding-bottom");
                    target.style.removeProperty("margin-top");
                    target.style.removeProperty("margin-bottom");
                    !showmore ? target.style.removeProperty("overflow") : null;
                    target.style.removeProperty("transition-duration");
                    target.style.removeProperty("transition-property");
                    target.classList.remove("_slide");
                    document.dispatchEvent(new CustomEvent("slideUpDone", {
                        detail: {
                            target
                        }
                    }));
                }, duration);
            }
        };
        let _slideDown = (target, duration = 500, showmore = 0) => {
            if (!target.classList.contains("_slide")) {
                target.classList.add("_slide");
                target.hidden = target.hidden ? false : null;
                showmore ? target.style.removeProperty("height") : null;
                let height = target.offsetHeight;
                target.style.overflow = "hidden";
                target.style.height = showmore ? `${showmore}px` : `0px`;
                target.style.paddingTop = 0;
                target.style.paddingBottom = 0;
                target.style.marginTop = 0;
                target.style.marginBottom = 0;
                target.offsetHeight;
                target.style.transitionProperty = "height, margin, padding";
                target.style.transitionDuration = duration + "ms";
                target.style.height = height + "px";
                target.style.removeProperty("padding-top");
                target.style.removeProperty("padding-bottom");
                target.style.removeProperty("margin-top");
                target.style.removeProperty("margin-bottom");
                window.setTimeout(() => {
                    target.style.removeProperty("height");
                    target.style.removeProperty("overflow");
                    target.style.removeProperty("transition-duration");
                    target.style.removeProperty("transition-property");
                    target.classList.remove("_slide");
                    document.dispatchEvent(new CustomEvent("slideDownDone", {
                        detail: {
                            target
                        }
                    }));
                }, duration);
            }
        };
        let _slideToggle = (target, duration = 500) => {
            if (target.hidden) return _slideDown(target, duration); else return _slideUp(target, duration);
        };
        let bodyLockStatus = true;
        let bodyLockToggle = (delay = 500) => {
            if (document.documentElement.classList.contains("lock")) bodyUnlock(delay); else bodyLock(delay);
        };
        let bodyUnlock = (delay = 500) => {
            if (bodyLockStatus) {
                const lockPaddingElements = document.querySelectorAll("[data-lp]");
                setTimeout(() => {
                    lockPaddingElements.forEach(lockPaddingElement => {
                        lockPaddingElement.style.paddingRight = "";
                    });
                    document.body.style.paddingRight = "";
                    document.documentElement.classList.remove("lock");
                }, delay);
                bodyLockStatus = false;
                setTimeout(function() {
                    bodyLockStatus = true;
                }, delay);
            }
        };
        let bodyLock = (delay = 500) => {
            if (bodyLockStatus) {
                const lockPaddingElements = document.querySelectorAll("[data-lp]");
                const lockPaddingValue = window.innerWidth - document.body.offsetWidth + "px";
                lockPaddingElements.forEach(lockPaddingElement => {
                    lockPaddingElement.style.paddingRight = lockPaddingValue;
                });
                document.body.style.paddingRight = lockPaddingValue;
                document.documentElement.classList.add("lock");
                bodyLockStatus = false;
                setTimeout(function() {
                    bodyLockStatus = true;
                }, delay);
            }
        };
        function menuInit() {
            if (document.querySelector(".icon-menu")) document.addEventListener("click", function(e) {
                if (bodyLockStatus && e.target.closest(".icon-menu")) {
                    bodyLockToggle();
                    document.documentElement.classList.toggle("menu-open");
                }
            });
        }
        function menuClose() {
            bodyUnlock();
            document.documentElement.classList.remove("menu-open");
        }
        function FLS(message) {
            setTimeout(() => {
                if (window.FLS) console.log(message);
            }, 0);
        }
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const defaultAttributes = {
            xmlns: "http://www.w3.org/2000/svg",
            width: 24,
            height: 24,
            viewBox: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": 2,
            "stroke-linecap": "round",
            "stroke-linejoin": "round"
        };
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const createSVGElement = ([tag, attrs, children]) => {
            const element = document.createElementNS("http://www.w3.org/2000/svg", tag);
            Object.keys(attrs).forEach(name => {
                element.setAttribute(name, String(attrs[name]));
            });
            if (children?.length) children.forEach(child => {
                const childElement = createSVGElement(child);
                element.appendChild(childElement);
            });
            return element;
        };
        const createElement = (iconNode, customAttrs = {}) => {
            const tag = "svg";
            const attrs = {
                ...defaultAttributes,
                ...customAttrs
            };
            return createSVGElement([ tag, attrs, iconNode ]);
        };
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const getAttrs = element => Array.from(element.attributes).reduce((attrs, attr) => {
            attrs[attr.name] = attr.value;
            return attrs;
        }, {});
        const getClassNames = attrs => {
            if (typeof attrs === "string") return attrs;
            if (!attrs || !attrs.class) return "";
            if (attrs.class && typeof attrs.class === "string") return attrs.class.split(" ");
            if (attrs.class && Array.isArray(attrs.class)) return attrs.class;
            return "";
        };
        const combineClassNames = arrayOfClassnames => {
            const classNameArray = arrayOfClassnames.flatMap(getClassNames);
            return classNameArray.map(classItem => classItem.trim()).filter(Boolean).filter((value, index, self) => self.indexOf(value) === index).join(" ");
        };
        const toPascalCase = string => string.replace(/(\w)(\w*)(_|-|\s*)/g, (g0, g1, g2) => g1.toUpperCase() + g2.toLowerCase());
        const replaceElement = (element, {nameAttr, icons, attrs}) => {
            const iconName = element.getAttribute(nameAttr);
            if (iconName == null) return;
            const ComponentName = toPascalCase(iconName);
            const iconNode = icons[ComponentName];
            if (!iconNode) return console.warn(`${element.outerHTML} icon name was not found in the provided icons object.`);
            const elementAttrs = getAttrs(element);
            const iconAttrs = {
                ...defaultAttributes,
                "data-lucide": iconName,
                ...attrs,
                ...elementAttrs
            };
            const classNames = combineClassNames([ "lucide", `lucide-${iconName}`, elementAttrs, attrs ]);
            if (classNames) Object.assign(iconAttrs, {
                class: classNames
            });
            const svgElement = createElement(iconNode, iconAttrs);
            return element.parentNode?.replaceChild(svgElement, element);
        };
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const createIcons = ({icons = {}, nameAttr = "data-lucide", attrs = {}, root = document} = {}) => {
            if (!Object.values(icons).length) throw new Error("Please provide an icons object.\nIf you want to use all the icons you can import it like:\n `import { createIcons, icons } from 'lucide';\nlucide.createIcons({icons});`");
            if (typeof root === "undefined") throw new Error("`createIcons()` only works in a browser environment.");
            const elementsToReplace = root.querySelectorAll(`[${nameAttr}]`);
            Array.from(elementsToReplace).forEach(element => replaceElement(element, {
                nameAttr,
                icons,
                attrs
            }));
            if (nameAttr === "data-lucide") {
                const deprecatedElements = root.querySelectorAll("[icon-name]");
                if (deprecatedElements.length > 0) {
                    console.warn("[Lucide] Some icons were found with the now deprecated icon-name attribute. These will still be replaced for backwards compatibility, but will no longer be supported in v1.0 and you should switch to data-lucide");
                    Array.from(deprecatedElements).forEach(element => replaceElement(element, {
                        nameAttr: "icon-name",
                        icons,
                        attrs
                    }));
                }
            }
        };
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AArrowDown = [ [ "path", {
            d: "m14 12 4 4 4-4"
        } ], [ "path", {
            d: "M18 16V7"
        } ], [ "path", {
            d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16"
        } ], [ "path", {
            d: "M3.304 13h6.392"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AArrowUp = [ [ "path", {
            d: "m14 11 4-4 4 4"
        } ], [ "path", {
            d: "M18 16V7"
        } ], [ "path", {
            d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16"
        } ], [ "path", {
            d: "M3.304 13h6.392"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ALargeSmall = [ [ "path", {
            d: "m15 16 2.536-7.328a1.02 1.02 1 0 1 1.928 0L22 16"
        } ], [ "path", {
            d: "M15.697 14h5.606"
        } ], [ "path", {
            d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16"
        } ], [ "path", {
            d: "M3.304 13h6.392"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Accessibility = [ [ "circle", {
            cx: "16",
            cy: "4",
            r: "1"
        } ], [ "path", {
            d: "m18 19 1-7-6 1"
        } ], [ "path", {
            d: "m5 8 3-3 5.5 3-2.36 3.5"
        } ], [ "path", {
            d: "M4.24 14.5a5 5 0 0 0 6.88 6"
        } ], [ "path", {
            d: "M13.76 17.5a5 5 0 0 0-6.88-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Activity = [ [ "path", {
            d: "M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AirVent = [ [ "path", {
            d: "M18 17.5a2.5 2.5 0 1 1-4 2.03V12"
        } ], [ "path", {
            d: "M6 12H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M6 8h12"
        } ], [ "path", {
            d: "M6.6 15.572A2 2 0 1 0 10 17v-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Airplay = [ [ "path", {
            d: "M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"
        } ], [ "path", {
            d: "m12 15 5 6H7Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlarmClockCheck = [ [ "circle", {
            cx: "12",
            cy: "13",
            r: "8"
        } ], [ "path", {
            d: "M5 3 2 6"
        } ], [ "path", {
            d: "m22 6-3-3"
        } ], [ "path", {
            d: "M6.38 18.7 4 21"
        } ], [ "path", {
            d: "M17.64 18.67 20 21"
        } ], [ "path", {
            d: "m9 13 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlarmClockMinus = [ [ "circle", {
            cx: "12",
            cy: "13",
            r: "8"
        } ], [ "path", {
            d: "M5 3 2 6"
        } ], [ "path", {
            d: "m22 6-3-3"
        } ], [ "path", {
            d: "M6.38 18.7 4 21"
        } ], [ "path", {
            d: "M17.64 18.67 20 21"
        } ], [ "path", {
            d: "M9 13h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlarmClockOff = [ [ "path", {
            d: "M6.87 6.87a8 8 0 1 0 11.26 11.26"
        } ], [ "path", {
            d: "M19.9 14.25a8 8 0 0 0-9.15-9.15"
        } ], [ "path", {
            d: "m22 6-3-3"
        } ], [ "path", {
            d: "M6.26 18.67 4 21"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M4 4 2 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlarmClockPlus = [ [ "circle", {
            cx: "12",
            cy: "13",
            r: "8"
        } ], [ "path", {
            d: "M5 3 2 6"
        } ], [ "path", {
            d: "m22 6-3-3"
        } ], [ "path", {
            d: "M6.38 18.7 4 21"
        } ], [ "path", {
            d: "M17.64 18.67 20 21"
        } ], [ "path", {
            d: "M12 10v6"
        } ], [ "path", {
            d: "M9 13h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlarmClock = [ [ "circle", {
            cx: "12",
            cy: "13",
            r: "8"
        } ], [ "path", {
            d: "M12 9v4l2 2"
        } ], [ "path", {
            d: "M5 3 2 6"
        } ], [ "path", {
            d: "m22 6-3-3"
        } ], [ "path", {
            d: "M6.38 18.7 4 21"
        } ], [ "path", {
            d: "M17.64 18.67 20 21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlarmSmoke = [ [ "path", {
            d: "M11 21c0-2.5 2-2.5 2-5"
        } ], [ "path", {
            d: "M16 21c0-2.5 2-2.5 2-5"
        } ], [ "path", {
            d: "m19 8-.8 3a1.25 1.25 0 0 1-1.2 1H7a1.25 1.25 0 0 1-1.2-1L5 8"
        } ], [ "path", {
            d: "M21 3a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a1 1 0 0 1 1-1z"
        } ], [ "path", {
            d: "M6 21c0-2.5 2-2.5 2-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Album = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "polyline", {
            points: "11 3 11 11 14 8 17 11 17 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignCenterHorizontal = [ [ "path", {
            d: "M2 12h20"
        } ], [ "path", {
            d: "M10 16v4a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-4"
        } ], [ "path", {
            d: "M10 8V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M20 16v1a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-1"
        } ], [ "path", {
            d: "M14 8V7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignCenterVertical = [ [ "path", {
            d: "M12 2v20"
        } ], [ "path", {
            d: "M8 10H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h4"
        } ], [ "path", {
            d: "M16 10h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-4"
        } ], [ "path", {
            d: "M8 20H7a2 2 0 0 1-2-2v-2c0-1.1.9-2 2-2h1"
        } ], [ "path", {
            d: "M16 14h1a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignEndHorizontal = [ [ "rect", {
            width: "6",
            height: "16",
            x: "4",
            y: "2",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "9",
            x: "14",
            y: "9",
            rx: "2"
        } ], [ "path", {
            d: "M22 22H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignEndVertical = [ [ "rect", {
            width: "16",
            height: "6",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "rect", {
            width: "9",
            height: "6",
            x: "9",
            y: "14",
            rx: "2"
        } ], [ "path", {
            d: "M22 22V2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignHorizontalDistributeCenter = [ [ "rect", {
            width: "6",
            height: "14",
            x: "4",
            y: "5",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "10",
            x: "14",
            y: "7",
            rx: "2"
        } ], [ "path", {
            d: "M17 22v-5"
        } ], [ "path", {
            d: "M17 7V2"
        } ], [ "path", {
            d: "M7 22v-3"
        } ], [ "path", {
            d: "M7 5V2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignHorizontalDistributeEnd = [ [ "rect", {
            width: "6",
            height: "14",
            x: "4",
            y: "5",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "10",
            x: "14",
            y: "7",
            rx: "2"
        } ], [ "path", {
            d: "M10 2v20"
        } ], [ "path", {
            d: "M20 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignHorizontalDistributeStart = [ [ "rect", {
            width: "6",
            height: "14",
            x: "4",
            y: "5",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "10",
            x: "14",
            y: "7",
            rx: "2"
        } ], [ "path", {
            d: "M4 2v20"
        } ], [ "path", {
            d: "M14 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignHorizontalJustifyCenter = [ [ "rect", {
            width: "6",
            height: "14",
            x: "2",
            y: "5",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "10",
            x: "16",
            y: "7",
            rx: "2"
        } ], [ "path", {
            d: "M12 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignHorizontalJustifyEnd = [ [ "rect", {
            width: "6",
            height: "14",
            x: "2",
            y: "5",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "10",
            x: "12",
            y: "7",
            rx: "2"
        } ], [ "path", {
            d: "M22 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignHorizontalJustifyStart = [ [ "rect", {
            width: "6",
            height: "14",
            x: "6",
            y: "5",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "10",
            x: "16",
            y: "7",
            rx: "2"
        } ], [ "path", {
            d: "M2 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignHorizontalSpaceAround = [ [ "rect", {
            width: "6",
            height: "10",
            x: "9",
            y: "7",
            rx: "2"
        } ], [ "path", {
            d: "M4 22V2"
        } ], [ "path", {
            d: "M20 22V2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignHorizontalSpaceBetween = [ [ "rect", {
            width: "6",
            height: "14",
            x: "3",
            y: "5",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "10",
            x: "15",
            y: "7",
            rx: "2"
        } ], [ "path", {
            d: "M3 2v20"
        } ], [ "path", {
            d: "M21 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignStartHorizontal = [ [ "rect", {
            width: "6",
            height: "16",
            x: "4",
            y: "6",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "9",
            x: "14",
            y: "6",
            rx: "2"
        } ], [ "path", {
            d: "M22 2H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignStartVertical = [ [ "rect", {
            width: "9",
            height: "6",
            x: "6",
            y: "14",
            rx: "2"
        } ], [ "rect", {
            width: "16",
            height: "6",
            x: "6",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M2 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignVerticalDistributeCenter = [ [ "path", {
            d: "M22 17h-3"
        } ], [ "path", {
            d: "M22 7h-5"
        } ], [ "path", {
            d: "M5 17H2"
        } ], [ "path", {
            d: "M7 7H2"
        } ], [ "rect", {
            x: "5",
            y: "14",
            width: "14",
            height: "6",
            rx: "2"
        } ], [ "rect", {
            x: "7",
            y: "4",
            width: "10",
            height: "6",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignVerticalDistributeEnd = [ [ "rect", {
            width: "14",
            height: "6",
            x: "5",
            y: "14",
            rx: "2"
        } ], [ "rect", {
            width: "10",
            height: "6",
            x: "7",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M2 20h20"
        } ], [ "path", {
            d: "M2 10h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignVerticalDistributeStart = [ [ "rect", {
            width: "14",
            height: "6",
            x: "5",
            y: "14",
            rx: "2"
        } ], [ "rect", {
            width: "10",
            height: "6",
            x: "7",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M2 14h20"
        } ], [ "path", {
            d: "M2 4h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignVerticalJustifyCenter = [ [ "rect", {
            width: "14",
            height: "6",
            x: "5",
            y: "16",
            rx: "2"
        } ], [ "rect", {
            width: "10",
            height: "6",
            x: "7",
            y: "2",
            rx: "2"
        } ], [ "path", {
            d: "M2 12h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignVerticalJustifyEnd = [ [ "rect", {
            width: "14",
            height: "6",
            x: "5",
            y: "12",
            rx: "2"
        } ], [ "rect", {
            width: "10",
            height: "6",
            x: "7",
            y: "2",
            rx: "2"
        } ], [ "path", {
            d: "M2 22h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignVerticalJustifyStart = [ [ "rect", {
            width: "14",
            height: "6",
            x: "5",
            y: "16",
            rx: "2"
        } ], [ "rect", {
            width: "10",
            height: "6",
            x: "7",
            y: "6",
            rx: "2"
        } ], [ "path", {
            d: "M2 2h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignVerticalSpaceAround = [ [ "rect", {
            width: "10",
            height: "6",
            x: "7",
            y: "9",
            rx: "2"
        } ], [ "path", {
            d: "M22 20H2"
        } ], [ "path", {
            d: "M22 4H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AlignVerticalSpaceBetween = [ [ "rect", {
            width: "14",
            height: "6",
            x: "5",
            y: "15",
            rx: "2"
        } ], [ "rect", {
            width: "10",
            height: "6",
            x: "7",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M2 21h20"
        } ], [ "path", {
            d: "M2 3h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ambulance = [ [ "path", {
            d: "M10 10H6"
        } ], [ "path", {
            d: "M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2"
        } ], [ "path", {
            d: "M19 18h2a1 1 0 0 0 1-1v-3.28a1 1 0 0 0-.684-.948l-1.923-.641a1 1 0 0 1-.578-.502l-1.539-3.076A1 1 0 0 0 16.382 8H14"
        } ], [ "path", {
            d: "M8 8v4"
        } ], [ "path", {
            d: "M9 18h6"
        } ], [ "circle", {
            cx: "17",
            cy: "18",
            r: "2"
        } ], [ "circle", {
            cx: "7",
            cy: "18",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ampersand = [ [ "path", {
            d: "M17.5 12c0 4.4-3.6 8-8 8A4.5 4.5 0 0 1 5 15.5c0-6 8-4 8-8.5a3 3 0 1 0-6 0c0 3 2.5 8.5 12 13"
        } ], [ "path", {
            d: "M16 12h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ampersands = [ [ "path", {
            d: "M10 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5"
        } ], [ "path", {
            d: "M22 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Amphora = [ [ "path", {
            d: "M10 2v5.632c0 .424-.272.795-.653.982A6 6 0 0 0 6 14c.006 4 3 7 5 8"
        } ], [ "path", {
            d: "M10 5H8a2 2 0 0 0 0 4h.68"
        } ], [ "path", {
            d: "M14 2v5.632c0 .424.272.795.652.982A6 6 0 0 1 18 14c0 4-3 7-5 8"
        } ], [ "path", {
            d: "M14 5h2a2 2 0 0 1 0 4h-.68"
        } ], [ "path", {
            d: "M18 22H6"
        } ], [ "path", {
            d: "M9 2h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Anchor = [ [ "path", {
            d: "M12 22V8"
        } ], [ "path", {
            d: "M5 12H2a10 10 0 0 0 20 0h-3"
        } ], [ "circle", {
            cx: "12",
            cy: "5",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Angry = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M16 16s-1.5-2-4-2-4 2-4 2"
        } ], [ "path", {
            d: "M7.5 8 10 9"
        } ], [ "path", {
            d: "m14 9 2.5-1"
        } ], [ "path", {
            d: "M9 10h.01"
        } ], [ "path", {
            d: "M15 10h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Annoyed = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M8 15h8"
        } ], [ "path", {
            d: "M8 9h2"
        } ], [ "path", {
            d: "M14 9h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Antenna = [ [ "path", {
            d: "M2 12 7 2"
        } ], [ "path", {
            d: "m7 12 5-10"
        } ], [ "path", {
            d: "m12 12 5-10"
        } ], [ "path", {
            d: "m17 12 5-10"
        } ], [ "path", {
            d: "M4.5 7h15"
        } ], [ "path", {
            d: "M12 16v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Anvil = [ [ "path", {
            d: "M7 10H6a4 4 0 0 1-4-4 1 1 0 0 1 1-1h4"
        } ], [ "path", {
            d: "M7 5a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1 7 7 0 0 1-7 7H8a1 1 0 0 1-1-1z"
        } ], [ "path", {
            d: "M9 12v5"
        } ], [ "path", {
            d: "M15 12v5"
        } ], [ "path", {
            d: "M5 20a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3 1 1 0 0 1-1 1H6a1 1 0 0 1-1-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Aperture = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m14.31 8 5.74 9.94"
        } ], [ "path", {
            d: "M9.69 8h11.48"
        } ], [ "path", {
            d: "m7.38 12 5.74-9.94"
        } ], [ "path", {
            d: "M9.69 16 3.95 6.06"
        } ], [ "path", {
            d: "M14.31 16H2.83"
        } ], [ "path", {
            d: "m16.62 12-5.74 9.94"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AppWindowMac = [ [ "rect", {
            width: "20",
            height: "16",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M6 8h.01"
        } ], [ "path", {
            d: "M10 8h.01"
        } ], [ "path", {
            d: "M14 8h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AppWindow = [ [ "rect", {
            x: "2",
            y: "4",
            width: "20",
            height: "16",
            rx: "2"
        } ], [ "path", {
            d: "M10 4v4"
        } ], [ "path", {
            d: "M2 8h20"
        } ], [ "path", {
            d: "M6 4v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Apple = [ [ "path", {
            d: "M12 6.528V3a1 1 0 0 1 1-1h0"
        } ], [ "path", {
            d: "M18.237 21A15 15 0 0 0 22 11a6 6 0 0 0-10-4.472A6 6 0 0 0 2 11a15.1 15.1 0 0 0 3.763 10 3 3 0 0 0 3.648.648 5.5 5.5 0 0 1 5.178 0A3 3 0 0 0 18.237 21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArchiveRestore = [ [ "rect", {
            width: "20",
            height: "5",
            x: "2",
            y: "3",
            rx: "1"
        } ], [ "path", {
            d: "M4 8v11a2 2 0 0 0 2 2h2"
        } ], [ "path", {
            d: "M20 8v11a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "m9 15 3-3 3 3"
        } ], [ "path", {
            d: "M12 12v9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArchiveX = [ [ "rect", {
            width: "20",
            height: "5",
            x: "2",
            y: "3",
            rx: "1"
        } ], [ "path", {
            d: "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8"
        } ], [ "path", {
            d: "m9.5 17 5-5"
        } ], [ "path", {
            d: "m9.5 12 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Armchair = [ [ "path", {
            d: "M19 9V6a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "M3 16a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z"
        } ], [ "path", {
            d: "M5 18v2"
        } ], [ "path", {
            d: "M19 18v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Archive = [ [ "rect", {
            width: "20",
            height: "5",
            x: "2",
            y: "3",
            rx: "1"
        } ], [ "path", {
            d: "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8"
        } ], [ "path", {
            d: "M10 12h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowBigDownDash = [ [ "path", {
            d: "M15 11a1 1 0 0 0 1 1h2.939a1 1 0 0 1 .75 1.811l-6.835 6.836a1.207 1.207 0 0 1-1.707 0L4.31 13.81a1 1 0 0 1 .75-1.811H8a1 1 0 0 0 1-1V9a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "M9 4h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowBigDown = [ [ "path", {
            d: "M15 11a1 1 0 0 0 1 1h2.939a1 1 0 0 1 .75 1.811l-6.835 6.836a1.207 1.207 0 0 1-1.707 0L4.31 13.81a1 1 0 0 1 .75-1.811H8a1 1 0 0 0 1-1V5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowBigLeftDash = [ [ "path", {
            d: "M13 9a1 1 0 0 1-1-1V5.061a1 1 0 0 0-1.811-.75l-6.835 6.836a1.207 1.207 0 0 0 0 1.707l6.835 6.835a1 1 0 0 0 1.811-.75V16a1 1 0 0 1 1-1h2a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1z"
        } ], [ "path", {
            d: "M20 9v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowBigLeft = [ [ "path", {
            d: "M13 9a1 1 0 0 1-1-1V5.061a1 1 0 0 0-1.811-.75l-6.835 6.836a1.207 1.207 0 0 0 0 1.707l6.835 6.835a1 1 0 0 0 1.811-.75V16a1 1 0 0 1 1-1h6a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowBigRightDash = [ [ "path", {
            d: "M11 9a1 1 0 0 0 1-1V5.061a1 1 0 0 1 1.811-.75l6.836 6.836a1.207 1.207 0 0 1 0 1.707l-6.836 6.835a1 1 0 0 1-1.811-.75V16a1 1 0 0 0-1-1H9a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z"
        } ], [ "path", {
            d: "M4 9v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowBigRight = [ [ "path", {
            d: "M11 9a1 1 0 0 0 1-1V5.061a1 1 0 0 1 1.811-.75l6.836 6.836a1.207 1.207 0 0 1 0 1.707l-6.836 6.835a1 1 0 0 1-1.811-.75V16a1 1 0 0 0-1-1H5a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowBigUpDash = [ [ "path", {
            d: "M9 13a1 1 0 0 0-1-1H5.061a1 1 0 0 1-.75-1.811l6.836-6.835a1.207 1.207 0 0 1 1.707 0l6.835 6.835a1 1 0 0 1-.75 1.811H16a1 1 0 0 0-1 1v2a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1z"
        } ], [ "path", {
            d: "M9 20h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowBigUp = [ [ "path", {
            d: "M9 13a1 1 0 0 0-1-1H5.061a1 1 0 0 1-.75-1.811l6.836-6.835a1.207 1.207 0 0 1 1.707 0l6.835 6.835a1 1 0 0 1-.75 1.811H16a1 1 0 0 0-1 1v6a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDown01 = [ [ "path", {
            d: "m3 16 4 4 4-4"
        } ], [ "path", {
            d: "M7 20V4"
        } ], [ "rect", {
            x: "15",
            y: "4",
            width: "4",
            height: "6",
            ry: "2"
        } ], [ "path", {
            d: "M17 20v-6h-2"
        } ], [ "path", {
            d: "M15 20h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDown10 = [ [ "path", {
            d: "m3 16 4 4 4-4"
        } ], [ "path", {
            d: "M7 20V4"
        } ], [ "path", {
            d: "M17 10V4h-2"
        } ], [ "path", {
            d: "M15 10h4"
        } ], [ "rect", {
            x: "15",
            y: "14",
            width: "4",
            height: "6",
            ry: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownAZ = [ [ "path", {
            d: "m3 16 4 4 4-4"
        } ], [ "path", {
            d: "M7 20V4"
        } ], [ "path", {
            d: "M20 8h-5"
        } ], [ "path", {
            d: "M15 10V6.5a2.5 2.5 0 0 1 5 0V10"
        } ], [ "path", {
            d: "M15 14h5l-5 6h5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownFromLine = [ [ "path", {
            d: "M19 3H5"
        } ], [ "path", {
            d: "M12 21V7"
        } ], [ "path", {
            d: "m6 15 6 6 6-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownNarrowWide = [ [ "path", {
            d: "m3 16 4 4 4-4"
        } ], [ "path", {
            d: "M7 20V4"
        } ], [ "path", {
            d: "M11 4h4"
        } ], [ "path", {
            d: "M11 8h7"
        } ], [ "path", {
            d: "M11 12h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownLeft = [ [ "path", {
            d: "M17 7 7 17"
        } ], [ "path", {
            d: "M17 17H7V7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownRight = [ [ "path", {
            d: "m7 7 10 10"
        } ], [ "path", {
            d: "M17 7v10H7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownToDot = [ [ "path", {
            d: "M12 2v14"
        } ], [ "path", {
            d: "m19 9-7 7-7-7"
        } ], [ "circle", {
            cx: "12",
            cy: "21",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownToLine = [ [ "path", {
            d: "M12 17V3"
        } ], [ "path", {
            d: "m6 11 6 6 6-6"
        } ], [ "path", {
            d: "M19 21H5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownUp = [ [ "path", {
            d: "m3 16 4 4 4-4"
        } ], [ "path", {
            d: "M7 20V4"
        } ], [ "path", {
            d: "m21 8-4-4-4 4"
        } ], [ "path", {
            d: "M17 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownWideNarrow = [ [ "path", {
            d: "m3 16 4 4 4-4"
        } ], [ "path", {
            d: "M7 20V4"
        } ], [ "path", {
            d: "M11 4h10"
        } ], [ "path", {
            d: "M11 8h7"
        } ], [ "path", {
            d: "M11 12h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDown = [ [ "path", {
            d: "M12 5v14"
        } ], [ "path", {
            d: "m19 12-7 7-7-7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowDownZA = [ [ "path", {
            d: "m3 16 4 4 4-4"
        } ], [ "path", {
            d: "M7 4v16"
        } ], [ "path", {
            d: "M15 4h5l-5 6h5"
        } ], [ "path", {
            d: "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20"
        } ], [ "path", {
            d: "M20 18h-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowLeftFromLine = [ [ "path", {
            d: "m9 6-6 6 6 6"
        } ], [ "path", {
            d: "M3 12h14"
        } ], [ "path", {
            d: "M21 19V5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowLeftRight = [ [ "path", {
            d: "M8 3 4 7l4 4"
        } ], [ "path", {
            d: "M4 7h16"
        } ], [ "path", {
            d: "m16 21 4-4-4-4"
        } ], [ "path", {
            d: "M20 17H4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowLeftToLine = [ [ "path", {
            d: "M3 19V5"
        } ], [ "path", {
            d: "m13 6-6 6 6 6"
        } ], [ "path", {
            d: "M7 12h14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowLeft = [ [ "path", {
            d: "m12 19-7-7 7-7"
        } ], [ "path", {
            d: "M19 12H5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowRightFromLine = [ [ "path", {
            d: "M3 5v14"
        } ], [ "path", {
            d: "M21 12H7"
        } ], [ "path", {
            d: "m15 18 6-6-6-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowRightLeft = [ [ "path", {
            d: "m16 3 4 4-4 4"
        } ], [ "path", {
            d: "M20 7H4"
        } ], [ "path", {
            d: "m8 21-4-4 4-4"
        } ], [ "path", {
            d: "M4 17h16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowRightToLine = [ [ "path", {
            d: "M17 12H3"
        } ], [ "path", {
            d: "m11 18 6-6-6-6"
        } ], [ "path", {
            d: "M21 5v14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowRight = [ [ "path", {
            d: "M5 12h14"
        } ], [ "path", {
            d: "m12 5 7 7-7 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUp01 = [ [ "path", {
            d: "m3 8 4-4 4 4"
        } ], [ "path", {
            d: "M7 4v16"
        } ], [ "rect", {
            x: "15",
            y: "4",
            width: "4",
            height: "6",
            ry: "2"
        } ], [ "path", {
            d: "M17 20v-6h-2"
        } ], [ "path", {
            d: "M15 20h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUp10 = [ [ "path", {
            d: "m3 8 4-4 4 4"
        } ], [ "path", {
            d: "M7 4v16"
        } ], [ "path", {
            d: "M17 10V4h-2"
        } ], [ "path", {
            d: "M15 10h4"
        } ], [ "rect", {
            x: "15",
            y: "14",
            width: "4",
            height: "6",
            ry: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpAZ = [ [ "path", {
            d: "m3 8 4-4 4 4"
        } ], [ "path", {
            d: "M7 4v16"
        } ], [ "path", {
            d: "M20 8h-5"
        } ], [ "path", {
            d: "M15 10V6.5a2.5 2.5 0 0 1 5 0V10"
        } ], [ "path", {
            d: "M15 14h5l-5 6h5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpDown = [ [ "path", {
            d: "m21 16-4 4-4-4"
        } ], [ "path", {
            d: "M17 20V4"
        } ], [ "path", {
            d: "m3 8 4-4 4 4"
        } ], [ "path", {
            d: "M7 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpFromDot = [ [ "path", {
            d: "m5 9 7-7 7 7"
        } ], [ "path", {
            d: "M12 16V2"
        } ], [ "circle", {
            cx: "12",
            cy: "21",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpFromLine = [ [ "path", {
            d: "m18 9-6-6-6 6"
        } ], [ "path", {
            d: "M12 3v14"
        } ], [ "path", {
            d: "M5 21h14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpLeft = [ [ "path", {
            d: "M7 17V7h10"
        } ], [ "path", {
            d: "M17 17 7 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpNarrowWide = [ [ "path", {
            d: "m3 8 4-4 4 4"
        } ], [ "path", {
            d: "M7 4v16"
        } ], [ "path", {
            d: "M11 12h4"
        } ], [ "path", {
            d: "M11 16h7"
        } ], [ "path", {
            d: "M11 20h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpRight = [ [ "path", {
            d: "M7 7h10v10"
        } ], [ "path", {
            d: "M7 17 17 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpToLine = [ [ "path", {
            d: "M5 3h14"
        } ], [ "path", {
            d: "m18 13-6-6-6 6"
        } ], [ "path", {
            d: "M12 7v14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpWideNarrow = [ [ "path", {
            d: "m3 8 4-4 4 4"
        } ], [ "path", {
            d: "M7 4v16"
        } ], [ "path", {
            d: "M11 12h10"
        } ], [ "path", {
            d: "M11 16h7"
        } ], [ "path", {
            d: "M11 20h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUpZA = [ [ "path", {
            d: "m3 8 4-4 4 4"
        } ], [ "path", {
            d: "M7 4v16"
        } ], [ "path", {
            d: "M15 4h5l-5 6h5"
        } ], [ "path", {
            d: "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20"
        } ], [ "path", {
            d: "M20 18h-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowUp = [ [ "path", {
            d: "m5 12 7-7 7 7"
        } ], [ "path", {
            d: "M12 19V5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ArrowsUpFromLine = [ [ "path", {
            d: "m4 6 3-3 3 3"
        } ], [ "path", {
            d: "M7 17V3"
        } ], [ "path", {
            d: "m14 6 3-3 3 3"
        } ], [ "path", {
            d: "M17 17V3"
        } ], [ "path", {
            d: "M4 21h16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Asterisk = [ [ "path", {
            d: "M12 6v12"
        } ], [ "path", {
            d: "M17.196 9 6.804 15"
        } ], [ "path", {
            d: "m6.804 9 10.392 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AtSign = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ], [ "path", {
            d: "M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Atom = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ], [ "path", {
            d: "M20.2 20.2c2.04-2.03.02-7.36-4.5-11.9-4.54-4.52-9.87-6.54-11.9-4.5-2.04 2.03-.02 7.36 4.5 11.9 4.54 4.52 9.87 6.54 11.9 4.5Z"
        } ], [ "path", {
            d: "M15.7 15.7c4.52-4.54 6.54-9.87 4.5-11.9-2.03-2.04-7.36-.02-11.9 4.5-4.52 4.54-6.54 9.87-4.5 11.9 2.03 2.04 7.36.02 11.9-4.5Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AudioLines = [ [ "path", {
            d: "M2 10v3"
        } ], [ "path", {
            d: "M6 6v11"
        } ], [ "path", {
            d: "M10 3v18"
        } ], [ "path", {
            d: "M14 8v7"
        } ], [ "path", {
            d: "M18 5v13"
        } ], [ "path", {
            d: "M22 10v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Award = [ [ "path", {
            d: "m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526"
        } ], [ "circle", {
            cx: "12",
            cy: "8",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const AudioWaveform = [ [ "path", {
            d: "M2 13a2 2 0 0 0 2-2V7a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0V4a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0v-4a2 2 0 0 1 2-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Axe = [ [ "path", {
            d: "m14 12-8.381 8.38a1 1 0 0 1-3.001-3L11 9"
        } ], [ "path", {
            d: "M15 15.5a.5.5 0 0 0 .5.5A6.5 6.5 0 0 0 22 9.5a.5.5 0 0 0-.5-.5h-1.672a2 2 0 0 1-1.414-.586l-5.062-5.062a1.205 1.205 0 0 0-1.704 0L9.352 5.648a1.205 1.205 0 0 0 0 1.704l5.062 5.062A2 2 0 0 1 15 13.828z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Axis3d = [ [ "path", {
            d: "M13.5 10.5 15 9"
        } ], [ "path", {
            d: "M4 4v15a1 1 0 0 0 1 1h15"
        } ], [ "path", {
            d: "M4.293 19.707 6 18"
        } ], [ "path", {
            d: "m9 15 1.5-1.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Baby = [ [ "path", {
            d: "M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5"
        } ], [ "path", {
            d: "M15 12h.01"
        } ], [ "path", {
            d: "M19.38 6.813A9 9 0 0 1 20.8 10.2a2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1"
        } ], [ "path", {
            d: "M9 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Backpack = [ [ "path", {
            d: "M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"
        } ], [ "path", {
            d: "M8 10h8"
        } ], [ "path", {
            d: "M8 18h8"
        } ], [ "path", {
            d: "M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6"
        } ], [ "path", {
            d: "M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeAlert = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "8",
            y2: "12"
        } ], [ "line", {
            x1: "12",
            x2: "12.01",
            y1: "16",
            y2: "16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeCheck = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "m9 12 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeDollarSign = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"
        } ], [ "path", {
            d: "M12 18V6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeCent = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "M12 7v10"
        } ], [ "path", {
            d: "M15.4 10a4 4 0 1 0 0 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeEuro = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "M7 12h5"
        } ], [ "path", {
            d: "M15 9.4a4 4 0 1 0 0 5.2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeIndianRupee = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "M8 8h8"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "path", {
            d: "m13 17-5-1h1a4 4 0 0 0 0-8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeInfo = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "16",
            y2: "12"
        } ], [ "line", {
            x1: "12",
            x2: "12.01",
            y1: "8",
            y2: "8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeJapaneseYen = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "m9 8 3 3v7"
        } ], [ "path", {
            d: "m12 11 3-3"
        } ], [ "path", {
            d: "M9 12h6"
        } ], [ "path", {
            d: "M9 16h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeMinus = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "line", {
            x1: "8",
            x2: "16",
            y1: "12",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgePercent = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "m15 9-6 6"
        } ], [ "path", {
            d: "M9 9h.01"
        } ], [ "path", {
            d: "M15 15h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgePlus = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "8",
            y2: "16"
        } ], [ "line", {
            x1: "8",
            x2: "16",
            y1: "12",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeQuestionMark = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
        } ], [ "line", {
            x1: "12",
            x2: "12.01",
            y1: "17",
            y2: "17"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgePoundSterling = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "M8 12h4"
        } ], [ "path", {
            d: "M10 16V9.5a2.5 2.5 0 0 1 5 0"
        } ], [ "path", {
            d: "M8 16h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeRussianRuble = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "M9 16h5"
        } ], [ "path", {
            d: "M9 12h5a2 2 0 1 0 0-4h-3v9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeSwissFranc = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "path", {
            d: "M11 17V8h4"
        } ], [ "path", {
            d: "M11 12h3"
        } ], [ "path", {
            d: "M9 16h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeTurkishLira = [ [ "path", {
            d: "M11 7v10a5 5 0 0 0 5-5"
        } ], [ "path", {
            d: "m15 8-6 3"
        } ], [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BadgeX = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ], [ "line", {
            x1: "15",
            x2: "9",
            y1: "9",
            y2: "15"
        } ], [ "line", {
            x1: "9",
            x2: "15",
            y1: "9",
            y2: "15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Badge = [ [ "path", {
            d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BaggageClaim = [ [ "path", {
            d: "M22 18H6a2 2 0 0 1-2-2V7a2 2 0 0 0-2-2"
        } ], [ "path", {
            d: "M17 14V4a2 2 0 0 0-2-2h-1a2 2 0 0 0-2 2v10"
        } ], [ "rect", {
            width: "13",
            height: "8",
            x: "8",
            y: "6",
            rx: "1"
        } ], [ "circle", {
            cx: "18",
            cy: "20",
            r: "2"
        } ], [ "circle", {
            cx: "9",
            cy: "20",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ban = [ [ "path", {
            d: "M4.929 4.929 19.07 19.071"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Banana = [ [ "path", {
            d: "M4 13c3.5-2 8-2 10 2a5.5 5.5 0 0 1 8 5"
        } ], [ "path", {
            d: "M5.15 17.89c5.52-1.52 8.65-6.89 7-12C11.55 4 11.5 2 13 2c3.22 0 5 5.5 5 8 0 6.5-4.2 12-10.49 12C5.11 22 2 22 2 20c0-1.5 1.14-1.55 3.15-2.11Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bandage = [ [ "path", {
            d: "M10 10.01h.01"
        } ], [ "path", {
            d: "M10 14.01h.01"
        } ], [ "path", {
            d: "M14 10.01h.01"
        } ], [ "path", {
            d: "M14 14.01h.01"
        } ], [ "path", {
            d: "M18 6v11.5"
        } ], [ "path", {
            d: "M6 6v12"
        } ], [ "rect", {
            x: "2",
            y: "6",
            width: "20",
            height: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BanknoteArrowDown = [ [ "path", {
            d: "M12 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5"
        } ], [ "path", {
            d: "m16 19 3 3 3-3"
        } ], [ "path", {
            d: "M18 12h.01"
        } ], [ "path", {
            d: "M19 16v6"
        } ], [ "path", {
            d: "M6 12h.01"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BanknoteArrowUp = [ [ "path", {
            d: "M12 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5"
        } ], [ "path", {
            d: "M18 12h.01"
        } ], [ "path", {
            d: "M19 22v-6"
        } ], [ "path", {
            d: "m22 19-3-3-3 3"
        } ], [ "path", {
            d: "M6 12h.01"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BanknoteX = [ [ "path", {
            d: "M13 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5"
        } ], [ "path", {
            d: "m17 17 5 5"
        } ], [ "path", {
            d: "M18 12h.01"
        } ], [ "path", {
            d: "m22 17-5 5"
        } ], [ "path", {
            d: "M6 12h.01"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Banknote = [ [ "rect", {
            width: "20",
            height: "12",
            x: "2",
            y: "6",
            rx: "2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ], [ "path", {
            d: "M6 12h.01M18 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Barcode = [ [ "path", {
            d: "M3 5v14"
        } ], [ "path", {
            d: "M8 5v14"
        } ], [ "path", {
            d: "M12 5v14"
        } ], [ "path", {
            d: "M17 5v14"
        } ], [ "path", {
            d: "M21 5v14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Barrel = [ [ "path", {
            d: "M10 3a41 41 0 0 0 0 18"
        } ], [ "path", {
            d: "M14 3a41 41 0 0 1 0 18"
        } ], [ "path", {
            d: "M17 3a2 2 0 0 1 1.68.92 15.25 15.25 0 0 1 0 16.16A2 2 0 0 1 17 21H7a2 2 0 0 1-1.68-.92 15.25 15.25 0 0 1 0-16.16A2 2 0 0 1 7 3z"
        } ], [ "path", {
            d: "M3.84 17h16.32"
        } ], [ "path", {
            d: "M3.84 7h16.32"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Baseline = [ [ "path", {
            d: "M4 20h16"
        } ], [ "path", {
            d: "m6 16 6-12 6 12"
        } ], [ "path", {
            d: "M8 12h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bath = [ [ "path", {
            d: "M10 4 8 6"
        } ], [ "path", {
            d: "M17 19v2"
        } ], [ "path", {
            d: "M2 12h20"
        } ], [ "path", {
            d: "M7 19v2"
        } ], [ "path", {
            d: "M9 5 7.621 3.621A2.121 2.121 0 0 0 4 5v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BatteryCharging = [ [ "path", {
            d: "m11 7-3 5h4l-3 5"
        } ], [ "path", {
            d: "M14.856 6H16a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.935"
        } ], [ "path", {
            d: "M22 14v-4"
        } ], [ "path", {
            d: "M5.14 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2.936"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BatteryFull = [ [ "path", {
            d: "M10 10v4"
        } ], [ "path", {
            d: "M14 10v4"
        } ], [ "path", {
            d: "M22 14v-4"
        } ], [ "path", {
            d: "M6 10v4"
        } ], [ "rect", {
            x: "2",
            y: "6",
            width: "16",
            height: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BatteryLow = [ [ "path", {
            d: "M22 14v-4"
        } ], [ "path", {
            d: "M6 14v-4"
        } ], [ "rect", {
            x: "2",
            y: "6",
            width: "16",
            height: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BatteryMedium = [ [ "path", {
            d: "M10 14v-4"
        } ], [ "path", {
            d: "M22 14v-4"
        } ], [ "path", {
            d: "M6 14v-4"
        } ], [ "rect", {
            x: "2",
            y: "6",
            width: "16",
            height: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BatteryPlus = [ [ "path", {
            d: "M10 9v6"
        } ], [ "path", {
            d: "M12.543 6H16a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.605"
        } ], [ "path", {
            d: "M22 14v-4"
        } ], [ "path", {
            d: "M7 12h6"
        } ], [ "path", {
            d: "M7.606 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.606"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BatteryWarning = [ [ "path", {
            d: "M10 17h.01"
        } ], [ "path", {
            d: "M10 7v6"
        } ], [ "path", {
            d: "M14 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M22 14v-4"
        } ], [ "path", {
            d: "M6 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Battery = [ [ "path", {
            d: "M 22 14 L 22 10"
        } ], [ "rect", {
            x: "2",
            y: "6",
            width: "16",
            height: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Beaker = [ [ "path", {
            d: "M4.5 3h15"
        } ], [ "path", {
            d: "M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3"
        } ], [ "path", {
            d: "M6 14h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BeanOff = [ [ "path", {
            d: "M9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22a13.96 13.96 0 0 0 9.9-4.1"
        } ], [ "path", {
            d: "M10.75 5.093A6 6 0 0 1 22 8c0 2.411-.61 4.68-1.683 6.66"
        } ], [ "path", {
            d: "M5.341 10.62a4 4 0 0 0 6.487 1.208M10.62 5.341a4.015 4.015 0 0 1 2.039 2.04"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bean = [ [ "path", {
            d: "M10.165 6.598C9.954 7.478 9.64 8.36 9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22c7.732 0 14-6.268 14-14a6 6 0 0 0-11.835-1.402Z"
        } ], [ "path", {
            d: "M5.341 10.62a4 4 0 1 0 5.279-5.28"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BedDouble = [ [ "path", {
            d: "M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8"
        } ], [ "path", {
            d: "M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4"
        } ], [ "path", {
            d: "M12 4v6"
        } ], [ "path", {
            d: "M2 18h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BedSingle = [ [ "path", {
            d: "M3 20v-8a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8"
        } ], [ "path", {
            d: "M5 10V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v4"
        } ], [ "path", {
            d: "M3 18h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bed = [ [ "path", {
            d: "M2 4v16"
        } ], [ "path", {
            d: "M2 8h18a2 2 0 0 1 2 2v10"
        } ], [ "path", {
            d: "M2 17h20"
        } ], [ "path", {
            d: "M6 8v9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Beef = [ [ "path", {
            d: "M16.4 13.7A6.5 6.5 0 1 0 6.28 6.6c-1.1 3.13-.78 3.9-3.18 6.08A3 3 0 0 0 5 18c4 0 8.4-1.8 11.4-4.3"
        } ], [ "path", {
            d: "m18.5 6 2.19 4.5a6.48 6.48 0 0 1-2.29 7.2C15.4 20.2 11 22 7 22a3 3 0 0 1-2.68-1.66L2.4 16.5"
        } ], [ "circle", {
            cx: "12.5",
            cy: "8.5",
            r: "2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BeerOff = [ [ "path", {
            d: "M13 13v5"
        } ], [ "path", {
            d: "M17 11.47V8"
        } ], [ "path", {
            d: "M17 11h1a3 3 0 0 1 2.745 4.211"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-3"
        } ], [ "path", {
            d: "M7.536 7.535C6.766 7.649 6.154 8 5.5 8a2.5 2.5 0 0 1-1.768-4.268"
        } ], [ "path", {
            d: "M8.727 3.204C9.306 2.767 9.885 2 11 2c1.56 0 2 1.5 3 1.5s1.72-.5 2.5-.5a1 1 0 1 1 0 5c-.78 0-1.5-.5-2.5-.5a3.149 3.149 0 0 0-.842.12"
        } ], [ "path", {
            d: "M9 14.6V18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Beer = [ [ "path", {
            d: "M17 11h1a3 3 0 0 1 0 6h-1"
        } ], [ "path", {
            d: "M9 12v6"
        } ], [ "path", {
            d: "M13 12v6"
        } ], [ "path", {
            d: "M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z"
        } ], [ "path", {
            d: "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BellDot = [ [ "path", {
            d: "M10.268 21a2 2 0 0 0 3.464 0"
        } ], [ "path", {
            d: "M13.916 2.314A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.74 7.327A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673 9 9 0 0 1-.585-.665"
        } ], [ "circle", {
            cx: "18",
            cy: "8",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BellElectric = [ [ "path", {
            d: "M18.518 17.347A7 7 0 0 1 14 19"
        } ], [ "path", {
            d: "M18.8 4A11 11 0 0 1 20 9"
        } ], [ "path", {
            d: "M9 9h.01"
        } ], [ "circle", {
            cx: "20",
            cy: "16",
            r: "2"
        } ], [ "circle", {
            cx: "9",
            cy: "9",
            r: "7"
        } ], [ "rect", {
            x: "4",
            y: "16",
            width: "10",
            height: "6",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BellMinus = [ [ "path", {
            d: "M10.268 21a2 2 0 0 0 3.464 0"
        } ], [ "path", {
            d: "M15 8h6"
        } ], [ "path", {
            d: "M16.243 3.757A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673A9.4 9.4 0 0 1 18.667 12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BellOff = [ [ "path", {
            d: "M10.268 21a2 2 0 0 0 3.464 0"
        } ], [ "path", {
            d: "M17 17H4a1 1 0 0 1-.74-1.673C4.59 13.956 6 12.499 6 8a6 6 0 0 1 .258-1.742"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M8.668 3.01A6 6 0 0 1 18 8c0 2.687.77 4.653 1.707 6.05"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BellPlus = [ [ "path", {
            d: "M10.268 21a2 2 0 0 0 3.464 0"
        } ], [ "path", {
            d: "M15 8h6"
        } ], [ "path", {
            d: "M18 5v6"
        } ], [ "path", {
            d: "M20.002 14.464a9 9 0 0 0 .738.863A1 1 0 0 1 20 17H4a1 1 0 0 1-.74-1.673C4.59 13.956 6 12.499 6 8a6 6 0 0 1 8.75-5.332"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BellRing = [ [ "path", {
            d: "M10.268 21a2 2 0 0 0 3.464 0"
        } ], [ "path", {
            d: "M22 8c0-2.3-.8-4.3-2-6"
        } ], [ "path", {
            d: "M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326"
        } ], [ "path", {
            d: "M4 2C2.8 3.7 2 5.7 2 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bell = [ [ "path", {
            d: "M10.268 21a2 2 0 0 0 3.464 0"
        } ], [ "path", {
            d: "M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BetweenHorizontalEnd = [ [ "rect", {
            width: "13",
            height: "7",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "path", {
            d: "m22 15-3-3 3-3"
        } ], [ "rect", {
            width: "13",
            height: "7",
            x: "3",
            y: "14",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BetweenHorizontalStart = [ [ "rect", {
            width: "13",
            height: "7",
            x: "8",
            y: "3",
            rx: "1"
        } ], [ "path", {
            d: "m2 9 3 3-3 3"
        } ], [ "rect", {
            width: "13",
            height: "7",
            x: "8",
            y: "14",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BetweenVerticalEnd = [ [ "rect", {
            width: "7",
            height: "13",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "path", {
            d: "m9 22 3-3 3 3"
        } ], [ "rect", {
            width: "7",
            height: "13",
            x: "14",
            y: "3",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BetweenVerticalStart = [ [ "rect", {
            width: "7",
            height: "13",
            x: "3",
            y: "8",
            rx: "1"
        } ], [ "path", {
            d: "m15 2-3 3-3-3"
        } ], [ "rect", {
            width: "7",
            height: "13",
            x: "14",
            y: "8",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bike = [ [ "circle", {
            cx: "18.5",
            cy: "17.5",
            r: "3.5"
        } ], [ "circle", {
            cx: "5.5",
            cy: "17.5",
            r: "3.5"
        } ], [ "circle", {
            cx: "15",
            cy: "5",
            r: "1"
        } ], [ "path", {
            d: "M12 17.5V14l-3-3 4-3 2 3h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BicepsFlexed = [ [ "path", {
            d: "M12.409 13.017A5 5 0 0 1 22 15c0 3.866-4 7-9 7-4.077 0-8.153-.82-10.371-2.462-.426-.316-.631-.832-.62-1.362C2.118 12.723 2.627 2 10 2a3 3 0 0 1 3 3 2 2 0 0 1-2 2c-1.105 0-1.64-.444-2-1"
        } ], [ "path", {
            d: "M15 14a5 5 0 0 0-7.584 2"
        } ], [ "path", {
            d: "M9.964 6.825C8.019 7.977 9.5 13 8 15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Binary = [ [ "rect", {
            x: "14",
            y: "14",
            width: "4",
            height: "6",
            rx: "2"
        } ], [ "rect", {
            x: "6",
            y: "4",
            width: "4",
            height: "6",
            rx: "2"
        } ], [ "path", {
            d: "M6 20h4"
        } ], [ "path", {
            d: "M14 10h4"
        } ], [ "path", {
            d: "M6 14h2v6"
        } ], [ "path", {
            d: "M14 4h2v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Binoculars = [ [ "path", {
            d: "M10 10h4"
        } ], [ "path", {
            d: "M19 7V4a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3"
        } ], [ "path", {
            d: "M20 21a2 2 0 0 0 2-2v-3.851c0-1.39-2-2.962-2-4.829V8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v11a2 2 0 0 0 2 2z"
        } ], [ "path", {
            d: "M 22 16 L 2 16"
        } ], [ "path", {
            d: "M4 21a2 2 0 0 1-2-2v-3.851c0-1.39 2-2.962 2-4.829V8a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v11a2 2 0 0 1-2 2z"
        } ], [ "path", {
            d: "M9 7V4a1 1 0 0 0-1-1H6a1 1 0 0 0-1 1v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Biohazard = [ [ "circle", {
            cx: "12",
            cy: "11.9",
            r: "2"
        } ], [ "path", {
            d: "M6.7 3.4c-.9 2.5 0 5.2 2.2 6.7C6.5 9 3.7 9.6 2 11.6"
        } ], [ "path", {
            d: "m8.9 10.1 1.4.8"
        } ], [ "path", {
            d: "M17.3 3.4c.9 2.5 0 5.2-2.2 6.7 2.4-1.2 5.2-.6 6.9 1.5"
        } ], [ "path", {
            d: "m15.1 10.1-1.4.8"
        } ], [ "path", {
            d: "M16.7 20.8c-2.6-.4-4.6-2.6-4.7-5.3-.2 2.6-2.1 4.8-4.7 5.2"
        } ], [ "path", {
            d: "M12 13.9v1.6"
        } ], [ "path", {
            d: "M13.5 5.4c-1-.2-2-.2-3 0"
        } ], [ "path", {
            d: "M17 16.4c.7-.7 1.2-1.6 1.5-2.5"
        } ], [ "path", {
            d: "M5.5 13.9c.3.9.8 1.8 1.5 2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bird = [ [ "path", {
            d: "M16 7h.01"
        } ], [ "path", {
            d: "M3.4 18H12a8 8 0 0 0 8-8V7a4 4 0 0 0-7.28-2.3L2 20"
        } ], [ "path", {
            d: "m20 7 2 .5-2 .5"
        } ], [ "path", {
            d: "M10 18v3"
        } ], [ "path", {
            d: "M14 17.75V21"
        } ], [ "path", {
            d: "M7 18a6 6 0 0 0 3.84-10.61"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bitcoin = [ [ "path", {
            d: "M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Blend = [ [ "circle", {
            cx: "9",
            cy: "9",
            r: "7"
        } ], [ "circle", {
            cx: "15",
            cy: "15",
            r: "7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Blinds = [ [ "path", {
            d: "M3 3h18"
        } ], [ "path", {
            d: "M20 7H8"
        } ], [ "path", {
            d: "M20 11H8"
        } ], [ "path", {
            d: "M10 19h10"
        } ], [ "path", {
            d: "M8 15h12"
        } ], [ "path", {
            d: "M4 3v14"
        } ], [ "circle", {
            cx: "4",
            cy: "19",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Blocks = [ [ "path", {
            d: "M10 22V7a1 1 0 0 0-1-1H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5a1 1 0 0 0-1-1H2"
        } ], [ "rect", {
            x: "14",
            y: "2",
            width: "8",
            height: "8",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BluetoothConnected = [ [ "path", {
            d: "m7 7 10 10-5 5V2l5 5L7 17"
        } ], [ "line", {
            x1: "18",
            x2: "21",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "3",
            x2: "6",
            y1: "12",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BluetoothOff = [ [ "path", {
            d: "m17 17-5 5V12l-5 5"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M14.5 9.5 17 7l-5-5v4.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BluetoothSearching = [ [ "path", {
            d: "m7 7 10 10-5 5V2l5 5L7 17"
        } ], [ "path", {
            d: "M20.83 14.83a4 4 0 0 0 0-5.66"
        } ], [ "path", {
            d: "M18 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bold = [ [ "path", {
            d: "M6 12h9a4 4 0 0 1 0 8H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h7a4 4 0 0 1 0 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bluetooth = [ [ "path", {
            d: "m7 7 10 10-5 5V2l5 5L7 17"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bolt = [ [ "path", {
            d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bomb = [ [ "circle", {
            cx: "11",
            cy: "13",
            r: "9"
        } ], [ "path", {
            d: "M14.35 4.65 16.3 2.7a2.41 2.41 0 0 1 3.4 0l1.6 1.6a2.4 2.4 0 0 1 0 3.4l-1.95 1.95"
        } ], [ "path", {
            d: "m22 2-1.5 1.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bone = [ [ "path", {
            d: "M17 10c.7-.7 1.69 0 2.5 0a2.5 2.5 0 1 0 0-5 .5.5 0 0 1-.5-.5 2.5 2.5 0 1 0-5 0c0 .81.7 1.8 0 2.5l-7 7c-.7.7-1.69 0-2.5 0a2.5 2.5 0 0 0 0 5c.28 0 .5.22.5.5a2.5 2.5 0 1 0 5 0c0-.81-.7-1.8 0-2.5Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookA = [ [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "m8 13 4-7 4 7"
        } ], [ "path", {
            d: "M9.1 11h5.7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookAlert = [ [ "path", {
            d: "M12 13h.01"
        } ], [ "path", {
            d: "M12 6v3"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookAudio = [ [ "path", {
            d: "M12 6v7"
        } ], [ "path", {
            d: "M16 8v3"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M8 8v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookCheck = [ [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "m9 9.5 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookCopy = [ [ "path", {
            d: "M5 7a2 2 0 0 0-2 2v11"
        } ], [ "path", {
            d: "M5.803 18H5a2 2 0 0 0 0 4h9.5a.5.5 0 0 0 .5-.5V21"
        } ], [ "path", {
            d: "M9 15V4a2 2 0 0 1 2-2h9.5a.5.5 0 0 1 .5.5v14a.5.5 0 0 1-.5.5H11a2 2 0 0 1 0-4h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookDashed = [ [ "path", {
            d: "M12 17h1.5"
        } ], [ "path", {
            d: "M12 22h1.5"
        } ], [ "path", {
            d: "M12 2h1.5"
        } ], [ "path", {
            d: "M17.5 22H19a1 1 0 0 0 1-1"
        } ], [ "path", {
            d: "M17.5 2H19a1 1 0 0 1 1 1v1.5"
        } ], [ "path", {
            d: "M20 14v3h-2.5"
        } ], [ "path", {
            d: "M20 8.5V10"
        } ], [ "path", {
            d: "M4 10V8.5"
        } ], [ "path", {
            d: "M4 19.5V14"
        } ], [ "path", {
            d: "M4 4.5A2.5 2.5 0 0 1 6.5 2H8"
        } ], [ "path", {
            d: "M8 22H6.5a1 1 0 0 1 0-5H8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookDown = [ [ "path", {
            d: "M12 13V7"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "m9 10 3 3 3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookHeadphones = [ [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M8 12v-2a4 4 0 0 1 8 0v2"
        } ], [ "circle", {
            cx: "15",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "9",
            cy: "12",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookHeart = [ [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M8.62 9.8A2.25 2.25 0 1 1 12 6.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookImage = [ [ "path", {
            d: "m20 13.7-2.1-2.1a2 2 0 0 0-2.8 0L9.7 17"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "circle", {
            cx: "10",
            cy: "8",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookKey = [ [ "path", {
            d: "m19 3 1 1"
        } ], [ "path", {
            d: "m20 2-4.5 4.5"
        } ], [ "path", {
            d: "M20 7.898V21a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2h7.844"
        } ], [ "circle", {
            cx: "14",
            cy: "8",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookLock = [ [ "path", {
            d: "M18 6V4a2 2 0 1 0-4 0v2"
        } ], [ "path", {
            d: "M20 15v6a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H10"
        } ], [ "rect", {
            x: "12",
            y: "6",
            width: "8",
            height: "5",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookMarked = [ [ "path", {
            d: "M10 2v8l3-3 3 3V2"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookMinus = [ [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M9 10h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookOpenCheck = [ [ "path", {
            d: "M12 21V7"
        } ], [ "path", {
            d: "m16 12 2 2 4-4"
        } ], [ "path", {
            d: "M22 6V4a1 1 0 0 0-1-1h-5a4 4 0 0 0-4 4 4 4 0 0 0-4-4H3a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h6a3 3 0 0 1 3 3 3 3 0 0 1 3-3h6a1 1 0 0 0 1-1v-1.3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookOpenText = [ [ "path", {
            d: "M12 7v14"
        } ], [ "path", {
            d: "M16 12h2"
        } ], [ "path", {
            d: "M16 8h2"
        } ], [ "path", {
            d: "M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z"
        } ], [ "path", {
            d: "M6 12h2"
        } ], [ "path", {
            d: "M6 8h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookOpen = [ [ "path", {
            d: "M12 7v14"
        } ], [ "path", {
            d: "M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookPlus = [ [ "path", {
            d: "M12 7v6"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M9 10h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookText = [ [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M8 11h8"
        } ], [ "path", {
            d: "M8 7h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookType = [ [ "path", {
            d: "M10 13h4"
        } ], [ "path", {
            d: "M12 6v7"
        } ], [ "path", {
            d: "M16 8V6H8v2"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookUp2 = [ [ "path", {
            d: "M12 13V7"
        } ], [ "path", {
            d: "M18 2h1a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2"
        } ], [ "path", {
            d: "m9 10 3-3 3 3"
        } ], [ "path", {
            d: "m9 5 3-3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookUp = [ [ "path", {
            d: "M12 13V7"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "m9 10 3-3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookUser = [ [ "path", {
            d: "M15 13a3 3 0 1 0-6 0"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "circle", {
            cx: "12",
            cy: "8",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookX = [ [ "path", {
            d: "m14.5 7-5 5"
        } ], [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ], [ "path", {
            d: "m9.5 7 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Book = [ [ "path", {
            d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookmarkCheck = [ [ "path", {
            d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z"
        } ], [ "path", {
            d: "m9 10 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookmarkMinus = [ [ "path", {
            d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"
        } ], [ "line", {
            x1: "15",
            x2: "9",
            y1: "10",
            y2: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookmarkPlus = [ [ "path", {
            d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "7",
            y2: "13"
        } ], [ "line", {
            x1: "15",
            x2: "9",
            y1: "10",
            y2: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BookmarkX = [ [ "path", {
            d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z"
        } ], [ "path", {
            d: "m14.5 7.5-5 5"
        } ], [ "path", {
            d: "m9.5 7.5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bookmark = [ [ "path", {
            d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BoomBox = [ [ "path", {
            d: "M4 9V5a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4"
        } ], [ "path", {
            d: "M8 8v1"
        } ], [ "path", {
            d: "M12 8v1"
        } ], [ "path", {
            d: "M16 8v1"
        } ], [ "rect", {
            width: "20",
            height: "12",
            x: "2",
            y: "9",
            rx: "2"
        } ], [ "circle", {
            cx: "8",
            cy: "15",
            r: "2"
        } ], [ "circle", {
            cx: "16",
            cy: "15",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BotMessageSquare = [ [ "path", {
            d: "M12 6V2H8"
        } ], [ "path", {
            d: "M15 11v2"
        } ], [ "path", {
            d: "M2 12h2"
        } ], [ "path", {
            d: "M20 12h2"
        } ], [ "path", {
            d: "M20 16a2 2 0 0 1-2 2H8.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 4 20.286V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M9 11v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BotOff = [ [ "path", {
            d: "M13.67 8H18a2 2 0 0 1 2 2v4.33"
        } ], [ "path", {
            d: "M2 14h2"
        } ], [ "path", {
            d: "M20 14h2"
        } ], [ "path", {
            d: "M22 22 2 2"
        } ], [ "path", {
            d: "M8 8H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 1.414-.586"
        } ], [ "path", {
            d: "M9 13v2"
        } ], [ "path", {
            d: "M9.67 4H12v2.33"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bot = [ [ "path", {
            d: "M12 8V4H8"
        } ], [ "rect", {
            width: "16",
            height: "12",
            x: "4",
            y: "8",
            rx: "2"
        } ], [ "path", {
            d: "M2 14h2"
        } ], [ "path", {
            d: "M20 14h2"
        } ], [ "path", {
            d: "M15 13v2"
        } ], [ "path", {
            d: "M9 13v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BottleWine = [ [ "path", {
            d: "M10 3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a6 6 0 0 0 1.2 3.6l.6.8A6 6 0 0 1 17 13v8a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-8a6 6 0 0 1 1.2-3.6l.6-.8A6 6 0 0 0 10 5z"
        } ], [ "path", {
            d: "M17 13h-4a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BowArrow = [ [ "path", {
            d: "M17 3h4v4"
        } ], [ "path", {
            d: "M18.575 11.082a13 13 0 0 1 1.048 9.027 1.17 1.17 0 0 1-1.914.597L14 17"
        } ], [ "path", {
            d: "M7 10 3.29 6.29a1.17 1.17 0 0 1 .6-1.91 13 13 0 0 1 9.03 1.05"
        } ], [ "path", {
            d: "M7 14a1.7 1.7 0 0 0-1.207.5l-2.646 2.646A.5.5 0 0 0 3.5 18H5a1 1 0 0 1 1 1v1.5a.5.5 0 0 0 .854.354L9.5 18.207A1.7 1.7 0 0 0 10 17v-2a1 1 0 0 0-1-1z"
        } ], [ "path", {
            d: "M9.707 14.293 21 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Box = [ [ "path", {
            d: "M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z"
        } ], [ "path", {
            d: "m3.3 7 8.7 5 8.7-5"
        } ], [ "path", {
            d: "M12 22V12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Boxes = [ [ "path", {
            d: "M2.97 12.92A2 2 0 0 0 2 14.63v3.24a2 2 0 0 0 .97 1.71l3 1.8a2 2 0 0 0 2.06 0L12 19v-5.5l-5-3-4.03 2.42Z"
        } ], [ "path", {
            d: "m7 16.5-4.74-2.85"
        } ], [ "path", {
            d: "m7 16.5 5-3"
        } ], [ "path", {
            d: "M7 16.5v5.17"
        } ], [ "path", {
            d: "M12 13.5V19l3.97 2.38a2 2 0 0 0 2.06 0l3-1.8a2 2 0 0 0 .97-1.71v-3.24a2 2 0 0 0-.97-1.71L17 10.5l-5 3Z"
        } ], [ "path", {
            d: "m17 16.5-5-3"
        } ], [ "path", {
            d: "m17 16.5 4.74-2.85"
        } ], [ "path", {
            d: "M17 16.5v5.17"
        } ], [ "path", {
            d: "M7.97 4.42A2 2 0 0 0 7 6.13v4.37l5 3 5-3V6.13a2 2 0 0 0-.97-1.71l-3-1.8a2 2 0 0 0-2.06 0l-3 1.8Z"
        } ], [ "path", {
            d: "M12 8 7.26 5.15"
        } ], [ "path", {
            d: "m12 8 4.74-2.85"
        } ], [ "path", {
            d: "M12 13.5V8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Braces = [ [ "path", {
            d: "M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2 2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1"
        } ], [ "path", {
            d: "M16 21h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Brackets = [ [ "path", {
            d: "M16 3h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-3"
        } ], [ "path", {
            d: "M8 21H5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BrainCircuit = [ [ "path", {
            d: "M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z"
        } ], [ "path", {
            d: "M9 13a4.5 4.5 0 0 0 3-4"
        } ], [ "path", {
            d: "M6.003 5.125A3 3 0 0 0 6.401 6.5"
        } ], [ "path", {
            d: "M3.477 10.896a4 4 0 0 1 .585-.396"
        } ], [ "path", {
            d: "M6 18a4 4 0 0 1-1.967-.516"
        } ], [ "path", {
            d: "M12 13h4"
        } ], [ "path", {
            d: "M12 18h6a2 2 0 0 1 2 2v1"
        } ], [ "path", {
            d: "M12 8h8"
        } ], [ "path", {
            d: "M16 8V5a2 2 0 0 1 2-2"
        } ], [ "circle", {
            cx: "16",
            cy: "13",
            r: ".5"
        } ], [ "circle", {
            cx: "18",
            cy: "3",
            r: ".5"
        } ], [ "circle", {
            cx: "20",
            cy: "21",
            r: ".5"
        } ], [ "circle", {
            cx: "20",
            cy: "8",
            r: ".5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BrainCog = [ [ "path", {
            d: "m10.852 14.772-.383.923"
        } ], [ "path", {
            d: "m10.852 9.228-.383-.923"
        } ], [ "path", {
            d: "m13.148 14.772.382.924"
        } ], [ "path", {
            d: "m13.531 8.305-.383.923"
        } ], [ "path", {
            d: "m14.772 10.852.923-.383"
        } ], [ "path", {
            d: "m14.772 13.148.923.383"
        } ], [ "path", {
            d: "M17.598 6.5A3 3 0 1 0 12 5a3 3 0 0 0-5.63-1.446 3 3 0 0 0-.368 1.571 4 4 0 0 0-2.525 5.771"
        } ], [ "path", {
            d: "M17.998 5.125a4 4 0 0 1 2.525 5.771"
        } ], [ "path", {
            d: "M19.505 10.294a4 4 0 0 1-1.5 7.706"
        } ], [ "path", {
            d: "M4.032 17.483A4 4 0 0 0 11.464 20c.18-.311.892-.311 1.072 0a4 4 0 0 0 7.432-2.516"
        } ], [ "path", {
            d: "M4.5 10.291A4 4 0 0 0 6 18"
        } ], [ "path", {
            d: "M6.002 5.125a3 3 0 0 0 .4 1.375"
        } ], [ "path", {
            d: "m9.228 10.852-.923-.383"
        } ], [ "path", {
            d: "m9.228 13.148-.923.383"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Brain = [ [ "path", {
            d: "M12 18V5"
        } ], [ "path", {
            d: "M15 13a4.17 4.17 0 0 1-3-4 4.17 4.17 0 0 1-3 4"
        } ], [ "path", {
            d: "M17.598 6.5A3 3 0 1 0 12 5a3 3 0 1 0-5.598 1.5"
        } ], [ "path", {
            d: "M17.997 5.125a4 4 0 0 1 2.526 5.77"
        } ], [ "path", {
            d: "M18 18a4 4 0 0 0 2-7.464"
        } ], [ "path", {
            d: "M19.967 17.483A4 4 0 1 1 12 18a4 4 0 1 1-7.967-.517"
        } ], [ "path", {
            d: "M6 18a4 4 0 0 1-2-7.464"
        } ], [ "path", {
            d: "M6.003 5.125a4 4 0 0 0-2.526 5.77"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BrickWallFire = [ [ "path", {
            d: "M16 3v2.107"
        } ], [ "path", {
            d: "M17 9c1 3 2.5 3.5 3.5 4.5A5 5 0 0 1 22 17a5 5 0 0 1-10 0c0-.3 0-.6.1-.9a2 2 0 1 0 3.3-2C13 11.5 16 9 17 9"
        } ], [ "path", {
            d: "M21 8.274V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.938"
        } ], [ "path", {
            d: "M3 15h5.253"
        } ], [ "path", {
            d: "M3 9h8.228"
        } ], [ "path", {
            d: "M8 15v6"
        } ], [ "path", {
            d: "M8 3v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BrickWallShield = [ [ "path", {
            d: "M12 9v1.258"
        } ], [ "path", {
            d: "M16 3v5.46"
        } ], [ "path", {
            d: "M21 9.118V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h5.75"
        } ], [ "path", {
            d: "M22 17.5c0 2.499-1.75 3.749-3.83 4.474a.5.5 0 0 1-.335-.005c-2.085-.72-3.835-1.97-3.835-4.47V14a.5.5 0 0 1 .5-.499c1 0 2.25-.6 3.12-1.36a.6.6 0 0 1 .76-.001c.875.765 2.12 1.36 3.12 1.36a.5.5 0 0 1 .5.5z"
        } ], [ "path", {
            d: "M3 15h7"
        } ], [ "path", {
            d: "M3 9h12.142"
        } ], [ "path", {
            d: "M8 15v6"
        } ], [ "path", {
            d: "M8 3v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BrickWall = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 9v6"
        } ], [ "path", {
            d: "M16 15v6"
        } ], [ "path", {
            d: "M16 3v6"
        } ], [ "path", {
            d: "M3 15h18"
        } ], [ "path", {
            d: "M3 9h18"
        } ], [ "path", {
            d: "M8 15v6"
        } ], [ "path", {
            d: "M8 3v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BriefcaseBusiness = [ [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2"
        } ], [ "path", {
            d: "M22 13a18.15 18.15 0 0 1-20 0"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "6",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BriefcaseConveyorBelt = [ [ "path", {
            d: "M10 20v2"
        } ], [ "path", {
            d: "M14 20v2"
        } ], [ "path", {
            d: "M18 20v2"
        } ], [ "path", {
            d: "M21 20H3"
        } ], [ "path", {
            d: "M6 20v2"
        } ], [ "path", {
            d: "M8 16V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v12"
        } ], [ "rect", {
            x: "4",
            y: "6",
            width: "16",
            height: "10",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BriefcaseMedical = [ [ "path", {
            d: "M12 11v4"
        } ], [ "path", {
            d: "M14 13h-4"
        } ], [ "path", {
            d: "M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2"
        } ], [ "path", {
            d: "M18 6v14"
        } ], [ "path", {
            d: "M6 6v14"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "6",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Briefcase = [ [ "path", {
            d: "M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "6",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BringToFront = [ [ "rect", {
            x: "8",
            y: "8",
            width: "8",
            height: "8",
            rx: "2"
        } ], [ "path", {
            d: "M4 10a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M14 20a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BrushCleaning = [ [ "path", {
            d: "m16 22-1-4"
        } ], [ "path", {
            d: "M19 13.99a1 1 0 0 0 1-1V12a2 2 0 0 0-2-2h-3a1 1 0 0 1-1-1V4a2 2 0 0 0-4 0v5a1 1 0 0 1-1 1H6a2 2 0 0 0-2 2v.99a1 1 0 0 0 1 1"
        } ], [ "path", {
            d: "M5 14h14l1.973 6.767A1 1 0 0 1 20 22H4a1 1 0 0 1-.973-1.233z"
        } ], [ "path", {
            d: "m8 22 1-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Brush = [ [ "path", {
            d: "m11 10 3 3"
        } ], [ "path", {
            d: "M6.5 21A3.5 3.5 0 1 0 3 17.5a2.62 2.62 0 0 1-.708 1.792A1 1 0 0 0 3 21z"
        } ], [ "path", {
            d: "M9.969 17.031 21.378 5.624a1 1 0 0 0-3.002-3.002L6.967 14.031"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bubbles = [ [ "path", {
            d: "M7.2 14.8a2 2 0 0 1 2 2"
        } ], [ "circle", {
            cx: "18.5",
            cy: "8.5",
            r: "3.5"
        } ], [ "circle", {
            cx: "7.5",
            cy: "16.5",
            r: "5.5"
        } ], [ "circle", {
            cx: "7.5",
            cy: "4.5",
            r: "2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BugOff = [ [ "path", {
            d: "M12 20v-8"
        } ], [ "path", {
            d: "M14.12 3.88 16 2"
        } ], [ "path", {
            d: "M15 7.13V6a3 3 0 0 0-5.14-2.1L8 2"
        } ], [ "path", {
            d: "M18 12.34V11a4 4 0 0 0-4-4h-1.3"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M21 5a4 4 0 0 1-3.55 3.97"
        } ], [ "path", {
            d: "M22 13h-3.34"
        } ], [ "path", {
            d: "M3 21a4 4 0 0 1 3.81-4"
        } ], [ "path", {
            d: "M6 13H2"
        } ], [ "path", {
            d: "M7.7 7.7A4 4 0 0 0 6 11v3a6 6 0 0 0 11.13 3.13"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BugPlay = [ [ "path", {
            d: "M10 19.655A6 6 0 0 1 6 14v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 3.97"
        } ], [ "path", {
            d: "M14 15.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997a1 1 0 0 1-1.517-.86z"
        } ], [ "path", {
            d: "M14.12 3.88 16 2"
        } ], [ "path", {
            d: "M21 5a4 4 0 0 1-3.55 3.97"
        } ], [ "path", {
            d: "M3 21a4 4 0 0 1 3.81-4"
        } ], [ "path", {
            d: "M3 5a4 4 0 0 0 3.55 3.97"
        } ], [ "path", {
            d: "M6 13H2"
        } ], [ "path", {
            d: "m8 2 1.88 1.88"
        } ], [ "path", {
            d: "M9 7.13V6a3 3 0 1 1 6 0v1.13"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bug = [ [ "path", {
            d: "M12 20v-9"
        } ], [ "path", {
            d: "M14 7a4 4 0 0 1 4 4v3a6 6 0 0 1-12 0v-3a4 4 0 0 1 4-4z"
        } ], [ "path", {
            d: "M14.12 3.88 16 2"
        } ], [ "path", {
            d: "M21 21a4 4 0 0 0-3.81-4"
        } ], [ "path", {
            d: "M21 5a4 4 0 0 1-3.55 3.97"
        } ], [ "path", {
            d: "M22 13h-4"
        } ], [ "path", {
            d: "M3 21a4 4 0 0 1 3.81-4"
        } ], [ "path", {
            d: "M3 5a4 4 0 0 0 3.55 3.97"
        } ], [ "path", {
            d: "M6 13H2"
        } ], [ "path", {
            d: "m8 2 1.88 1.88"
        } ], [ "path", {
            d: "M9 7.13V6a3 3 0 1 1 6 0v1.13"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Building2 = [ [ "path", {
            d: "M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z"
        } ], [ "path", {
            d: "M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2"
        } ], [ "path", {
            d: "M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M10 6h4"
        } ], [ "path", {
            d: "M10 10h4"
        } ], [ "path", {
            d: "M10 14h4"
        } ], [ "path", {
            d: "M10 18h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const BusFront = [ [ "path", {
            d: "M4 6 2 7"
        } ], [ "path", {
            d: "M10 6h4"
        } ], [ "path", {
            d: "m22 7-2-1"
        } ], [ "rect", {
            width: "16",
            height: "16",
            x: "4",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M4 11h16"
        } ], [ "path", {
            d: "M8 15h.01"
        } ], [ "path", {
            d: "M16 15h.01"
        } ], [ "path", {
            d: "M6 19v2"
        } ], [ "path", {
            d: "M18 21v-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Building = [ [ "path", {
            d: "M12 10h.01"
        } ], [ "path", {
            d: "M12 14h.01"
        } ], [ "path", {
            d: "M12 6h.01"
        } ], [ "path", {
            d: "M16 10h.01"
        } ], [ "path", {
            d: "M16 14h.01"
        } ], [ "path", {
            d: "M16 6h.01"
        } ], [ "path", {
            d: "M8 10h.01"
        } ], [ "path", {
            d: "M8 14h.01"
        } ], [ "path", {
            d: "M8 6h.01"
        } ], [ "path", {
            d: "M9 22v-3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3"
        } ], [ "rect", {
            x: "4",
            y: "2",
            width: "16",
            height: "20",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Bus = [ [ "path", {
            d: "M8 6v6"
        } ], [ "path", {
            d: "M15 6v6"
        } ], [ "path", {
            d: "M2 12h19.6"
        } ], [ "path", {
            d: "M18 18h3s.5-1.7.8-2.8c.1-.4.2-.8.2-1.2 0-.4-.1-.8-.2-1.2l-1.4-5C20.1 6.8 19.1 6 18 6H4a2 2 0 0 0-2 2v10h3"
        } ], [ "circle", {
            cx: "7",
            cy: "18",
            r: "2"
        } ], [ "path", {
            d: "M9 18h5"
        } ], [ "circle", {
            cx: "16",
            cy: "18",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CableCar = [ [ "path", {
            d: "M10 3h.01"
        } ], [ "path", {
            d: "M14 2h.01"
        } ], [ "path", {
            d: "m2 9 20-5"
        } ], [ "path", {
            d: "M12 12V6.5"
        } ], [ "rect", {
            width: "16",
            height: "10",
            x: "4",
            y: "12",
            rx: "3"
        } ], [ "path", {
            d: "M9 12v5"
        } ], [ "path", {
            d: "M15 12v5"
        } ], [ "path", {
            d: "M4 17h16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cable = [ [ "path", {
            d: "M17 19a1 1 0 0 1-1-1v-2a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a1 1 0 0 1-1 1z"
        } ], [ "path", {
            d: "M17 21v-2"
        } ], [ "path", {
            d: "M19 14V6.5a1 1 0 0 0-7 0v11a1 1 0 0 1-7 0V10"
        } ], [ "path", {
            d: "M21 21v-2"
        } ], [ "path", {
            d: "M3 5V3"
        } ], [ "path", {
            d: "M4 10a2 2 0 0 1-2-2V6a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2z"
        } ], [ "path", {
            d: "M7 5V3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CakeSlice = [ [ "path", {
            d: "M16 13H3"
        } ], [ "path", {
            d: "M16 17H3"
        } ], [ "path", {
            d: "m7.2 7.9-3.388 2.5A2 2 0 0 0 3 12.01V20a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-8.654c0-2-2.44-6.026-6.44-8.026a1 1 0 0 0-1.082.057L10.4 5.6"
        } ], [ "circle", {
            cx: "9",
            cy: "7",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Calculator = [ [ "rect", {
            width: "16",
            height: "20",
            x: "4",
            y: "2",
            rx: "2"
        } ], [ "line", {
            x1: "8",
            x2: "16",
            y1: "6",
            y2: "6"
        } ], [ "line", {
            x1: "16",
            x2: "16",
            y1: "14",
            y2: "18"
        } ], [ "path", {
            d: "M16 10h.01"
        } ], [ "path", {
            d: "M12 10h.01"
        } ], [ "path", {
            d: "M8 10h.01"
        } ], [ "path", {
            d: "M12 14h.01"
        } ], [ "path", {
            d: "M8 14h.01"
        } ], [ "path", {
            d: "M12 18h.01"
        } ], [ "path", {
            d: "M8 18h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Calendar1 = [ [ "path", {
            d: "M11 14h1v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ], [ "rect", {
            x: "3",
            y: "4",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cake = [ [ "path", {
            d: "M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8"
        } ], [ "path", {
            d: "M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1"
        } ], [ "path", {
            d: "M2 21h20"
        } ], [ "path", {
            d: "M7 8v3"
        } ], [ "path", {
            d: "M12 8v3"
        } ], [ "path", {
            d: "M17 8v3"
        } ], [ "path", {
            d: "M7 4h.01"
        } ], [ "path", {
            d: "M12 4h.01"
        } ], [ "path", {
            d: "M17 4h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarArrowDown = [ [ "path", {
            d: "m14 18 4 4 4-4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M18 14v8"
        } ], [ "path", {
            d: "M21 11.354V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.343"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarArrowUp = [ [ "path", {
            d: "m14 18 4-4 4 4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M18 22v-8"
        } ], [ "path", {
            d: "M21 11.343V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h9"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarCheck2 = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "m16 20 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarCheck = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "m9 16 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarClock = [ [ "path", {
            d: "M16 14v2.2l1.6 1"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5"
        } ], [ "path", {
            d: "M3 10h5"
        } ], [ "path", {
            d: "M8 2v4"
        } ], [ "circle", {
            cx: "16",
            cy: "16",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarCog = [ [ "path", {
            d: "m15.228 16.852-.923-.383"
        } ], [ "path", {
            d: "m15.228 19.148-.923.383"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "m16.47 14.305.382.923"
        } ], [ "path", {
            d: "m16.852 20.772-.383.924"
        } ], [ "path", {
            d: "m19.148 15.228.383-.923"
        } ], [ "path", {
            d: "m19.53 21.696-.382-.924"
        } ], [ "path", {
            d: "m20.772 16.852.924-.383"
        } ], [ "path", {
            d: "m20.772 19.148.924.383"
        } ], [ "path", {
            d: "M21 10.592V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarDays = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 14h.01"
        } ], [ "path", {
            d: "M12 14h.01"
        } ], [ "path", {
            d: "M16 14h.01"
        } ], [ "path", {
            d: "M8 18h.01"
        } ], [ "path", {
            d: "M12 18h.01"
        } ], [ "path", {
            d: "M16 18h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarFold = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M21 17V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11Z"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M15 22v-4a2 2 0 0 1 2-2h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarHeart = [ [ "path", {
            d: "M12.127 22H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v5.125"
        } ], [ "path", {
            d: "M14.62 18.8A2.25 2.25 0 1 1 18 15.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarMinus2 = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M10 16h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarMinus = [ [ "path", {
            d: "M16 19h6"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M21 15V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarOff = [ [ "path", {
            d: "M4.2 4.2A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18"
        } ], [ "path", {
            d: "M21 15.5V6a2 2 0 0 0-2-2H9.5"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M3 10h7"
        } ], [ "path", {
            d: "M21 10h-5.5"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarPlus2 = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M10 16h4"
        } ], [ "path", {
            d: "M12 14v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarPlus = [ [ "path", {
            d: "M16 19h6"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M19 16v6"
        } ], [ "path", {
            d: "M21 12.598V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarRange = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M17 14h-6"
        } ], [ "path", {
            d: "M13 18H7"
        } ], [ "path", {
            d: "M7 14h.01"
        } ], [ "path", {
            d: "M17 18h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarSync = [ [ "path", {
            d: "M11 10v4h4"
        } ], [ "path", {
            d: "m11 14 1.535-1.605a5 5 0 0 1 8 1.5"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "m21 18-1.535 1.605a5 5 0 0 1-8-1.5"
        } ], [ "path", {
            d: "M21 22v-4h-4"
        } ], [ "path", {
            d: "M21 8.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h4.3"
        } ], [ "path", {
            d: "M3 10h4"
        } ], [ "path", {
            d: "M8 2v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarSearch = [ [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M21 11.75V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.25"
        } ], [ "path", {
            d: "m22 22-1.875-1.875"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "M8 2v4"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarX2 = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "m17 22 5-5"
        } ], [ "path", {
            d: "m17 17 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CalendarX = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M3 10h18"
        } ], [ "path", {
            d: "m14 14-4 4"
        } ], [ "path", {
            d: "m10 14 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Calendar = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M3 10h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CameraOff = [ [ "path", {
            d: "M14.564 14.558a3 3 0 1 1-4.122-4.121"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M20 20H4a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h1.997a2 2 0 0 0 .819-.175"
        } ], [ "path", {
            d: "M9.695 4.024A2 2 0 0 1 10.004 4h3.993a2 2 0 0 1 1.76 1.05l.486.9A2 2 0 0 0 18.003 7H20a2 2 0 0 1 2 2v7.344"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Camera = [ [ "path", {
            d: "M13.997 4a2 2 0 0 1 1.76 1.05l.486.9A2 2 0 0 0 18.003 7H20a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h1.997a2 2 0 0 0 1.759-1.048l.489-.904A2 2 0 0 1 10.004 4z"
        } ], [ "circle", {
            cx: "12",
            cy: "13",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CandyCane = [ [ "path", {
            d: "M5.7 21a2 2 0 0 1-3.5-2l8.6-14a6 6 0 0 1 10.4 6 2 2 0 1 1-3.464-2 2 2 0 1 0-3.464-2Z"
        } ], [ "path", {
            d: "M17.75 7 15 2.1"
        } ], [ "path", {
            d: "M10.9 4.8 13 9"
        } ], [ "path", {
            d: "m7.9 9.7 2 4.4"
        } ], [ "path", {
            d: "M4.9 14.7 7 18.9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CandyOff = [ [ "path", {
            d: "M10 10v7.9"
        } ], [ "path", {
            d: "M11.802 6.145a5 5 0 0 1 6.053 6.053"
        } ], [ "path", {
            d: "M14 6.1v2.243"
        } ], [ "path", {
            d: "m15.5 15.571-.964.964a5 5 0 0 1-7.071 0 5 5 0 0 1 0-7.07l.964-.965"
        } ], [ "path", {
            d: "M16 7V3a1 1 0 0 1 1.707-.707 2.5 2.5 0 0 0 2.152.717 1 1 0 0 1 1.131 1.131 2.5 2.5 0 0 0 .717 2.152A1 1 0 0 1 21 8h-4"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M8 17v4a1 1 0 0 1-1.707.707 2.5 2.5 0 0 0-2.152-.717 1 1 0 0 1-1.131-1.131 2.5 2.5 0 0 0-.717-2.152A1 1 0 0 1 3 16h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Candy = [ [ "path", {
            d: "M10 7v10.9"
        } ], [ "path", {
            d: "M14 6.1V17"
        } ], [ "path", {
            d: "M16 7V3a1 1 0 0 1 1.707-.707 2.5 2.5 0 0 0 2.152.717 1 1 0 0 1 1.131 1.131 2.5 2.5 0 0 0 .717 2.152A1 1 0 0 1 21 8h-4"
        } ], [ "path", {
            d: "M16.536 7.465a5 5 0 0 0-7.072 0l-2 2a5 5 0 0 0 0 7.07 5 5 0 0 0 7.072 0l2-2a5 5 0 0 0 0-7.07"
        } ], [ "path", {
            d: "M8 17v4a1 1 0 0 1-1.707.707 2.5 2.5 0 0 0-2.152-.717 1 1 0 0 1-1.131-1.131 2.5 2.5 0 0 0-.717-2.152A1 1 0 0 1 3 16h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CaptionsOff = [ [ "path", {
            d: "M10.5 5H19a2 2 0 0 1 2 2v8.5"
        } ], [ "path", {
            d: "M17 11h-.5"
        } ], [ "path", {
            d: "M19 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M7 11h4"
        } ], [ "path", {
            d: "M7 15h2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Captions = [ [ "rect", {
            width: "18",
            height: "14",
            x: "3",
            y: "5",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M7 15h4M15 15h2M7 11h2M13 11h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cannabis = [ [ "path", {
            d: "M12 22v-4"
        } ], [ "path", {
            d: "M7 12c-1.5 0-4.5 1.5-5 3 3.5 1.5 6 1 6 1-1.5 1.5-2 3.5-2 5 2.5 0 4.5-1.5 6-3 1.5 1.5 3.5 3 6 3 0-1.5-.5-3.5-2-5 0 0 2.5.5 6-1-.5-1.5-3.5-3-5-3 1.5-1 4-4 4-6-2.5 0-5.5 1.5-7 3 0-2.5-.5-5-2-7-1.5 2-2 4.5-2 7-1.5-1.5-4.5-3-7-3 0 2 2.5 5 4 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CarFront = [ [ "path", {
            d: "m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8"
        } ], [ "path", {
            d: "M7 14h.01"
        } ], [ "path", {
            d: "M17 14h.01"
        } ], [ "rect", {
            width: "18",
            height: "8",
            x: "3",
            y: "10",
            rx: "2"
        } ], [ "path", {
            d: "M5 18v2"
        } ], [ "path", {
            d: "M19 18v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CarTaxiFront = [ [ "path", {
            d: "M10 2h4"
        } ], [ "path", {
            d: "m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8"
        } ], [ "path", {
            d: "M7 14h.01"
        } ], [ "path", {
            d: "M17 14h.01"
        } ], [ "rect", {
            width: "18",
            height: "8",
            x: "3",
            y: "10",
            rx: "2"
        } ], [ "path", {
            d: "M5 18v2"
        } ], [ "path", {
            d: "M19 18v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Car = [ [ "path", {
            d: "M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2"
        } ], [ "circle", {
            cx: "7",
            cy: "17",
            r: "2"
        } ], [ "path", {
            d: "M9 17h6"
        } ], [ "circle", {
            cx: "17",
            cy: "17",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Caravan = [ [ "path", {
            d: "M18 19V9a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v8a2 2 0 0 0 2 2h2"
        } ], [ "path", {
            d: "M2 9h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2"
        } ], [ "path", {
            d: "M22 17v1a1 1 0 0 1-1 1H10v-9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v9"
        } ], [ "circle", {
            cx: "8",
            cy: "19",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CardSim = [ [ "path", {
            d: "M12 14v4"
        } ], [ "path", {
            d: "M14.172 2a2 2 0 0 1 1.414.586l3.828 3.828A2 2 0 0 1 20 7.828V20a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2z"
        } ], [ "path", {
            d: "M8 14h8"
        } ], [ "rect", {
            x: "8",
            y: "10",
            width: "8",
            height: "8",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Carrot = [ [ "path", {
            d: "M2.27 21.7s9.87-3.5 12.73-6.36a4.5 4.5 0 0 0-6.36-6.37C5.77 11.84 2.27 21.7 2.27 21.7zM8.64 14l-2.05-2.04M15.34 15l-2.46-2.46"
        } ], [ "path", {
            d: "M22 9s-1.33-2-3.5-2C16.86 7 15 9 15 9s1.33 2 3.5 2S22 9 22 9z"
        } ], [ "path", {
            d: "M15 2s-2 1.33-2 3.5S15 9 15 9s2-1.84 2-3.5C17 3.33 15 2 15 2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CaseLower = [ [ "path", {
            d: "M10 9v7"
        } ], [ "path", {
            d: "M14 6v10"
        } ], [ "circle", {
            cx: "17.5",
            cy: "12.5",
            r: "3.5"
        } ], [ "circle", {
            cx: "6.5",
            cy: "12.5",
            r: "3.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CaseSensitive = [ [ "path", {
            d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16"
        } ], [ "path", {
            d: "M22 9v7"
        } ], [ "path", {
            d: "M3.304 13h6.392"
        } ], [ "circle", {
            cx: "18.5",
            cy: "12.5",
            r: "3.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CaseUpper = [ [ "path", {
            d: "M15 11h4.5a1 1 0 0 1 0 5h-4a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h3a1 1 0 0 1 0 5"
        } ], [ "path", {
            d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16"
        } ], [ "path", {
            d: "M3.304 13h6.392"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CassetteTape = [ [ "rect", {
            width: "20",
            height: "16",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "circle", {
            cx: "8",
            cy: "10",
            r: "2"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "circle", {
            cx: "16",
            cy: "10",
            r: "2"
        } ], [ "path", {
            d: "m6 20 .7-2.9A1.4 1.4 0 0 1 8.1 16h7.8a1.4 1.4 0 0 1 1.4 1l.7 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cast = [ [ "path", {
            d: "M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"
        } ], [ "path", {
            d: "M2 12a9 9 0 0 1 8 8"
        } ], [ "path", {
            d: "M2 16a5 5 0 0 1 4 4"
        } ], [ "line", {
            x1: "2",
            x2: "2.01",
            y1: "20",
            y2: "20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Castle = [ [ "path", {
            d: "M10 5V3"
        } ], [ "path", {
            d: "M14 5V3"
        } ], [ "path", {
            d: "M15 21v-3a3 3 0 0 0-6 0v3"
        } ], [ "path", {
            d: "M18 3v8"
        } ], [ "path", {
            d: "M18 5H6"
        } ], [ "path", {
            d: "M22 11H2"
        } ], [ "path", {
            d: "M22 9v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9"
        } ], [ "path", {
            d: "M6 3v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cat = [ [ "path", {
            d: "M12 5c.67 0 1.35.09 2 .26 1.78-2 5.03-2.84 6.42-2.26 1.4.58-.42 7-.42 7 .57 1.07 1 2.24 1 3.44C21 17.9 16.97 21 12 21s-9-3-9-7.56c0-1.25.5-2.4 1-3.44 0 0-1.89-6.42-.5-7 1.39-.58 4.72.23 6.5 2.23A9.04 9.04 0 0 1 12 5Z"
        } ], [ "path", {
            d: "M8 14v.5"
        } ], [ "path", {
            d: "M16 14v.5"
        } ], [ "path", {
            d: "M11.25 16.25h1.5L12 17l-.75-.75Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cctv = [ [ "path", {
            d: "M16.75 12h3.632a1 1 0 0 1 .894 1.447l-2.034 4.069a1 1 0 0 1-1.708.134l-2.124-2.97"
        } ], [ "path", {
            d: "M17.106 9.053a1 1 0 0 1 .447 1.341l-3.106 6.211a1 1 0 0 1-1.342.447L3.61 12.3a2.92 2.92 0 0 1-1.3-3.91L3.69 5.6a2.92 2.92 0 0 1 3.92-1.3z"
        } ], [ "path", {
            d: "M2 19h3.76a2 2 0 0 0 1.8-1.1L9 15"
        } ], [ "path", {
            d: "M2 21v-4"
        } ], [ "path", {
            d: "M7 9h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartArea = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M7 11.207a.5.5 0 0 1 .146-.353l2-2a.5.5 0 0 1 .708 0l3.292 3.292a.5.5 0 0 0 .708 0l4.292-4.292a.5.5 0 0 1 .854.353V16a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartBarBig = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "rect", {
            x: "7",
            y: "13",
            width: "9",
            height: "4",
            rx: "1"
        } ], [ "rect", {
            x: "7",
            y: "5",
            width: "12",
            height: "4",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartBarDecreasing = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M7 11h8"
        } ], [ "path", {
            d: "M7 16h3"
        } ], [ "path", {
            d: "M7 6h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartBarIncreasing = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M7 11h8"
        } ], [ "path", {
            d: "M7 16h12"
        } ], [ "path", {
            d: "M7 6h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartBarStacked = [ [ "path", {
            d: "M11 13v4"
        } ], [ "path", {
            d: "M15 5v4"
        } ], [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "rect", {
            x: "7",
            y: "13",
            width: "9",
            height: "4",
            rx: "1"
        } ], [ "rect", {
            x: "7",
            y: "5",
            width: "12",
            height: "4",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartBar = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M7 16h8"
        } ], [ "path", {
            d: "M7 11h12"
        } ], [ "path", {
            d: "M7 6h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartCandlestick = [ [ "path", {
            d: "M9 5v4"
        } ], [ "rect", {
            width: "4",
            height: "6",
            x: "7",
            y: "9",
            rx: "1"
        } ], [ "path", {
            d: "M9 15v2"
        } ], [ "path", {
            d: "M17 3v2"
        } ], [ "rect", {
            width: "4",
            height: "8",
            x: "15",
            y: "5",
            rx: "1"
        } ], [ "path", {
            d: "M17 13v3"
        } ], [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartColumnBig = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "rect", {
            x: "15",
            y: "5",
            width: "4",
            height: "12",
            rx: "1"
        } ], [ "rect", {
            x: "7",
            y: "8",
            width: "4",
            height: "9",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartColumnDecreasing = [ [ "path", {
            d: "M13 17V9"
        } ], [ "path", {
            d: "M18 17v-3"
        } ], [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M8 17V5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartColumnIncreasing = [ [ "path", {
            d: "M13 17V9"
        } ], [ "path", {
            d: "M18 17V5"
        } ], [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M8 17v-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartColumnStacked = [ [ "path", {
            d: "M11 13H7"
        } ], [ "path", {
            d: "M19 9h-4"
        } ], [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "rect", {
            x: "15",
            y: "5",
            width: "4",
            height: "12",
            rx: "1"
        } ], [ "rect", {
            x: "7",
            y: "8",
            width: "4",
            height: "9",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartColumn = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M18 17V9"
        } ], [ "path", {
            d: "M13 17V5"
        } ], [ "path", {
            d: "M8 17v-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartGantt = [ [ "path", {
            d: "M10 6h8"
        } ], [ "path", {
            d: "M12 16h6"
        } ], [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M8 11h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartLine = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "m19 9-5 5-4-4-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartNetwork = [ [ "path", {
            d: "m13.11 7.664 1.78 2.672"
        } ], [ "path", {
            d: "m14.162 12.788-3.324 1.424"
        } ], [ "path", {
            d: "m20 4-6.06 1.515"
        } ], [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "circle", {
            cx: "12",
            cy: "6",
            r: "2"
        } ], [ "circle", {
            cx: "16",
            cy: "12",
            r: "2"
        } ], [ "circle", {
            cx: "9",
            cy: "15",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartNoAxesColumnDecreasing = [ [ "path", {
            d: "M5 21V3"
        } ], [ "path", {
            d: "M12 21V9"
        } ], [ "path", {
            d: "M19 21v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartNoAxesColumnIncreasing = [ [ "path", {
            d: "M5 21v-6"
        } ], [ "path", {
            d: "M12 21V9"
        } ], [ "path", {
            d: "M19 21V3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartNoAxesColumn = [ [ "path", {
            d: "M5 21v-6"
        } ], [ "path", {
            d: "M12 21V3"
        } ], [ "path", {
            d: "M19 21V9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartNoAxesCombined = [ [ "path", {
            d: "M12 16v5"
        } ], [ "path", {
            d: "M16 14v7"
        } ], [ "path", {
            d: "M20 10v11"
        } ], [ "path", {
            d: "m22 3-8.646 8.646a.5.5 0 0 1-.708 0L9.354 8.354a.5.5 0 0 0-.707 0L2 15"
        } ], [ "path", {
            d: "M4 18v3"
        } ], [ "path", {
            d: "M8 14v7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartNoAxesGantt = [ [ "path", {
            d: "M6 5h12"
        } ], [ "path", {
            d: "M4 12h10"
        } ], [ "path", {
            d: "M12 19h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartPie = [ [ "path", {
            d: "M21 12c.552 0 1.005-.449.95-.998a10 10 0 0 0-8.953-8.951c-.55-.055-.998.398-.998.95v8a1 1 0 0 0 1 1z"
        } ], [ "path", {
            d: "M21.21 15.89A10 10 0 1 1 8 2.83"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartScatter = [ [ "circle", {
            cx: "7.5",
            cy: "7.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "circle", {
            cx: "18.5",
            cy: "5.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "circle", {
            cx: "11.5",
            cy: "11.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "circle", {
            cx: "7.5",
            cy: "16.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "circle", {
            cx: "17.5",
            cy: "14.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChartSpline = [ [ "path", {
            d: "M3 3v16a2 2 0 0 0 2 2h16"
        } ], [ "path", {
            d: "M7 16c.5-2 1.5-7 4-7 2 0 2 3 4 3 2.5 0 4.5-5 5-7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CheckCheck = [ [ "path", {
            d: "M18 6 7 17l-5-5"
        } ], [ "path", {
            d: "m22 10-7.5 7.5L13 16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CheckLine = [ [ "path", {
            d: "M20 4L9 15"
        } ], [ "path", {
            d: "M21 19L3 19"
        } ], [ "path", {
            d: "M9 15L4 10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Check = [ [ "path", {
            d: "M20 6 9 17l-5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChefHat = [ [ "path", {
            d: "M17 21a1 1 0 0 0 1-1v-5.35c0-.457.316-.844.727-1.041a4 4 0 0 0-2.134-7.589 5 5 0 0 0-9.186 0 4 4 0 0 0-2.134 7.588c.411.198.727.585.727 1.041V20a1 1 0 0 0 1 1Z"
        } ], [ "path", {
            d: "M6 17h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cherry = [ [ "path", {
            d: "M2 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z"
        } ], [ "path", {
            d: "M12 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z"
        } ], [ "path", {
            d: "M7 14c3.22-2.91 4.29-8.75 5-12 1.66 2.38 4.94 9 5 12"
        } ], [ "path", {
            d: "M22 9c-4.29 0-7.14-2.33-10-7 5.71 0 10 4.67 10 7Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronFirst = [ [ "path", {
            d: "m17 18-6-6 6-6"
        } ], [ "path", {
            d: "M7 6v12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronDown = [ [ "path", {
            d: "m6 9 6 6 6-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronLeft = [ [ "path", {
            d: "m15 18-6-6 6-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronRight = [ [ "path", {
            d: "m9 18 6-6-6-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronLast = [ [ "path", {
            d: "m7 18 6-6-6-6"
        } ], [ "path", {
            d: "M17 6v12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronUp = [ [ "path", {
            d: "m18 15-6-6-6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsDownUp = [ [ "path", {
            d: "m7 20 5-5 5 5"
        } ], [ "path", {
            d: "m7 4 5 5 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsDown = [ [ "path", {
            d: "m7 6 5 5 5-5"
        } ], [ "path", {
            d: "m7 13 5 5 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsLeftRightEllipsis = [ [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M16 12h.01"
        } ], [ "path", {
            d: "m17 7 5 5-5 5"
        } ], [ "path", {
            d: "m7 7-5 5 5 5"
        } ], [ "path", {
            d: "M8 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsLeftRight = [ [ "path", {
            d: "m9 7-5 5 5 5"
        } ], [ "path", {
            d: "m15 7 5 5-5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsLeft = [ [ "path", {
            d: "m11 17-5-5 5-5"
        } ], [ "path", {
            d: "m18 17-5-5 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsRightLeft = [ [ "path", {
            d: "m20 17-5-5 5-5"
        } ], [ "path", {
            d: "m4 17 5-5-5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsRight = [ [ "path", {
            d: "m6 17 5-5-5-5"
        } ], [ "path", {
            d: "m13 17 5-5-5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsUpDown = [ [ "path", {
            d: "m7 15 5 5 5-5"
        } ], [ "path", {
            d: "m7 9 5-5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ChevronsUp = [ [ "path", {
            d: "m17 11-5-5-5 5"
        } ], [ "path", {
            d: "m17 18-5-5-5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Chromium = [ [ "path", {
            d: "M10.88 21.94 15.46 14"
        } ], [ "path", {
            d: "M21.17 8H12"
        } ], [ "path", {
            d: "M3.95 6.06 8.54 14"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Church = [ [ "path", {
            d: "M10 9h4"
        } ], [ "path", {
            d: "M12 7v5"
        } ], [ "path", {
            d: "M14 21v-3a2 2 0 0 0-4 0v3"
        } ], [ "path", {
            d: "m18 9 3.52 2.147a1 1 0 0 1 .48.854V19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-6.999a1 1 0 0 1 .48-.854L6 9"
        } ], [ "path", {
            d: "M6 21V7a1 1 0 0 1 .376-.782l5-3.999a1 1 0 0 1 1.249.001l5 4A1 1 0 0 1 18 7v14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CigaretteOff = [ [ "path", {
            d: "M12 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h13"
        } ], [ "path", {
            d: "M18 8c0-2.5-2-2.5-2-5"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M21 12a1 1 0 0 1 1 1v2a1 1 0 0 1-.5.866"
        } ], [ "path", {
            d: "M22 8c0-2.5-2-2.5-2-5"
        } ], [ "path", {
            d: "M7 12v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cigarette = [ [ "path", {
            d: "M17 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h14"
        } ], [ "path", {
            d: "M18 8c0-2.5-2-2.5-2-5"
        } ], [ "path", {
            d: "M21 16a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1"
        } ], [ "path", {
            d: "M22 8c0-2.5-2-2.5-2-5"
        } ], [ "path", {
            d: "M7 12v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleAlert = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "8",
            y2: "12"
        } ], [ "line", {
            x1: "12",
            x2: "12.01",
            y1: "16",
            y2: "16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleArrowDown = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M12 8v8"
        } ], [ "path", {
            d: "m8 12 4 4 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleArrowLeft = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m12 8-4 4 4 4"
        } ], [ "path", {
            d: "M16 12H8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleArrowOutDownLeft = [ [ "path", {
            d: "M2 12a10 10 0 1 1 10 10"
        } ], [ "path", {
            d: "m2 22 10-10"
        } ], [ "path", {
            d: "M8 22H2v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleArrowOutDownRight = [ [ "path", {
            d: "M12 22a10 10 0 1 1 10-10"
        } ], [ "path", {
            d: "M22 22 12 12"
        } ], [ "path", {
            d: "M22 16v6h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleArrowOutUpLeft = [ [ "path", {
            d: "M2 8V2h6"
        } ], [ "path", {
            d: "m2 2 10 10"
        } ], [ "path", {
            d: "M12 2A10 10 0 1 1 2 12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleArrowOutUpRight = [ [ "path", {
            d: "M22 12A10 10 0 1 1 12 2"
        } ], [ "path", {
            d: "M22 2 12 12"
        } ], [ "path", {
            d: "M16 2h6v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleArrowRight = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m12 16 4-4-4-4"
        } ], [ "path", {
            d: "M8 12h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleArrowUp = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m16 12-4-4-4 4"
        } ], [ "path", {
            d: "M12 16V8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleCheckBig = [ [ "path", {
            d: "M21.801 10A10 10 0 1 1 17 3.335"
        } ], [ "path", {
            d: "m9 11 3 3L22 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleCheck = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m9 12 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleChevronDown = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m16 10-4 4-4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleChevronLeft = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m14 16-4-4 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleChevronRight = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m10 8 4 4-4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleChevronUp = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m8 14 4-4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleDashed = [ [ "path", {
            d: "M10.1 2.182a10 10 0 0 1 3.8 0"
        } ], [ "path", {
            d: "M13.9 21.818a10 10 0 0 1-3.8 0"
        } ], [ "path", {
            d: "M17.609 3.721a10 10 0 0 1 2.69 2.7"
        } ], [ "path", {
            d: "M2.182 13.9a10 10 0 0 1 0-3.8"
        } ], [ "path", {
            d: "M20.279 17.609a10 10 0 0 1-2.7 2.69"
        } ], [ "path", {
            d: "M21.818 10.1a10 10 0 0 1 0 3.8"
        } ], [ "path", {
            d: "M3.721 6.391a10 10 0 0 1 2.7-2.69"
        } ], [ "path", {
            d: "M6.391 20.279a10 10 0 0 1-2.69-2.7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleDivide = [ [ "line", {
            x1: "8",
            x2: "16",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "16",
            y2: "16"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "8",
            y2: "8"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleDollarSign = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"
        } ], [ "path", {
            d: "M12 18V6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleDotDashed = [ [ "path", {
            d: "M10.1 2.18a9.93 9.93 0 0 1 3.8 0"
        } ], [ "path", {
            d: "M17.6 3.71a9.95 9.95 0 0 1 2.69 2.7"
        } ], [ "path", {
            d: "M21.82 10.1a9.93 9.93 0 0 1 0 3.8"
        } ], [ "path", {
            d: "M20.29 17.6a9.95 9.95 0 0 1-2.7 2.69"
        } ], [ "path", {
            d: "M13.9 21.82a9.94 9.94 0 0 1-3.8 0"
        } ], [ "path", {
            d: "M6.4 20.29a9.95 9.95 0 0 1-2.69-2.7"
        } ], [ "path", {
            d: "M2.18 13.9a9.93 9.93 0 0 1 0-3.8"
        } ], [ "path", {
            d: "M3.71 6.4a9.95 9.95 0 0 1 2.7-2.69"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleEllipsis = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M17 12h.01"
        } ], [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M7 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleDot = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleEqual = [ [ "path", {
            d: "M7 10h10"
        } ], [ "path", {
            d: "M7 14h10"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleFadingArrowUp = [ [ "path", {
            d: "M12 2a10 10 0 0 1 7.38 16.75"
        } ], [ "path", {
            d: "m16 12-4-4-4 4"
        } ], [ "path", {
            d: "M12 16V8"
        } ], [ "path", {
            d: "M2.5 8.875a10 10 0 0 0-.5 3"
        } ], [ "path", {
            d: "M2.83 16a10 10 0 0 0 2.43 3.4"
        } ], [ "path", {
            d: "M4.636 5.235a10 10 0 0 1 .891-.857"
        } ], [ "path", {
            d: "M8.644 21.42a10 10 0 0 0 7.631-.38"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleFadingPlus = [ [ "path", {
            d: "M12 2a10 10 0 0 1 7.38 16.75"
        } ], [ "path", {
            d: "M12 8v8"
        } ], [ "path", {
            d: "M16 12H8"
        } ], [ "path", {
            d: "M2.5 8.875a10 10 0 0 0-.5 3"
        } ], [ "path", {
            d: "M2.83 16a10 10 0 0 0 2.43 3.4"
        } ], [ "path", {
            d: "M4.636 5.235a10 10 0 0 1 .891-.857"
        } ], [ "path", {
            d: "M8.644 21.42a10 10 0 0 0 7.631-.38"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleGauge = [ [ "path", {
            d: "M15.6 2.7a10 10 0 1 0 5.7 5.7"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ], [ "path", {
            d: "M13.4 10.6 19 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleMinus = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M8 12h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleOff = [ [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M8.35 2.69A10 10 0 0 1 21.3 15.65"
        } ], [ "path", {
            d: "M19.08 19.08A10 10 0 1 1 4.92 4.92"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleParkingOff = [ [ "path", {
            d: "M12.656 7H13a3 3 0 0 1 2.984 3.307"
        } ], [ "path", {
            d: "M13 13H9"
        } ], [ "path", {
            d: "M19.071 19.071A1 1 0 0 1 4.93 4.93"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M8.357 2.687a10 10 0 0 1 12.956 12.956"
        } ], [ "path", {
            d: "M9 17V9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleParking = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M9 17V7h4a3 3 0 0 1 0 6H9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CirclePause = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "line", {
            x1: "10",
            x2: "10",
            y1: "15",
            y2: "9"
        } ], [ "line", {
            x1: "14",
            x2: "14",
            y1: "15",
            y2: "9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CirclePercent = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m15 9-6 6"
        } ], [ "path", {
            d: "M9 9h.01"
        } ], [ "path", {
            d: "M15 15h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CirclePlay = [ [ "path", {
            d: "M9 9.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997A1 1 0 0 1 9 14.996z"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CirclePoundSterling = [ [ "path", {
            d: "M10 16V9.5a1 1 0 0 1 5 0"
        } ], [ "path", {
            d: "M8 12h4"
        } ], [ "path", {
            d: "M8 16h7"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CirclePlus = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "path", {
            d: "M12 8v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CirclePower = [ [ "path", {
            d: "M12 7v4"
        } ], [ "path", {
            d: "M7.998 9.003a5 5 0 1 0 8-.005"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleQuestionMark = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
        } ], [ "path", {
            d: "M12 17h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleSlash2 = [ [ "path", {
            d: "M22 2 2 22"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleSlash = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "line", {
            x1: "9",
            x2: "15",
            y1: "15",
            y2: "9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleSmall = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleStar = [ [ "path", {
            d: "M11.051 7.616a1 1 0 0 1 1.909.024l.737 1.452a1 1 0 0 0 .737.535l1.634.256a1 1 0 0 1 .588 1.806l-1.172 1.168a1 1 0 0 0-.282.866l.259 1.613a1 1 0 0 1-1.541 1.134l-1.465-.75a1 1 0 0 0-.912 0l-1.465.75a1 1 0 0 1-1.539-1.133l.258-1.613a1 1 0 0 0-.282-.867l-1.156-1.152a1 1 0 0 1 .572-1.822l1.633-.256a1 1 0 0 0 .737-.535z"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleStop = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "rect", {
            x: "9",
            y: "9",
            width: "6",
            height: "6",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleUserRound = [ [ "path", {
            d: "M18 20a6 6 0 0 0-12 0"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "4"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleUser = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ], [ "path", {
            d: "M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircleX = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m15 9-6 6"
        } ], [ "path", {
            d: "m9 9 6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Circle = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CircuitBoard = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M11 9h4a2 2 0 0 0 2-2V3"
        } ], [ "circle", {
            cx: "9",
            cy: "9",
            r: "2"
        } ], [ "path", {
            d: "M7 21v-4a2 2 0 0 1 2-2h4"
        } ], [ "circle", {
            cx: "15",
            cy: "15",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Citrus = [ [ "path", {
            d: "M21.66 17.67a1.08 1.08 0 0 1-.04 1.6A12 12 0 0 1 4.73 2.38a1.1 1.1 0 0 1 1.61-.04z"
        } ], [ "path", {
            d: "M19.65 15.66A8 8 0 0 1 8.35 4.34"
        } ], [ "path", {
            d: "m14 10-5.5 5.5"
        } ], [ "path", {
            d: "M14 17.85V10H6.15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clapperboard = [ [ "path", {
            d: "M20.2 6 3 11l-.9-2.4c-.3-1.1.3-2.2 1.3-2.5l13.5-4c1.1-.3 2.2.3 2.5 1.3Z"
        } ], [ "path", {
            d: "m6.2 5.3 3.1 3.9"
        } ], [ "path", {
            d: "m12.4 3.4 3.1 4"
        } ], [ "path", {
            d: "M3 11h18v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardCheck = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1",
            ry: "1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "m9 14 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardClock = [ [ "path", {
            d: "M16 14v2.2l1.6 1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v.832"
        } ], [ "path", {
            d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h2"
        } ], [ "circle", {
            cx: "16",
            cy: "16",
            r: "6"
        } ], [ "rect", {
            x: "8",
            y: "2",
            width: "8",
            height: "4",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardCopy = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1",
            ry: "1"
        } ], [ "path", {
            d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v4"
        } ], [ "path", {
            d: "M21 14H11"
        } ], [ "path", {
            d: "m15 10-4 4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardList = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1",
            ry: "1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M12 11h4"
        } ], [ "path", {
            d: "M12 16h4"
        } ], [ "path", {
            d: "M8 11h.01"
        } ], [ "path", {
            d: "M8 16h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardMinus = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1",
            ry: "1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M9 14h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardPaste = [ [ "path", {
            d: "M11 14h10"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v1.344"
        } ], [ "path", {
            d: "m17 18 4-4-4-4"
        } ], [ "path", {
            d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 1.793-1.113"
        } ], [ "rect", {
            x: "8",
            y: "2",
            width: "8",
            height: "4",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardPenLine = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1"
        } ], [ "path", {
            d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-.5"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 1.73 1"
        } ], [ "path", {
            d: "M8 18h1"
        } ], [ "path", {
            d: "M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardPen = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-5.5"
        } ], [ "path", {
            d: "M4 13.5V6a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardPlus = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1",
            ry: "1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M9 14h6"
        } ], [ "path", {
            d: "M12 17v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardType = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1",
            ry: "1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M9 12v-1h6v1"
        } ], [ "path", {
            d: "M11 17h2"
        } ], [ "path", {
            d: "M12 11v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClipboardX = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1",
            ry: "1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "m15 11-6 6"
        } ], [ "path", {
            d: "m9 11 6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clipboard = [ [ "rect", {
            width: "8",
            height: "4",
            x: "8",
            y: "2",
            rx: "1",
            ry: "1"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock1 = [ [ "path", {
            d: "M12 6v6l2-4"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock10 = [ [ "path", {
            d: "M12 6v6l-4-2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock11 = [ [ "path", {
            d: "M12 6v6l-2-4"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock12 = [ [ "path", {
            d: "M12 6v6"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock2 = [ [ "path", {
            d: "M12 6v6l4-2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock3 = [ [ "path", {
            d: "M12 6v6h4"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock4 = [ [ "path", {
            d: "M12 6v6l4 2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock5 = [ [ "path", {
            d: "M12 6v6l2 4"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock6 = [ [ "path", {
            d: "M12 6v10"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock7 = [ [ "path", {
            d: "M12 6v6l-2 4"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock8 = [ [ "path", {
            d: "M12 6v6l-4 2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock9 = [ [ "path", {
            d: "M12 6v6H8"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClockAlert = [ [ "path", {
            d: "M12 6v6l4 2"
        } ], [ "path", {
            d: "M20 12v5"
        } ], [ "path", {
            d: "M20 21h.01"
        } ], [ "path", {
            d: "M21.25 8.2A10 10 0 1 0 16 21.16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClockArrowDown = [ [ "path", {
            d: "M12 6v6l2 1"
        } ], [ "path", {
            d: "M12.337 21.994a10 10 0 1 1 9.588-8.767"
        } ], [ "path", {
            d: "m14 18 4 4 4-4"
        } ], [ "path", {
            d: "M18 14v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClockArrowUp = [ [ "path", {
            d: "M12 6v6l1.56.78"
        } ], [ "path", {
            d: "M13.227 21.925a10 10 0 1 1 8.767-9.588"
        } ], [ "path", {
            d: "m14 18 4-4 4 4"
        } ], [ "path", {
            d: "M18 22v-8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClockFading = [ [ "path", {
            d: "M12 2a10 10 0 0 1 7.38 16.75"
        } ], [ "path", {
            d: "M12 6v6l4 2"
        } ], [ "path", {
            d: "M2.5 8.875a10 10 0 0 0-.5 3"
        } ], [ "path", {
            d: "M2.83 16a10 10 0 0 0 2.43 3.4"
        } ], [ "path", {
            d: "M4.636 5.235a10 10 0 0 1 .891-.857"
        } ], [ "path", {
            d: "M8.644 21.42a10 10 0 0 0 7.631-.38"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClockPlus = [ [ "path", {
            d: "M12 6v6l3.644 1.822"
        } ], [ "path", {
            d: "M16 19h6"
        } ], [ "path", {
            d: "M19 16v6"
        } ], [ "path", {
            d: "M21.92 13.267a10 10 0 1 0-8.653 8.653"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clock = [ [ "path", {
            d: "M12 6v6l4 2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ClosedCaption = [ [ "path", {
            d: "M10 9.17a3 3 0 1 0 0 5.66"
        } ], [ "path", {
            d: "M17 9.17a3 3 0 1 0 0 5.66"
        } ], [ "rect", {
            x: "2",
            y: "5",
            width: "20",
            height: "14",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudAlert = [ [ "path", {
            d: "M12 12v4"
        } ], [ "path", {
            d: "M12 20h.01"
        } ], [ "path", {
            d: "M17 18h.5a1 1 0 0 0 0-9h-1.79A7 7 0 1 0 7 17.708"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudCheck = [ [ "path", {
            d: "m17 15-5.5 5.5L9 18"
        } ], [ "path", {
            d: "M5 17.743A7 7 0 1 1 15.71 10h1.79a4.5 4.5 0 0 1 1.5 8.742"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudCog = [ [ "path", {
            d: "m10.852 19.772-.383.924"
        } ], [ "path", {
            d: "m13.148 14.228.383-.923"
        } ], [ "path", {
            d: "M13.148 19.772a3 3 0 1 0-2.296-5.544l-.383-.923"
        } ], [ "path", {
            d: "m13.53 20.696-.382-.924a3 3 0 1 1-2.296-5.544"
        } ], [ "path", {
            d: "m14.772 15.852.923-.383"
        } ], [ "path", {
            d: "m14.772 18.148.923.383"
        } ], [ "path", {
            d: "M4.2 15.1a7 7 0 1 1 9.93-9.858A7 7 0 0 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.2"
        } ], [ "path", {
            d: "m9.228 15.852-.923-.383"
        } ], [ "path", {
            d: "m9.228 18.148-.923.383"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudDownload = [ [ "path", {
            d: "M12 13v8l-4-4"
        } ], [ "path", {
            d: "m12 21 4-4"
        } ], [ "path", {
            d: "M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudDrizzle = [ [ "path", {
            d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
        } ], [ "path", {
            d: "M8 19v1"
        } ], [ "path", {
            d: "M8 14v1"
        } ], [ "path", {
            d: "M16 19v1"
        } ], [ "path", {
            d: "M16 14v1"
        } ], [ "path", {
            d: "M12 21v1"
        } ], [ "path", {
            d: "M12 16v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudFog = [ [ "path", {
            d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
        } ], [ "path", {
            d: "M16 17H7"
        } ], [ "path", {
            d: "M17 21H9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudHail = [ [ "path", {
            d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
        } ], [ "path", {
            d: "M16 14v2"
        } ], [ "path", {
            d: "M8 14v2"
        } ], [ "path", {
            d: "M16 20h.01"
        } ], [ "path", {
            d: "M8 20h.01"
        } ], [ "path", {
            d: "M12 16v2"
        } ], [ "path", {
            d: "M12 22h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudLightning = [ [ "path", {
            d: "M6 16.326A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 .5 8.973"
        } ], [ "path", {
            d: "m13 12-3 5h4l-3 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudMoonRain = [ [ "path", {
            d: "M11 20v2"
        } ], [ "path", {
            d: "M18.376 14.512a6 6 0 0 0 3.461-4.127c.148-.625-.659-.97-1.248-.714a4 4 0 0 1-5.259-5.26c.255-.589-.09-1.395-.716-1.248a6 6 0 0 0-4.594 5.36"
        } ], [ "path", {
            d: "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24"
        } ], [ "path", {
            d: "M7 19v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudOff = [ [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M5.782 5.782A7 7 0 0 0 9 19h8.5a4.5 4.5 0 0 0 1.307-.193"
        } ], [ "path", {
            d: "M21.532 16.5A4.5 4.5 0 0 0 17.5 10h-1.79A7.008 7.008 0 0 0 10 5.07"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudMoon = [ [ "path", {
            d: "M13 16a3 3 0 0 1 0 6H7a5 5 0 1 1 4.9-6z"
        } ], [ "path", {
            d: "M18.376 14.512a6 6 0 0 0 3.461-4.127c.148-.625-.659-.97-1.248-.714a4 4 0 0 1-5.259-5.26c.255-.589-.09-1.395-.716-1.248a6 6 0 0 0-4.594 5.36"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudRainWind = [ [ "path", {
            d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
        } ], [ "path", {
            d: "m9.2 22 3-7"
        } ], [ "path", {
            d: "m9 13-3 7"
        } ], [ "path", {
            d: "m17 13-3 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudRain = [ [ "path", {
            d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
        } ], [ "path", {
            d: "M16 14v6"
        } ], [ "path", {
            d: "M8 14v6"
        } ], [ "path", {
            d: "M12 16v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudSnow = [ [ "path", {
            d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
        } ], [ "path", {
            d: "M8 15h.01"
        } ], [ "path", {
            d: "M8 19h.01"
        } ], [ "path", {
            d: "M12 17h.01"
        } ], [ "path", {
            d: "M12 21h.01"
        } ], [ "path", {
            d: "M16 15h.01"
        } ], [ "path", {
            d: "M16 19h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudSunRain = [ [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "m4.93 4.93 1.41 1.41"
        } ], [ "path", {
            d: "M20 12h2"
        } ], [ "path", {
            d: "m19.07 4.93-1.41 1.41"
        } ], [ "path", {
            d: "M15.947 12.65a4 4 0 0 0-5.925-4.128"
        } ], [ "path", {
            d: "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24"
        } ], [ "path", {
            d: "M11 20v2"
        } ], [ "path", {
            d: "M7 19v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudSun = [ [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "m4.93 4.93 1.41 1.41"
        } ], [ "path", {
            d: "M20 12h2"
        } ], [ "path", {
            d: "m19.07 4.93-1.41 1.41"
        } ], [ "path", {
            d: "M15.947 12.65a4 4 0 0 0-5.925-4.128"
        } ], [ "path", {
            d: "M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CloudUpload = [ [ "path", {
            d: "M12 13v8"
        } ], [ "path", {
            d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242"
        } ], [ "path", {
            d: "m8 17 4-4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cloud = [ [ "path", {
            d: "M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cloudy = [ [ "path", {
            d: "M17.5 21H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z"
        } ], [ "path", {
            d: "M22 10a3 3 0 0 0-3-3h-2.207a5.502 5.502 0 0 0-10.702.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Clover = [ [ "path", {
            d: "M16.17 7.83 2 22"
        } ], [ "path", {
            d: "M4.02 12a2.827 2.827 0 1 1 3.81-4.17A2.827 2.827 0 1 1 12 4.02a2.827 2.827 0 1 1 4.17 3.81A2.827 2.827 0 1 1 19.98 12a2.827 2.827 0 1 1-3.81 4.17A2.827 2.827 0 1 1 12 19.98a2.827 2.827 0 1 1-4.17-3.81A1 1 0 1 1 4 12"
        } ], [ "path", {
            d: "m7.83 7.83 8.34 8.34"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Club = [ [ "path", {
            d: "M17.28 9.05a5.5 5.5 0 1 0-10.56 0A5.5 5.5 0 1 0 12 17.66a5.5 5.5 0 1 0 5.28-8.6Z"
        } ], [ "path", {
            d: "M12 17.66L12 22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CodeXml = [ [ "path", {
            d: "m18 16 4-4-4-4"
        } ], [ "path", {
            d: "m6 8-4 4 4 4"
        } ], [ "path", {
            d: "m14.5 4-5 16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Code = [ [ "path", {
            d: "m16 18 6-6-6-6"
        } ], [ "path", {
            d: "m8 6-6 6 6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Codepen = [ [ "polygon", {
            points: "12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "22",
            y2: "15.5"
        } ], [ "polyline", {
            points: "22 8.5 12 15.5 2 8.5"
        } ], [ "polyline", {
            points: "2 15.5 12 8.5 22 15.5"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "2",
            y2: "8.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Codesandbox = [ [ "path", {
            d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
        } ], [ "polyline", {
            points: "7.5 4.21 12 6.81 16.5 4.21"
        } ], [ "polyline", {
            points: "7.5 19.79 7.5 14.6 3 12"
        } ], [ "polyline", {
            points: "21 12 16.5 14.6 16.5 19.79"
        } ], [ "polyline", {
            points: "3.27 6.96 12 12.01 20.73 6.96"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "22.08",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Coffee = [ [ "path", {
            d: "M10 2v2"
        } ], [ "path", {
            d: "M14 2v2"
        } ], [ "path", {
            d: "M16 8a1 1 0 0 1 1 1v8a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4V9a1 1 0 0 1 1-1h14a4 4 0 1 1 0 8h-1"
        } ], [ "path", {
            d: "M6 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cog = [ [ "path", {
            d: "M11 10.27 7 3.34"
        } ], [ "path", {
            d: "m11 13.73-4 6.93"
        } ], [ "path", {
            d: "M12 22v-2"
        } ], [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "M14 12h8"
        } ], [ "path", {
            d: "m17 20.66-1-1.73"
        } ], [ "path", {
            d: "m17 3.34-1 1.73"
        } ], [ "path", {
            d: "M2 12h2"
        } ], [ "path", {
            d: "m20.66 17-1.73-1"
        } ], [ "path", {
            d: "m20.66 7-1.73 1"
        } ], [ "path", {
            d: "m3.34 17 1.73-1"
        } ], [ "path", {
            d: "m3.34 7 1.73 1"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Coins = [ [ "circle", {
            cx: "8",
            cy: "8",
            r: "6"
        } ], [ "path", {
            d: "M18.09 10.37A6 6 0 1 1 10.34 18"
        } ], [ "path", {
            d: "M7 6h1v4"
        } ], [ "path", {
            d: "m16.71 13.88.7.71-2.82 2.82"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Columns2 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Columns3Cog = [ [ "path", {
            d: "M10.5 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v5.5"
        } ], [ "path", {
            d: "m14.3 19.6 1-.4"
        } ], [ "path", {
            d: "M15 3v7.5"
        } ], [ "path", {
            d: "m15.2 16.9-.9-.3"
        } ], [ "path", {
            d: "m16.6 21.7.3-.9"
        } ], [ "path", {
            d: "m16.8 15.3-.4-1"
        } ], [ "path", {
            d: "m19.1 15.2.3-.9"
        } ], [ "path", {
            d: "m19.6 21.7-.4-1"
        } ], [ "path", {
            d: "m20.7 16.8 1-.4"
        } ], [ "path", {
            d: "m21.7 19.4-.9-.3"
        } ], [ "path", {
            d: "M9 3v18"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Columns3 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M9 3v18"
        } ], [ "path", {
            d: "M15 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Columns4 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M7.5 3v18"
        } ], [ "path", {
            d: "M12 3v18"
        } ], [ "path", {
            d: "M16.5 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Combine = [ [ "path", {
            d: "M10 18H5a3 3 0 0 1-3-3v-1"
        } ], [ "path", {
            d: "M14 2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M20 2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "m7 21 3-3-3-3"
        } ], [ "rect", {
            x: "14",
            y: "14",
            width: "8",
            height: "8",
            rx: "2"
        } ], [ "rect", {
            x: "2",
            y: "2",
            width: "8",
            height: "8",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Compass = [ [ "path", {
            d: "m16.24 7.76-1.804 5.411a2 2 0 0 1-1.265 1.265L7.76 16.24l1.804-5.411a2 2 0 0 1 1.265-1.265z"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Command = [ [ "path", {
            d: "M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Component = [ [ "path", {
            d: "M15.536 11.293a1 1 0 0 0 0 1.414l2.376 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z"
        } ], [ "path", {
            d: "M2.297 11.293a1 1 0 0 0 0 1.414l2.377 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414L6.088 8.916a1 1 0 0 0-1.414 0z"
        } ], [ "path", {
            d: "M8.916 17.912a1 1 0 0 0 0 1.415l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.415l-2.377-2.376a1 1 0 0 0-1.414 0z"
        } ], [ "path", {
            d: "M8.916 4.674a1 1 0 0 0 0 1.414l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Computer = [ [ "rect", {
            width: "14",
            height: "8",
            x: "5",
            y: "2",
            rx: "2"
        } ], [ "rect", {
            width: "20",
            height: "8",
            x: "2",
            y: "14",
            rx: "2"
        } ], [ "path", {
            d: "M6 18h2"
        } ], [ "path", {
            d: "M12 18h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ConciergeBell = [ [ "path", {
            d: "M3 20a1 1 0 0 1-1-1v-1a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1Z"
        } ], [ "path", {
            d: "M20 16a8 8 0 1 0-16 0"
        } ], [ "path", {
            d: "M12 4v4"
        } ], [ "path", {
            d: "M10 4h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cone = [ [ "path", {
            d: "m20.9 18.55-8-15.98a1 1 0 0 0-1.8 0l-8 15.98"
        } ], [ "ellipse", {
            cx: "12",
            cy: "19",
            rx: "9",
            ry: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Construction = [ [ "rect", {
            x: "2",
            y: "6",
            width: "20",
            height: "8",
            rx: "1"
        } ], [ "path", {
            d: "M17 14v7"
        } ], [ "path", {
            d: "M7 14v7"
        } ], [ "path", {
            d: "M17 3v3"
        } ], [ "path", {
            d: "M7 3v3"
        } ], [ "path", {
            d: "M10 14 2.3 6.3"
        } ], [ "path", {
            d: "m14 6 7.7 7.7"
        } ], [ "path", {
            d: "m8 6 8 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ContactRound = [ [ "path", {
            d: "M16 2v2"
        } ], [ "path", {
            d: "M17.915 22a6 6 0 0 0-12 0"
        } ], [ "path", {
            d: "M8 2v2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ], [ "rect", {
            x: "3",
            y: "4",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Contact = [ [ "path", {
            d: "M16 2v2"
        } ], [ "path", {
            d: "M7 22v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M8 2v2"
        } ], [ "circle", {
            cx: "12",
            cy: "11",
            r: "3"
        } ], [ "rect", {
            x: "3",
            y: "4",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Container = [ [ "path", {
            d: "M22 7.7c0-.6-.4-1.2-.8-1.5l-6.3-3.9a1.72 1.72 0 0 0-1.7 0l-10.3 6c-.5.2-.9.8-.9 1.4v6.6c0 .5.4 1.2.8 1.5l6.3 3.9a1.72 1.72 0 0 0 1.7 0l10.3-6c.5-.3.9-1 .9-1.5Z"
        } ], [ "path", {
            d: "M10 21.9V14L2.1 9.1"
        } ], [ "path", {
            d: "m10 14 11.9-6.9"
        } ], [ "path", {
            d: "M14 19.8v-8.1"
        } ], [ "path", {
            d: "M18 17.5V9.4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Contrast = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M12 18a6 6 0 0 0 0-12v12z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cookie = [ [ "path", {
            d: "M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5"
        } ], [ "path", {
            d: "M8.5 8.5v.01"
        } ], [ "path", {
            d: "M16 15.5v.01"
        } ], [ "path", {
            d: "M12 12v.01"
        } ], [ "path", {
            d: "M11 17v.01"
        } ], [ "path", {
            d: "M7 14v.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CookingPot = [ [ "path", {
            d: "M2 12h20"
        } ], [ "path", {
            d: "M20 12v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8"
        } ], [ "path", {
            d: "m4 8 16-4"
        } ], [ "path", {
            d: "m8.86 6.78-.45-1.81a2 2 0 0 1 1.45-2.43l1.94-.48a2 2 0 0 1 2.43 1.46l.45 1.8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CopyCheck = [ [ "path", {
            d: "m12 15 2 2 4-4"
        } ], [ "rect", {
            width: "14",
            height: "14",
            x: "8",
            y: "8",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CopyMinus = [ [ "line", {
            x1: "12",
            x2: "18",
            y1: "15",
            y2: "15"
        } ], [ "rect", {
            width: "14",
            height: "14",
            x: "8",
            y: "8",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CopyPlus = [ [ "line", {
            x1: "15",
            x2: "15",
            y1: "12",
            y2: "18"
        } ], [ "line", {
            x1: "12",
            x2: "18",
            y1: "15",
            y2: "15"
        } ], [ "rect", {
            width: "14",
            height: "14",
            x: "8",
            y: "8",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CopySlash = [ [ "line", {
            x1: "12",
            x2: "18",
            y1: "18",
            y2: "12"
        } ], [ "rect", {
            width: "14",
            height: "14",
            x: "8",
            y: "8",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CopyX = [ [ "line", {
            x1: "12",
            x2: "18",
            y1: "12",
            y2: "18"
        } ], [ "line", {
            x1: "12",
            x2: "18",
            y1: "18",
            y2: "12"
        } ], [ "rect", {
            width: "14",
            height: "14",
            x: "8",
            y: "8",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Copy = [ [ "rect", {
            width: "14",
            height: "14",
            x: "8",
            y: "8",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Copyright = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M14.83 14.83a4 4 0 1 1 0-5.66"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Copyleft = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M9.17 14.83a4 4 0 1 0 0-5.66"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CornerDownLeft = [ [ "path", {
            d: "M20 4v7a4 4 0 0 1-4 4H4"
        } ], [ "path", {
            d: "m9 10-5 5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CornerDownRight = [ [ "path", {
            d: "m15 10 5 5-5 5"
        } ], [ "path", {
            d: "M4 4v7a4 4 0 0 0 4 4h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CornerLeftDown = [ [ "path", {
            d: "m14 15-5 5-5-5"
        } ], [ "path", {
            d: "M20 4h-7a4 4 0 0 0-4 4v12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CornerLeftUp = [ [ "path", {
            d: "M14 9 9 4 4 9"
        } ], [ "path", {
            d: "M20 20h-7a4 4 0 0 1-4-4V4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CornerRightDown = [ [ "path", {
            d: "m10 15 5 5 5-5"
        } ], [ "path", {
            d: "M4 4h7a4 4 0 0 1 4 4v12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CornerRightUp = [ [ "path", {
            d: "m10 9 5-5 5 5"
        } ], [ "path", {
            d: "M4 20h7a4 4 0 0 0 4-4V4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CornerUpLeft = [ [ "path", {
            d: "M20 20v-7a4 4 0 0 0-4-4H4"
        } ], [ "path", {
            d: "M9 14 4 9l5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CornerUpRight = [ [ "path", {
            d: "m15 14 5-5-5-5"
        } ], [ "path", {
            d: "M4 20v-7a4 4 0 0 1 4-4h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cpu = [ [ "path", {
            d: "M12 20v2"
        } ], [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "M17 20v2"
        } ], [ "path", {
            d: "M17 2v2"
        } ], [ "path", {
            d: "M2 12h2"
        } ], [ "path", {
            d: "M2 17h2"
        } ], [ "path", {
            d: "M2 7h2"
        } ], [ "path", {
            d: "M20 12h2"
        } ], [ "path", {
            d: "M20 17h2"
        } ], [ "path", {
            d: "M20 7h2"
        } ], [ "path", {
            d: "M7 20v2"
        } ], [ "path", {
            d: "M7 2v2"
        } ], [ "rect", {
            x: "4",
            y: "4",
            width: "16",
            height: "16",
            rx: "2"
        } ], [ "rect", {
            x: "8",
            y: "8",
            width: "8",
            height: "8",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CreativeCommons = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M10 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1"
        } ], [ "path", {
            d: "M17 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CreditCard = [ [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "5",
            rx: "2"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "10",
            y2: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Croissant = [ [ "path", {
            d: "M10.2 18H4.774a1.5 1.5 0 0 1-1.352-.97 11 11 0 0 1 .132-6.487"
        } ], [ "path", {
            d: "M18 10.2V4.774a1.5 1.5 0 0 0-.97-1.352 11 11 0 0 0-6.486.132"
        } ], [ "path", {
            d: "M18 5a4 3 0 0 1 4 3 2 2 0 0 1-2 2 10 10 0 0 0-5.139 1.42"
        } ], [ "path", {
            d: "M5 18a3 4 0 0 0 3 4 2 2 0 0 0 2-2 10 10 0 0 1 1.42-5.14"
        } ], [ "path", {
            d: "M8.709 2.554a10 10 0 0 0-6.155 6.155 1.5 1.5 0 0 0 .676 1.626l9.807 5.42a2 2 0 0 0 2.718-2.718l-5.42-9.807a1.5 1.5 0 0 0-1.626-.676"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Crop = [ [ "path", {
            d: "M6 2v14a2 2 0 0 0 2 2h14"
        } ], [ "path", {
            d: "M18 22V8a2 2 0 0 0-2-2H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cross = [ [ "path", {
            d: "M4 9a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h4a1 1 0 0 1 1 1v4a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-4a1 1 0 0 1 1-1h4a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-4a1 1 0 0 1-1-1V4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a1 1 0 0 1-1 1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Crosshair = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "line", {
            x1: "22",
            x2: "18",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "6",
            x2: "2",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "6",
            y2: "2"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "22",
            y2: "18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Crown = [ [ "path", {
            d: "M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z"
        } ], [ "path", {
            d: "M5 21h14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cuboid = [ [ "path", {
            d: "m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z"
        } ], [ "path", {
            d: "M10 22v-8L2.25 9.15"
        } ], [ "path", {
            d: "m10 14 11.77-6.87"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const CupSoda = [ [ "path", {
            d: "m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8"
        } ], [ "path", {
            d: "M5 8h14"
        } ], [ "path", {
            d: "M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0"
        } ], [ "path", {
            d: "m12 8 1-6h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Currency = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "8"
        } ], [ "line", {
            x1: "3",
            x2: "6",
            y1: "3",
            y2: "6"
        } ], [ "line", {
            x1: "21",
            x2: "18",
            y1: "3",
            y2: "6"
        } ], [ "line", {
            x1: "3",
            x2: "6",
            y1: "21",
            y2: "18"
        } ], [ "line", {
            x1: "21",
            x2: "18",
            y1: "21",
            y2: "18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Cylinder = [ [ "ellipse", {
            cx: "12",
            cy: "5",
            rx: "9",
            ry: "3"
        } ], [ "path", {
            d: "M3 5v14a9 3 0 0 0 18 0V5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dam = [ [ "path", {
            d: "M11 11.31c1.17.56 1.54 1.69 3.5 1.69 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
        } ], [ "path", {
            d: "M11.75 18c.35.5 1.45 1 2.75 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
        } ], [ "path", {
            d: "M2 10h4"
        } ], [ "path", {
            d: "M2 14h4"
        } ], [ "path", {
            d: "M2 18h4"
        } ], [ "path", {
            d: "M2 6h4"
        } ], [ "path", {
            d: "M7 3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1L10 4a1 1 0 0 0-1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DatabaseBackup = [ [ "ellipse", {
            cx: "12",
            cy: "5",
            rx: "9",
            ry: "3"
        } ], [ "path", {
            d: "M3 12a9 3 0 0 0 5 2.69"
        } ], [ "path", {
            d: "M21 9.3V5"
        } ], [ "path", {
            d: "M3 5v14a9 3 0 0 0 6.47 2.88"
        } ], [ "path", {
            d: "M12 12v4h4"
        } ], [ "path", {
            d: "M13 20a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L12 16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DatabaseZap = [ [ "ellipse", {
            cx: "12",
            cy: "5",
            rx: "9",
            ry: "3"
        } ], [ "path", {
            d: "M3 5V19A9 3 0 0 0 15 21.84"
        } ], [ "path", {
            d: "M21 5V8"
        } ], [ "path", {
            d: "M21 12L18 17H22L19 22"
        } ], [ "path", {
            d: "M3 12A9 3 0 0 0 14.59 14.87"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Database = [ [ "ellipse", {
            cx: "12",
            cy: "5",
            rx: "9",
            ry: "3"
        } ], [ "path", {
            d: "M3 5V19A9 3 0 0 0 21 19V5"
        } ], [ "path", {
            d: "M3 12A9 3 0 0 0 21 12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DecimalsArrowLeft = [ [ "path", {
            d: "m13 21-3-3 3-3"
        } ], [ "path", {
            d: "M20 18H10"
        } ], [ "path", {
            d: "M3 11h.01"
        } ], [ "rect", {
            x: "6",
            y: "3",
            width: "5",
            height: "8",
            rx: "2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DecimalsArrowRight = [ [ "path", {
            d: "M10 18h10"
        } ], [ "path", {
            d: "m17 21 3-3-3-3"
        } ], [ "path", {
            d: "M3 11h.01"
        } ], [ "rect", {
            x: "15",
            y: "3",
            width: "5",
            height: "8",
            rx: "2.5"
        } ], [ "rect", {
            x: "6",
            y: "3",
            width: "5",
            height: "8",
            rx: "2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Delete = [ [ "path", {
            d: "M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z"
        } ], [ "path", {
            d: "m12 9 6 6"
        } ], [ "path", {
            d: "m18 9-6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dessert = [ [ "path", {
            d: "M10.162 3.167A10 10 0 0 0 2 13a2 2 0 0 0 4 0v-1a2 2 0 0 1 4 0v4a2 2 0 0 0 4 0v-4a2 2 0 0 1 4 0v1a2 2 0 0 0 4-.006 10 10 0 0 0-8.161-9.826"
        } ], [ "path", {
            d: "M20.804 14.869a9 9 0 0 1-17.608 0"
        } ], [ "circle", {
            cx: "12",
            cy: "4",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Diameter = [ [ "circle", {
            cx: "19",
            cy: "19",
            r: "2"
        } ], [ "circle", {
            cx: "5",
            cy: "5",
            r: "2"
        } ], [ "path", {
            d: "M6.48 3.66a10 10 0 0 1 13.86 13.86"
        } ], [ "path", {
            d: "m6.41 6.41 11.18 11.18"
        } ], [ "path", {
            d: "M3.66 6.48a10 10 0 0 0 13.86 13.86"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DiamondMinus = [ [ "path", {
            d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z"
        } ], [ "path", {
            d: "M8 12h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DiamondPercent = [ [ "path", {
            d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0Z"
        } ], [ "path", {
            d: "M9.2 9.2h.01"
        } ], [ "path", {
            d: "m14.5 9.5-5 5"
        } ], [ "path", {
            d: "M14.7 14.8h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DiamondPlus = [ [ "path", {
            d: "M12 8v8"
        } ], [ "path", {
            d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z"
        } ], [ "path", {
            d: "M8 12h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dice1 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M12 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Diamond = [ [ "path", {
            d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41l-7.59-7.59a2.41 2.41 0 0 0-3.41 0Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dice2 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M15 9h.01"
        } ], [ "path", {
            d: "M9 15h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dice3 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M16 8h.01"
        } ], [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M8 16h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dice4 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M16 8h.01"
        } ], [ "path", {
            d: "M8 8h.01"
        } ], [ "path", {
            d: "M8 16h.01"
        } ], [ "path", {
            d: "M16 16h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dice5 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M16 8h.01"
        } ], [ "path", {
            d: "M8 8h.01"
        } ], [ "path", {
            d: "M8 16h.01"
        } ], [ "path", {
            d: "M16 16h.01"
        } ], [ "path", {
            d: "M12 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dice6 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M16 8h.01"
        } ], [ "path", {
            d: "M16 12h.01"
        } ], [ "path", {
            d: "M16 16h.01"
        } ], [ "path", {
            d: "M8 8h.01"
        } ], [ "path", {
            d: "M8 12h.01"
        } ], [ "path", {
            d: "M8 16h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dices = [ [ "rect", {
            width: "12",
            height: "12",
            x: "2",
            y: "10",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6"
        } ], [ "path", {
            d: "M6 18h.01"
        } ], [ "path", {
            d: "M10 14h.01"
        } ], [ "path", {
            d: "M15 6h.01"
        } ], [ "path", {
            d: "M18 9h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Diff = [ [ "path", {
            d: "M12 3v14"
        } ], [ "path", {
            d: "M5 10h14"
        } ], [ "path", {
            d: "M5 21h14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Disc2 = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ], [ "path", {
            d: "M12 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Disc3 = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M6 12c0-1.7.7-3.2 1.8-4.2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ], [ "path", {
            d: "M18 12c0 1.7-.7 3.2-1.8 4.2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DiscAlbum = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "5"
        } ], [ "path", {
            d: "M12 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Disc = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Divide = [ [ "circle", {
            cx: "12",
            cy: "6",
            r: "1"
        } ], [ "line", {
            x1: "5",
            x2: "19",
            y1: "12",
            y2: "12"
        } ], [ "circle", {
            cx: "12",
            cy: "18",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DnaOff = [ [ "path", {
            d: "M15 2c-1.35 1.5-2.092 3-2.5 4.5L14 8"
        } ], [ "path", {
            d: "m17 6-2.891-2.891"
        } ], [ "path", {
            d: "M2 15c3.333-3 6.667-3 10-3"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "m20 9 .891.891"
        } ], [ "path", {
            d: "M22 9c-1.5 1.35-3 2.092-4.5 2.5l-1-1"
        } ], [ "path", {
            d: "M3.109 14.109 4 15"
        } ], [ "path", {
            d: "m6.5 12.5 1 1"
        } ], [ "path", {
            d: "m7 18 2.891 2.891"
        } ], [ "path", {
            d: "M9 22c1.35-1.5 2.092-3 2.5-4.5L10 16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dna = [ [ "path", {
            d: "m10 16 1.5 1.5"
        } ], [ "path", {
            d: "m14 8-1.5-1.5"
        } ], [ "path", {
            d: "M15 2c-1.798 1.998-2.518 3.995-2.807 5.993"
        } ], [ "path", {
            d: "m16.5 10.5 1 1"
        } ], [ "path", {
            d: "m17 6-2.891-2.891"
        } ], [ "path", {
            d: "M2 15c6.667-6 13.333 0 20-6"
        } ], [ "path", {
            d: "m20 9 .891.891"
        } ], [ "path", {
            d: "M3.109 14.109 4 15"
        } ], [ "path", {
            d: "m6.5 12.5 1 1"
        } ], [ "path", {
            d: "m7 18 2.891 2.891"
        } ], [ "path", {
            d: "M9 22c1.798-1.998 2.518-3.995 2.807-5.993"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dog = [ [ "path", {
            d: "M11.25 16.25h1.5L12 17z"
        } ], [ "path", {
            d: "M16 14v.5"
        } ], [ "path", {
            d: "M4.42 11.247A13.152 13.152 0 0 0 4 14.556C4 18.728 7.582 21 12 21s8-2.272 8-6.444a11.702 11.702 0 0 0-.493-3.309"
        } ], [ "path", {
            d: "M8 14v.5"
        } ], [ "path", {
            d: "M8.5 8.5c-.384 1.05-1.083 2.028-2.344 2.5-1.931.722-3.576-.297-3.656-1-.113-.994 1.177-6.53 4-7 1.923-.321 3.651.845 3.651 2.235A7.497 7.497 0 0 1 14 5.277c0-1.39 1.844-2.598 3.767-2.277 2.823.47 4.113 6.006 4 7-.08.703-1.725 1.722-3.656 1-1.261-.472-1.855-1.45-2.239-2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dock = [ [ "path", {
            d: "M2 8h20"
        } ], [ "rect", {
            width: "20",
            height: "16",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M6 16h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DollarSign = [ [ "line", {
            x1: "12",
            x2: "12",
            y1: "2",
            y2: "22"
        } ], [ "path", {
            d: "M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Donut = [ [ "path", {
            d: "M20.5 10a2.5 2.5 0 0 1-2.4-3H18a2.95 2.95 0 0 1-2.6-4.4 10 10 0 1 0 6.3 7.1c-.3.2-.8.3-1.2.3"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DoorClosedLocked = [ [ "path", {
            d: "M10 12h.01"
        } ], [ "path", {
            d: "M18 9V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14"
        } ], [ "path", {
            d: "M2 20h8"
        } ], [ "path", {
            d: "M20 17v-2a2 2 0 1 0-4 0v2"
        } ], [ "rect", {
            x: "14",
            y: "17",
            width: "8",
            height: "5",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DoorClosed = [ [ "path", {
            d: "M10 12h.01"
        } ], [ "path", {
            d: "M18 20V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14"
        } ], [ "path", {
            d: "M2 20h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DoorOpen = [ [ "path", {
            d: "M11 20H2"
        } ], [ "path", {
            d: "M11 4.562v16.157a1 1 0 0 0 1.242.97L19 20V5.562a2 2 0 0 0-1.515-1.94l-4-1A2 2 0 0 0 11 4.561z"
        } ], [ "path", {
            d: "M11 4H8a2 2 0 0 0-2 2v14"
        } ], [ "path", {
            d: "M14 12h.01"
        } ], [ "path", {
            d: "M22 20h-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Download = [ [ "path", {
            d: "M12 15V3"
        } ], [ "path", {
            d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
        } ], [ "path", {
            d: "m7 10 5 5 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dot = [ [ "circle", {
            cx: "12.1",
            cy: "12.1",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DraftingCompass = [ [ "path", {
            d: "m12.99 6.74 1.93 3.44"
        } ], [ "path", {
            d: "M19.136 12a10 10 0 0 1-14.271 0"
        } ], [ "path", {
            d: "m21 21-2.16-3.84"
        } ], [ "path", {
            d: "m3 21 8.02-14.26"
        } ], [ "circle", {
            cx: "12",
            cy: "5",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Drama = [ [ "path", {
            d: "M10 11h.01"
        } ], [ "path", {
            d: "M14 6h.01"
        } ], [ "path", {
            d: "M18 6h.01"
        } ], [ "path", {
            d: "M6.5 13.1h.01"
        } ], [ "path", {
            d: "M22 5c0 9-4 12-6 12s-6-3-6-12c0-2 2-3 6-3s6 1 6 3"
        } ], [ "path", {
            d: "M17.4 9.9c-.8.8-2 .8-2.8 0"
        } ], [ "path", {
            d: "M10.1 7.1C9 7.2 7.7 7.7 6 8.6c-3.5 2-4.7 3.9-3.7 5.6 4.5 7.8 9.5 8.4 11.2 7.4.9-.5 1.9-2.1 1.9-4.7"
        } ], [ "path", {
            d: "M9.1 16.5c.3-1.1 1.4-1.7 2.4-1.4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dribbble = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M19.13 5.09C15.22 9.14 10 10.44 2.25 10.94"
        } ], [ "path", {
            d: "M21.75 12.84c-6.62-1.41-12.14 1-16.38 6.32"
        } ], [ "path", {
            d: "M8.56 2.75c4.37 6 6 9.42 8 17.72"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Drill = [ [ "path", {
            d: "M10 18a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H5a3 3 0 0 1-3-3 1 1 0 0 1 1-1z"
        } ], [ "path", {
            d: "M13 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1l-.81 3.242a1 1 0 0 1-.97.758H8"
        } ], [ "path", {
            d: "M14 4h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-3"
        } ], [ "path", {
            d: "M18 6h4"
        } ], [ "path", {
            d: "m5 10-2 8"
        } ], [ "path", {
            d: "m7 18 2-8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Drone = [ [ "path", {
            d: "M10 10 7 7"
        } ], [ "path", {
            d: "m10 14-3 3"
        } ], [ "path", {
            d: "m14 10 3-3"
        } ], [ "path", {
            d: "m14 14 3 3"
        } ], [ "path", {
            d: "M14.205 4.139a4 4 0 1 1 5.439 5.863"
        } ], [ "path", {
            d: "M19.637 14a4 4 0 1 1-5.432 5.868"
        } ], [ "path", {
            d: "M4.367 10a4 4 0 1 1 5.438-5.862"
        } ], [ "path", {
            d: "M9.795 19.862a4 4 0 1 1-5.429-5.873"
        } ], [ "rect", {
            x: "10",
            y: "8",
            width: "4",
            height: "8",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Droplet = [ [ "path", {
            d: "M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const DropletOff = [ [ "path", {
            d: "M18.715 13.186C18.29 11.858 17.384 10.607 16 9.5c-2-1.6-3.5-4-4-6.5a10.7 10.7 0 0 1-.884 2.586"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M8.795 8.797A11 11 0 0 1 8 9.5C6 11.1 5 13 5 15a7 7 0 0 0 13.222 3.208"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Droplets = [ [ "path", {
            d: "M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z"
        } ], [ "path", {
            d: "M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Drum = [ [ "path", {
            d: "m2 2 8 8"
        } ], [ "path", {
            d: "m22 2-8 8"
        } ], [ "ellipse", {
            cx: "12",
            cy: "9",
            rx: "10",
            ry: "5"
        } ], [ "path", {
            d: "M7 13.4v7.9"
        } ], [ "path", {
            d: "M12 14v8"
        } ], [ "path", {
            d: "M17 13.4v7.9"
        } ], [ "path", {
            d: "M2 9v8a10 5 0 0 0 20 0V9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Drumstick = [ [ "path", {
            d: "M15.4 15.63a7.875 6 135 1 1 6.23-6.23 4.5 3.43 135 0 0-6.23 6.23"
        } ], [ "path", {
            d: "m8.29 12.71-2.6 2.6a2.5 2.5 0 1 0-1.65 4.65A2.5 2.5 0 1 0 8.7 18.3l2.59-2.59"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Dumbbell = [ [ "path", {
            d: "M17.596 12.768a2 2 0 1 0 2.829-2.829l-1.768-1.767a2 2 0 0 0 2.828-2.829l-2.828-2.828a2 2 0 0 0-2.829 2.828l-1.767-1.768a2 2 0 1 0-2.829 2.829z"
        } ], [ "path", {
            d: "m2.5 21.5 1.4-1.4"
        } ], [ "path", {
            d: "m20.1 3.9 1.4-1.4"
        } ], [ "path", {
            d: "M5.343 21.485a2 2 0 1 0 2.829-2.828l1.767 1.768a2 2 0 1 0 2.829-2.829l-6.364-6.364a2 2 0 1 0-2.829 2.829l1.768 1.767a2 2 0 0 0-2.828 2.829z"
        } ], [ "path", {
            d: "m9.6 14.4 4.8-4.8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ear = [ [ "path", {
            d: "M6 8.5a6.5 6.5 0 1 1 13 0c0 6-6 6-6 10a3.5 3.5 0 1 1-7 0"
        } ], [ "path", {
            d: "M15 8.5a2.5 2.5 0 0 0-5 0v1a2 2 0 1 1 0 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EarOff = [ [ "path", {
            d: "M6 18.5a3.5 3.5 0 1 0 7 0c0-1.57.92-2.52 2.04-3.46"
        } ], [ "path", {
            d: "M6 8.5c0-.75.13-1.47.36-2.14"
        } ], [ "path", {
            d: "M8.8 3.15A6.5 6.5 0 0 1 19 8.5c0 1.63-.44 2.81-1.09 3.76"
        } ], [ "path", {
            d: "M12.5 6A2.5 2.5 0 0 1 15 8.5M10 13a2 2 0 0 0 1.82-1.18"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EarthLock = [ [ "path", {
            d: "M7 3.34V5a3 3 0 0 0 3 3"
        } ], [ "path", {
            d: "M11 21.95V18a2 2 0 0 0-2-2 2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05"
        } ], [ "path", {
            d: "M21.54 15H17a2 2 0 0 0-2 2v4.54"
        } ], [ "path", {
            d: "M12 2a10 10 0 1 0 9.54 13"
        } ], [ "path", {
            d: "M20 6V4a2 2 0 1 0-4 0v2"
        } ], [ "rect", {
            width: "8",
            height: "5",
            x: "14",
            y: "6",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Earth = [ [ "path", {
            d: "M21.54 15H17a2 2 0 0 0-2 2v4.54"
        } ], [ "path", {
            d: "M7 3.34V5a3 3 0 0 0 3 3a2 2 0 0 1 2 2c0 1.1.9 2 2 2a2 2 0 0 0 2-2c0-1.1.9-2 2-2h3.17"
        } ], [ "path", {
            d: "M11 21.95V18a2 2 0 0 0-2-2a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Eclipse = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M12 2a7 7 0 1 0 10 10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EggFried = [ [ "circle", {
            cx: "11.5",
            cy: "12.5",
            r: "3.5"
        } ], [ "path", {
            d: "M3 8c0-3.5 2.5-6 6.5-6 5 0 4.83 3 7.5 5s5 2 5 6c0 4.5-2.5 6.5-7 6.5-2.5 0-2.5 2.5-6 2.5s-7-2-7-5.5c0-3 1.5-3 1.5-5C3.5 10 3 9 3 8Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EggOff = [ [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M20 14.347V14c0-6-4-12-8-12-1.078 0-2.157.436-3.157 1.19"
        } ], [ "path", {
            d: "M6.206 6.21C4.871 8.4 4 11.2 4 14a8 8 0 0 0 14.568 4.568"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Egg = [ [ "path", {
            d: "M12 2C8 2 4 8 4 14a8 8 0 0 0 16 0c0-6-4-12-8-12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EllipsisVertical = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "12",
            cy: "5",
            r: "1"
        } ], [ "circle", {
            cx: "12",
            cy: "19",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ellipsis = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "19",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "5",
            cy: "12",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EqualApproximately = [ [ "path", {
            d: "M5 15a6.5 6.5 0 0 1 7 0 6.5 6.5 0 0 0 7 0"
        } ], [ "path", {
            d: "M5 9a6.5 6.5 0 0 1 7 0 6.5 6.5 0 0 0 7 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EqualNot = [ [ "line", {
            x1: "5",
            x2: "19",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "5",
            x2: "19",
            y1: "15",
            y2: "15"
        } ], [ "line", {
            x1: "19",
            x2: "5",
            y1: "5",
            y2: "19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Equal = [ [ "line", {
            x1: "5",
            x2: "19",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "5",
            x2: "19",
            y1: "15",
            y2: "15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Eraser = [ [ "path", {
            d: "M21 21H8a2 2 0 0 1-1.42-.587l-3.994-3.999a2 2 0 0 1 0-2.828l10-10a2 2 0 0 1 2.829 0l5.999 6a2 2 0 0 1 0 2.828L12.834 21"
        } ], [ "path", {
            d: "m5.082 11.09 8.828 8.828"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EthernetPort = [ [ "path", {
            d: "m15 20 3-3h2a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h2l3 3z"
        } ], [ "path", {
            d: "M6 8v1"
        } ], [ "path", {
            d: "M10 8v1"
        } ], [ "path", {
            d: "M14 8v1"
        } ], [ "path", {
            d: "M18 8v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Euro = [ [ "path", {
            d: "M4 10h12"
        } ], [ "path", {
            d: "M4 14h9"
        } ], [ "path", {
            d: "M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EvCharger = [ [ "path", {
            d: "M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 4 0v-6.998a2 2 0 0 0-.59-1.42L18 5"
        } ], [ "path", {
            d: "M14 21V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v16"
        } ], [ "path", {
            d: "M2 21h13"
        } ], [ "path", {
            d: "M3 7h11"
        } ], [ "path", {
            d: "m9 11-2 3h3l-2 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Expand = [ [ "path", {
            d: "m15 15 6 6"
        } ], [ "path", {
            d: "m15 9 6-6"
        } ], [ "path", {
            d: "M21 16v5h-5"
        } ], [ "path", {
            d: "M21 8V3h-5"
        } ], [ "path", {
            d: "M3 16v5h5"
        } ], [ "path", {
            d: "m3 21 6-6"
        } ], [ "path", {
            d: "M3 8V3h5"
        } ], [ "path", {
            d: "M9 9 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ExternalLink = [ [ "path", {
            d: "M15 3h6v6"
        } ], [ "path", {
            d: "M10 14 21 3"
        } ], [ "path", {
            d: "M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EyeClosed = [ [ "path", {
            d: "m15 18-.722-3.25"
        } ], [ "path", {
            d: "M2 8a10.645 10.645 0 0 0 20 0"
        } ], [ "path", {
            d: "m20 15-1.726-2.05"
        } ], [ "path", {
            d: "m4 15 1.726-2.05"
        } ], [ "path", {
            d: "m9 18 .722-3.25"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const EyeOff = [ [ "path", {
            d: "M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49"
        } ], [ "path", {
            d: "M14.084 14.158a3 3 0 0 1-4.242-4.242"
        } ], [ "path", {
            d: "M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Eye = [ [ "path", {
            d: "M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Facebook = [ [ "path", {
            d: "M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Factory = [ [ "path", {
            d: "M12 16h.01"
        } ], [ "path", {
            d: "M16 16h.01"
        } ], [ "path", {
            d: "M3 19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8.5a.5.5 0 0 0-.769-.422l-4.462 2.844A.5.5 0 0 1 15 10.5v-2a.5.5 0 0 0-.769-.422L9.77 10.922A.5.5 0 0 1 9 10.5V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z"
        } ], [ "path", {
            d: "M8 16h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Fan = [ [ "path", {
            d: "M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z"
        } ], [ "path", {
            d: "M12 12v.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Feather = [ [ "path", {
            d: "M12.67 19a2 2 0 0 0 1.416-.588l6.154-6.172a6 6 0 0 0-8.49-8.49L5.586 9.914A2 2 0 0 0 5 11.328V18a1 1 0 0 0 1 1z"
        } ], [ "path", {
            d: "M16 8 2 22"
        } ], [ "path", {
            d: "M17.5 15H9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FastForward = [ [ "path", {
            d: "M12 6a2 2 0 0 1 3.414-1.414l6 6a2 2 0 0 1 0 2.828l-6 6A2 2 0 0 1 12 18z"
        } ], [ "path", {
            d: "M2 6a2 2 0 0 1 3.414-1.414l6 6a2 2 0 0 1 0 2.828l-6 6A2 2 0 0 1 2 18z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Fence = [ [ "path", {
            d: "M4 3 2 5v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z"
        } ], [ "path", {
            d: "M6 8h4"
        } ], [ "path", {
            d: "M6 18h4"
        } ], [ "path", {
            d: "m12 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z"
        } ], [ "path", {
            d: "M14 8h4"
        } ], [ "path", {
            d: "M14 18h4"
        } ], [ "path", {
            d: "m20 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FerrisWheel = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ], [ "path", {
            d: "M12 2v4"
        } ], [ "path", {
            d: "m6.8 15-3.5 2"
        } ], [ "path", {
            d: "m20.7 7-3.5 2"
        } ], [ "path", {
            d: "M6.8 9 3.3 7"
        } ], [ "path", {
            d: "m20.7 17-3.5-2"
        } ], [ "path", {
            d: "m9 22 3-8 3 8"
        } ], [ "path", {
            d: "M8 22h8"
        } ], [ "path", {
            d: "M18 18.7a9 9 0 1 0-12 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Figma = [ [ "path", {
            d: "M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z"
        } ], [ "path", {
            d: "M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z"
        } ], [ "path", {
            d: "M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z"
        } ], [ "path", {
            d: "M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z"
        } ], [ "path", {
            d: "M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileAudio2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "circle", {
            cx: "3",
            cy: "17",
            r: "1"
        } ], [ "path", {
            d: "M2 17v-3a4 4 0 0 1 8 0v3"
        } ], [ "circle", {
            cx: "9",
            cy: "17",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileArchive = [ [ "path", {
            d: "M10 12v-1"
        } ], [ "path", {
            d: "M10 18v-2"
        } ], [ "path", {
            d: "M10 7V6"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M15.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 .274 1.01"
        } ], [ "circle", {
            cx: "10",
            cy: "20",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileAudio = [ [ "path", {
            d: "M17.5 22h.5a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M2 19a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0v-4a6 6 0 0 1 12 0v4a2 2 0 1 1-4 0v-1a2 2 0 1 1 4 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileAxis3d = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m8 18 4-4"
        } ], [ "path", {
            d: "M8 10v8h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileBadge2 = [ [ "path", {
            d: "m13.69 12.479 1.29 4.88a.5.5 0 0 1-.697.591l-1.844-.849a1 1 0 0 0-.88.001l-1.846.85a.5.5 0 0 1-.693-.593l1.29-4.88"
        } ], [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileBadge = [ [ "path", {
            d: "M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3.072"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m6.69 16.479 1.29 4.88a.5.5 0 0 1-.698.591l-1.843-.849a1 1 0 0 0-.88.001l-1.846.85a.5.5 0 0 1-.693-.593l1.29-4.88"
        } ], [ "circle", {
            cx: "5",
            cy: "14",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileBox = [ [ "path", {
            d: "M14.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M3 13.1a2 2 0 0 0-1 1.76v3.24a2 2 0 0 0 .97 1.78L6 21.7a2 2 0 0 0 2.03.01L11 19.9a2 2 0 0 0 1-1.76V14.9a2 2 0 0 0-.97-1.78L8 11.3a2 2 0 0 0-2.03-.01Z"
        } ], [ "path", {
            d: "M7 17v5"
        } ], [ "path", {
            d: "M11.7 14.2 7 17l-4.7-2.8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileChartColumnIncreasing = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M8 18v-2"
        } ], [ "path", {
            d: "M12 18v-4"
        } ], [ "path", {
            d: "M16 18v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileChartColumn = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M8 18v-1"
        } ], [ "path", {
            d: "M12 18v-6"
        } ], [ "path", {
            d: "M16 18v-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileChartLine = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m16 13-3.5 3.5-2-2L8 17"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileChartPie = [ [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3.5"
        } ], [ "path", {
            d: "M4.017 11.512a6 6 0 1 0 8.466 8.475"
        } ], [ "path", {
            d: "M9 16a1 1 0 0 1-1-1v-4c0-.552.45-1.008.995-.917a6 6 0 0 1 4.922 4.922c.091.544-.365.995-.917.995z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileCheck = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m9 15 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileCheck2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m3 15 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileClock = [ [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "M8 14v2.2l1.6 1"
        } ], [ "circle", {
            cx: "8",
            cy: "16",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileCode2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m5 12-3 3 3 3"
        } ], [ "path", {
            d: "m9 18 3-3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileCode = [ [ "path", {
            d: "M10 12.5 8 15l2 2.5"
        } ], [ "path", {
            d: "m14 12.5 2 2.5-2 2.5"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileCog = [ [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m2.305 15.53.923-.382"
        } ], [ "path", {
            d: "m3.228 12.852-.924-.383"
        } ], [ "path", {
            d: "M4.677 21.5a2 2 0 0 0 1.313.5H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2.5"
        } ], [ "path", {
            d: "m4.852 11.228-.383-.923"
        } ], [ "path", {
            d: "m4.852 16.772-.383.924"
        } ], [ "path", {
            d: "m7.148 11.228.383-.923"
        } ], [ "path", {
            d: "m7.53 17.696-.382-.924"
        } ], [ "path", {
            d: "m8.772 12.852.923-.383"
        } ], [ "path", {
            d: "m8.772 15.148.923.383"
        } ], [ "circle", {
            cx: "6",
            cy: "14",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileDiff = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M9 10h6"
        } ], [ "path", {
            d: "M12 13V7"
        } ], [ "path", {
            d: "M9 17h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileDigit = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "rect", {
            width: "4",
            height: "6",
            x: "2",
            y: "12",
            rx: "2"
        } ], [ "path", {
            d: "M10 12h2v6"
        } ], [ "path", {
            d: "M10 18h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileDown = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M12 18v-6"
        } ], [ "path", {
            d: "m9 15 3 3 3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileImage = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "circle", {
            cx: "10",
            cy: "12",
            r: "2"
        } ], [ "path", {
            d: "m20 17-1.296-1.296a2.41 2.41 0 0 0-3.408 0L9 22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileHeart = [ [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M2.62 13.8A2.25 2.25 0 1 1 6 10.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z"
        } ], [ "path", {
            d: "M4 6.005V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-1.9-1.376"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileInput = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M2 15h10"
        } ], [ "path", {
            d: "m9 18 3-3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileJson2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1"
        } ], [ "path", {
            d: "M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileJson = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1"
        } ], [ "path", {
            d: "M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileKey2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v6"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "circle", {
            cx: "4",
            cy: "16",
            r: "2"
        } ], [ "path", {
            d: "m10 10-4.5 4.5"
        } ], [ "path", {
            d: "m9 11 1 1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileKey = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "circle", {
            cx: "10",
            cy: "16",
            r: "2"
        } ], [ "path", {
            d: "m16 10-4.5 4.5"
        } ], [ "path", {
            d: "m15 11 1 1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileLock = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "rect", {
            width: "8",
            height: "6",
            x: "8",
            y: "12",
            rx: "1"
        } ], [ "path", {
            d: "M10 12v-2a2 2 0 1 1 4 0v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileLock2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v1"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "rect", {
            width: "8",
            height: "5",
            x: "2",
            y: "13",
            rx: "1"
        } ], [ "path", {
            d: "M8 13v-2a2 2 0 1 0-4 0v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileMinus2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M3 15h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileMinus = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M9 15h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileMusic = [ [ "path", {
            d: "M10.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v8.4"
        } ], [ "path", {
            d: "M8 18v-7.7L16 9v7"
        } ], [ "circle", {
            cx: "14",
            cy: "16",
            r: "2"
        } ], [ "circle", {
            cx: "6",
            cy: "18",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileOutput = [ [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M4 7V4a2 2 0 0 1 2-2 2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M4.063 20.999a2 2 0 0 0 2 1L18 22a2 2 0 0 0 2-2V7l-5-5H6"
        } ], [ "path", {
            d: "m5 11-3 3"
        } ], [ "path", {
            d: "m5 17-3-3h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FilePenLine = [ [ "path", {
            d: "m18 5-2.414-2.414A2 2 0 0 0 14.172 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2"
        } ], [ "path", {
            d: "M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ], [ "path", {
            d: "M8 18h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FilePen = [ [ "path", {
            d: "M12.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v9.5"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FilePlay = [ [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"
        } ], [ "path", {
            d: "M15.033 13.44a.647.647 0 0 1 0 1.12l-4.065 2.352a.645.645 0 0 1-.968-.56v-4.704a.645.645 0 0 1 .967-.56z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FilePlus2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M3 15h6"
        } ], [ "path", {
            d: "M6 12v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FilePlus = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M9 15h6"
        } ], [ "path", {
            d: "M12 18v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileQuestionMark = [ [ "path", {
            d: "M12 17h.01"
        } ], [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"
        } ], [ "path", {
            d: "M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileScan = [ [ "path", {
            d: "M20 10V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M16 14a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M20 14a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M20 22a2 2 0 0 0 2-2"
        } ], [ "path", {
            d: "M16 22a2 2 0 0 1-2-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileSearch2 = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "circle", {
            cx: "11.5",
            cy: "14.5",
            r: "2.5"
        } ], [ "path", {
            d: "M13.3 16.3 15 18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileSearch = [ [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M4.268 21a2 2 0 0 0 1.727 1H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "m9 18-1.5-1.5"
        } ], [ "circle", {
            cx: "5",
            cy: "14",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileSliders = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "path", {
            d: "M10 11v2"
        } ], [ "path", {
            d: "M8 17h8"
        } ], [ "path", {
            d: "M14 16v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileSpreadsheet = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M8 13h2"
        } ], [ "path", {
            d: "M14 13h2"
        } ], [ "path", {
            d: "M8 17h2"
        } ], [ "path", {
            d: "M14 17h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileStack = [ [ "path", {
            d: "M11 21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1"
        } ], [ "path", {
            d: "M16 16a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1"
        } ], [ "path", {
            d: "M21 6a2 2 0 0 0-.586-1.414l-2-2A2 2 0 0 0 17 2h-3a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileSymlink = [ [ "path", {
            d: "m10 18 3-3-3-3"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M4 11V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileTerminal = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m8 16 2-2-2-2"
        } ], [ "path", {
            d: "M12 18h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileText = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M10 9H8"
        } ], [ "path", {
            d: "M16 13H8"
        } ], [ "path", {
            d: "M16 17H8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileType2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M2 13v-1h6v1"
        } ], [ "path", {
            d: "M5 12v6"
        } ], [ "path", {
            d: "M4 18h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileType = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M9 13v-1h6v1"
        } ], [ "path", {
            d: "M12 12v6"
        } ], [ "path", {
            d: "M11 18h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileUp = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M12 12v6"
        } ], [ "path", {
            d: "m15 15-3-3-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileUser = [ [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M15 18a3 3 0 1 0-6 0"
        } ], [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z"
        } ], [ "circle", {
            cx: "12",
            cy: "13",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileVideoCamera = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "rect", {
            width: "8",
            height: "6",
            x: "2",
            y: "12",
            rx: "1"
        } ], [ "path", {
            d: "m10 13.843 3.033-1.755a.645.645 0 0 1 .967.56v4.704a.645.645 0 0 1-.967.56L10 16.157"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileVolume2 = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M8 15h.01"
        } ], [ "path", {
            d: "M11.5 13.5a2.5 2.5 0 0 1 0 3"
        } ], [ "path", {
            d: "M15 12a5 5 0 0 1 0 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileVolume = [ [ "path", {
            d: "M11 11a5 5 0 0 1 0 6"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M4 6.765V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-.93-.23"
        } ], [ "path", {
            d: "M7 10.51a.5.5 0 0 0-.826-.38l-1.893 1.628A1 1 0 0 1 3.63 12H2.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h1.129a1 1 0 0 1 .652.242l1.893 1.63a.5.5 0 0 0 .826-.38z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileWarning = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M12 9v4"
        } ], [ "path", {
            d: "M12 17h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileX2 = [ [ "path", {
            d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m8 12.5-5 5"
        } ], [ "path", {
            d: "m3 12.5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FileX = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "m14.5 12.5-5 5"
        } ], [ "path", {
            d: "m9.5 12.5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const File = [ [ "path", {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Files = [ [ "path", {
            d: "M15 2a2 2 0 0 1 1.414.586l4 4A2 2 0 0 1 21 8v7a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2z"
        } ], [ "path", {
            d: "M15 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M5 7a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h8a2 2 0 0 0 1.732-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Film = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M7 3v18"
        } ], [ "path", {
            d: "M3 7.5h4"
        } ], [ "path", {
            d: "M3 12h18"
        } ], [ "path", {
            d: "M3 16.5h4"
        } ], [ "path", {
            d: "M17 3v18"
        } ], [ "path", {
            d: "M17 7.5h4"
        } ], [ "path", {
            d: "M17 16.5h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Fingerprint = [ [ "path", {
            d: "M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4"
        } ], [ "path", {
            d: "M14 13.12c0 2.38 0 6.38-1 8.88"
        } ], [ "path", {
            d: "M17.29 21.02c.12-.6.43-2.3.5-3.02"
        } ], [ "path", {
            d: "M2 12a10 10 0 0 1 18-6"
        } ], [ "path", {
            d: "M2 16h.01"
        } ], [ "path", {
            d: "M21.8 16c.2-2 .131-5.354 0-6"
        } ], [ "path", {
            d: "M5 19.5C5.5 18 6 15 6 12a6 6 0 0 1 .34-2"
        } ], [ "path", {
            d: "M8.65 22c.21-.66.45-1.32.57-2"
        } ], [ "path", {
            d: "M9 6.8a6 6 0 0 1 9 5.2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FireExtinguisher = [ [ "path", {
            d: "M15 6.5V3a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3.5"
        } ], [ "path", {
            d: "M9 18h8"
        } ], [ "path", {
            d: "M18 3h-3"
        } ], [ "path", {
            d: "M11 3a6 6 0 0 0-6 6v11"
        } ], [ "path", {
            d: "M5 13h4"
        } ], [ "path", {
            d: "M17 10a4 4 0 0 0-8 0v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FishOff = [ [ "path", {
            d: "M18 12.47v.03m0-.5v.47m-.475 5.056A6.744 6.744 0 0 1 15 18c-3.56 0-7.56-2.53-8.5-6 .348-1.28 1.114-2.433 2.121-3.38m3.444-2.088A8.802 8.802 0 0 1 15 6c3.56 0 6.06 2.54 7 6-.309 1.14-.786 2.177-1.413 3.058"
        } ], [ "path", {
            d: "M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33m7.48-4.372A9.77 9.77 0 0 1 16 6.07m0 11.86a9.77 9.77 0 0 1-1.728-3.618"
        } ], [ "path", {
            d: "m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98M8.53 3h5.27a2 2 0 0 1 1.98 1.67l.23 1.4M2 2l20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FishSymbol = [ [ "path", {
            d: "M2 16s9-15 20-4C11 23 2 8 2 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Fish = [ [ "path", {
            d: "M6.5 12c.94-3.46 4.94-6 8.5-6 3.56 0 6.06 2.54 7 6-.94 3.47-3.44 6-7 6s-7.56-2.53-8.5-6Z"
        } ], [ "path", {
            d: "M18 12v.5"
        } ], [ "path", {
            d: "M16 17.93a9.77 9.77 0 0 1 0-11.86"
        } ], [ "path", {
            d: "M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33"
        } ], [ "path", {
            d: "M10.46 7.26C10.2 5.88 9.17 4.24 8 3h5.8a2 2 0 0 1 1.98 1.67l.23 1.4"
        } ], [ "path", {
            d: "m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlagOff = [ [ "path", {
            d: "M16 16c-3 0-5-2-8-2a6 6 0 0 0-4 1.528"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M4 22V4"
        } ], [ "path", {
            d: "M7.656 2H8c3 0 5 2 7.333 2q2 0 3.067-.8A1 1 0 0 1 20 4v10.347"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlagTriangleLeft = [ [ "path", {
            d: "M18 22V2.8a.8.8 0 0 0-1.17-.71L5.45 7.78a.8.8 0 0 0 0 1.44L18 15.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlagTriangleRight = [ [ "path", {
            d: "M6 22V2.8a.8.8 0 0 1 1.17-.71l11.38 5.69a.8.8 0 0 1 0 1.44L6 15.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Flag = [ [ "path", {
            d: "M4 22V4a1 1 0 0 1 .4-.8A6 6 0 0 1 8 2c3 0 5 2 7.333 2q2 0 3.067-.8A1 1 0 0 1 20 4v10a1 1 0 0 1-.4.8A6 6 0 0 1 16 16c-3 0-5-2-8-2a6 6 0 0 0-4 1.528"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlameKindling = [ [ "path", {
            d: "M12 2c1 3 2.5 3.5 3.5 4.5A5 5 0 0 1 17 10a5 5 0 1 1-10 0c0-.3 0-.6.1-.9a2 2 0 1 0 3.3-2C8 4.5 11 2 12 2Z"
        } ], [ "path", {
            d: "m5 22 14-4"
        } ], [ "path", {
            d: "m5 18 14 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Flame = [ [ "path", {
            d: "M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlashlightOff = [ [ "path", {
            d: "M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4"
        } ], [ "path", {
            d: "M7 2h11v4c0 2-2 2-2 4v1"
        } ], [ "line", {
            x1: "11",
            x2: "18",
            y1: "6",
            y2: "6"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Flashlight = [ [ "path", {
            d: "M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z"
        } ], [ "line", {
            x1: "6",
            x2: "18",
            y1: "6",
            y2: "6"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "12",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlaskConicalOff = [ [ "path", {
            d: "M10 2v2.343"
        } ], [ "path", {
            d: "M14 2v6.343"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M20 20a2 2 0 0 1-2 2H6a2 2 0 0 1-1.755-2.96l5.227-9.563"
        } ], [ "path", {
            d: "M6.453 15H15"
        } ], [ "path", {
            d: "M8.5 2h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlaskConical = [ [ "path", {
            d: "M14 2v6a2 2 0 0 0 .245.96l5.51 10.08A2 2 0 0 1 18 22H6a2 2 0 0 1-1.755-2.96l5.51-10.08A2 2 0 0 0 10 8V2"
        } ], [ "path", {
            d: "M6.453 15h11.094"
        } ], [ "path", {
            d: "M8.5 2h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlaskRound = [ [ "path", {
            d: "M10 2v6.292a7 7 0 1 0 4 0V2"
        } ], [ "path", {
            d: "M5 15h14"
        } ], [ "path", {
            d: "M8.5 2h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlipHorizontal2 = [ [ "path", {
            d: "m3 7 5 5-5 5V7"
        } ], [ "path", {
            d: "m21 7-5 5 5 5V7"
        } ], [ "path", {
            d: "M12 20v2"
        } ], [ "path", {
            d: "M12 14v2"
        } ], [ "path", {
            d: "M12 8v2"
        } ], [ "path", {
            d: "M12 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlipHorizontal = [ [ "path", {
            d: "M8 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h3"
        } ], [ "path", {
            d: "M16 3h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-3"
        } ], [ "path", {
            d: "M12 20v2"
        } ], [ "path", {
            d: "M12 14v2"
        } ], [ "path", {
            d: "M12 8v2"
        } ], [ "path", {
            d: "M12 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlipVertical2 = [ [ "path", {
            d: "m17 3-5 5-5-5h10"
        } ], [ "path", {
            d: "m17 21-5-5-5 5h10"
        } ], [ "path", {
            d: "M4 12H2"
        } ], [ "path", {
            d: "M10 12H8"
        } ], [ "path", {
            d: "M16 12h-2"
        } ], [ "path", {
            d: "M22 12h-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FlipVertical = [ [ "path", {
            d: "M21 8V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "M21 16v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3"
        } ], [ "path", {
            d: "M4 12H2"
        } ], [ "path", {
            d: "M10 12H8"
        } ], [ "path", {
            d: "M16 12h-2"
        } ], [ "path", {
            d: "M22 12h-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Flower = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ], [ "path", {
            d: "M12 16.5A4.5 4.5 0 1 1 7.5 12 4.5 4.5 0 1 1 12 7.5a4.5 4.5 0 1 1 4.5 4.5 4.5 4.5 0 1 1-4.5 4.5"
        } ], [ "path", {
            d: "M12 7.5V9"
        } ], [ "path", {
            d: "M7.5 12H9"
        } ], [ "path", {
            d: "M16.5 12H15"
        } ], [ "path", {
            d: "M12 16.5V15"
        } ], [ "path", {
            d: "m8 8 1.88 1.88"
        } ], [ "path", {
            d: "M14.12 9.88 16 8"
        } ], [ "path", {
            d: "m8 16 1.88-1.88"
        } ], [ "path", {
            d: "M14.12 14.12 16 16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Flower2 = [ [ "path", {
            d: "M12 5a3 3 0 1 1 3 3m-3-3a3 3 0 1 0-3 3m3-3v1M9 8a3 3 0 1 0 3 3M9 8h1m5 0a3 3 0 1 1-3 3m3-3h-1m-2 3v-1"
        } ], [ "circle", {
            cx: "12",
            cy: "8",
            r: "2"
        } ], [ "path", {
            d: "M12 10v12"
        } ], [ "path", {
            d: "M12 22c4.2 0 7-1.667 7-5-4.2 0-7 1.667-7 5Z"
        } ], [ "path", {
            d: "M12 22c-4.2 0-7-1.667-7-5 4.2 0 7 1.667 7 5Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Focus = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ], [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FoldHorizontal = [ [ "path", {
            d: "M2 12h6"
        } ], [ "path", {
            d: "M22 12h-6"
        } ], [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "M12 8v2"
        } ], [ "path", {
            d: "M12 14v2"
        } ], [ "path", {
            d: "M12 20v2"
        } ], [ "path", {
            d: "m19 9-3 3 3 3"
        } ], [ "path", {
            d: "m5 15 3-3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FoldVertical = [ [ "path", {
            d: "M12 22v-6"
        } ], [ "path", {
            d: "M12 8V2"
        } ], [ "path", {
            d: "M4 12H2"
        } ], [ "path", {
            d: "M10 12H8"
        } ], [ "path", {
            d: "M16 12h-2"
        } ], [ "path", {
            d: "M22 12h-2"
        } ], [ "path", {
            d: "m15 19-3-3-3 3"
        } ], [ "path", {
            d: "m15 5-3 3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderArchive = [ [ "circle", {
            cx: "15",
            cy: "19",
            r: "2"
        } ], [ "path", {
            d: "M20.9 19.8A2 2 0 0 0 22 18V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2h5.1"
        } ], [ "path", {
            d: "M15 11v-1"
        } ], [ "path", {
            d: "M15 17v-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderCheck = [ [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ], [ "path", {
            d: "m9 13 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderClock = [ [ "path", {
            d: "M16 14v2.2l1.6 1"
        } ], [ "path", {
            d: "M7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2"
        } ], [ "circle", {
            cx: "16",
            cy: "16",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderClosed = [ [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ], [ "path", {
            d: "M2 10h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderCode = [ [ "path", {
            d: "M10 10.5 8 13l2 2.5"
        } ], [ "path", {
            d: "m14 10.5 2 2.5-2 2.5"
        } ], [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderCog = [ [ "path", {
            d: "M10.3 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.98a2 2 0 0 1 1.69.9l.66 1.2A2 2 0 0 0 12 6h8a2 2 0 0 1 2 2v3.3"
        } ], [ "path", {
            d: "m14.305 19.53.923-.382"
        } ], [ "path", {
            d: "m15.228 16.852-.923-.383"
        } ], [ "path", {
            d: "m16.852 15.228-.383-.923"
        } ], [ "path", {
            d: "m16.852 20.772-.383.924"
        } ], [ "path", {
            d: "m19.148 15.228.383-.923"
        } ], [ "path", {
            d: "m19.53 21.696-.382-.924"
        } ], [ "path", {
            d: "m20.772 16.852.924-.383"
        } ], [ "path", {
            d: "m20.772 19.148.924.383"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderDot = [ [ "path", {
            d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"
        } ], [ "circle", {
            cx: "12",
            cy: "13",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderDown = [ [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ], [ "path", {
            d: "M12 10v6"
        } ], [ "path", {
            d: "m15 13-3 3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderGit2 = [ [ "path", {
            d: "M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v5"
        } ], [ "circle", {
            cx: "13",
            cy: "12",
            r: "2"
        } ], [ "path", {
            d: "M18 19c-2.8 0-5-2.2-5-5v8"
        } ], [ "circle", {
            cx: "20",
            cy: "19",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderHeart = [ [ "path", {
            d: "M10.638 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v3.417"
        } ], [ "path", {
            d: "M14.62 18.8A2.25 2.25 0 1 1 18 15.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderGit = [ [ "circle", {
            cx: "12",
            cy: "13",
            r: "2"
        } ], [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ], [ "path", {
            d: "M14 13h3"
        } ], [ "path", {
            d: "M7 13h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderKanban = [ [ "path", {
            d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"
        } ], [ "path", {
            d: "M8 10v4"
        } ], [ "path", {
            d: "M12 10v2"
        } ], [ "path", {
            d: "M16 10v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderInput = [ [ "path", {
            d: "M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1"
        } ], [ "path", {
            d: "M2 13h10"
        } ], [ "path", {
            d: "m9 16 3-3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderKey = [ [ "circle", {
            cx: "16",
            cy: "20",
            r: "2"
        } ], [ "path", {
            d: "M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "m22 14-4.5 4.5"
        } ], [ "path", {
            d: "m21 15 1 1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderLock = [ [ "rect", {
            width: "8",
            height: "5",
            x: "14",
            y: "17",
            rx: "1"
        } ], [ "path", {
            d: "M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2.5"
        } ], [ "path", {
            d: "M20 17v-2a2 2 0 1 0-4 0v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderMinus = [ [ "path", {
            d: "M9 13h6"
        } ], [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderOpenDot = [ [ "path", {
            d: "m6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2"
        } ], [ "circle", {
            cx: "14",
            cy: "15",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderOpen = [ [ "path", {
            d: "m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderOutput = [ [ "path", {
            d: "M2 7.5V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-1.5"
        } ], [ "path", {
            d: "M2 13h10"
        } ], [ "path", {
            d: "m5 10-3 3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderPen = [ [ "path", {
            d: "M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5"
        } ], [ "path", {
            d: "M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderRoot = [ [ "path", {
            d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"
        } ], [ "circle", {
            cx: "12",
            cy: "13",
            r: "2"
        } ], [ "path", {
            d: "M12 15v5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderPlus = [ [ "path", {
            d: "M12 10v6"
        } ], [ "path", {
            d: "M9 13h6"
        } ], [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderSearch2 = [ [ "circle", {
            cx: "11.5",
            cy: "12.5",
            r: "2.5"
        } ], [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ], [ "path", {
            d: "M13.3 14.3 15 16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderSearch = [ [ "path", {
            d: "M10.7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v4.1"
        } ], [ "path", {
            d: "m21 21-1.9-1.9"
        } ], [ "circle", {
            cx: "17",
            cy: "17",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderSymlink = [ [ "path", {
            d: "M2 9.35V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7"
        } ], [ "path", {
            d: "m8 16 3-3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderSync = [ [ "path", {
            d: "M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v.5"
        } ], [ "path", {
            d: "M12 10v4h4"
        } ], [ "path", {
            d: "m12 14 1.535-1.605a5 5 0 0 1 8 1.5"
        } ], [ "path", {
            d: "M22 22v-4h-4"
        } ], [ "path", {
            d: "m22 18-1.535 1.605a5 5 0 0 1-8-1.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderTree = [ [ "path", {
            d: "M20 10a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2.5a1 1 0 0 1-.8-.4l-.9-1.2A1 1 0 0 0 15 3h-2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z"
        } ], [ "path", {
            d: "M20 21a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-2.9a1 1 0 0 1-.88-.55l-.42-.85a1 1 0 0 0-.92-.6H13a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z"
        } ], [ "path", {
            d: "M3 5a2 2 0 0 0 2 2h3"
        } ], [ "path", {
            d: "M3 3v13a2 2 0 0 0 2 2h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderX = [ [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ], [ "path", {
            d: "m9.5 10.5 5 5"
        } ], [ "path", {
            d: "m14.5 10.5-5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FolderUp = [ [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ], [ "path", {
            d: "M12 10v6"
        } ], [ "path", {
            d: "m9 13 3-3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Folder = [ [ "path", {
            d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Folders = [ [ "path", {
            d: "M20 5a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h2.5a1.5 1.5 0 0 1 1.2.6l.6.8a1.5 1.5 0 0 0 1.2.6z"
        } ], [ "path", {
            d: "M3 8.268a2 2 0 0 0-1 1.738V19a2 2 0 0 0 2 2h11a2 2 0 0 0 1.732-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Footprints = [ [ "path", {
            d: "M4 16v-2.38C4 11.5 2.97 10.5 3 8c.03-2.72 1.49-6 4.5-6C9.37 2 10 3.8 10 5.5c0 3.11-2 5.66-2 8.68V16a2 2 0 1 1-4 0Z"
        } ], [ "path", {
            d: "M20 20v-2.38c0-2.12 1.03-3.12 1-5.62-.03-2.72-1.49-6-4.5-6C14.63 6 14 7.8 14 9.5c0 3.11 2 5.66 2 8.68V20a2 2 0 1 0 4 0Z"
        } ], [ "path", {
            d: "M16 17h4"
        } ], [ "path", {
            d: "M4 13h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Forklift = [ [ "path", {
            d: "M12 12H5a2 2 0 0 0-2 2v5"
        } ], [ "circle", {
            cx: "13",
            cy: "19",
            r: "2"
        } ], [ "circle", {
            cx: "5",
            cy: "19",
            r: "2"
        } ], [ "path", {
            d: "M8 19h3m5-17v17h6M6 12V7c0-1.1.9-2 2-2h3l5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Frame = [ [ "line", {
            x1: "22",
            x2: "2",
            y1: "6",
            y2: "6"
        } ], [ "line", {
            x1: "22",
            x2: "2",
            y1: "18",
            y2: "18"
        } ], [ "line", {
            x1: "6",
            x2: "6",
            y1: "2",
            y2: "22"
        } ], [ "line", {
            x1: "18",
            x2: "18",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Forward = [ [ "path", {
            d: "m15 17 5-5-5-5"
        } ], [ "path", {
            d: "M4 18v-2a4 4 0 0 1 4-4h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Framer = [ [ "path", {
            d: "M5 16V9h14V2H5l14 14h-7m-7 0 7 7v-7m-7 0h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Frown = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M16 16s-1.5-2-4-2-4 2-4 2"
        } ], [ "line", {
            x1: "9",
            x2: "9.01",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "15",
            x2: "15.01",
            y1: "9",
            y2: "9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Fuel = [ [ "path", {
            d: "M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 4 0v-6.998a2 2 0 0 0-.59-1.42L18 5"
        } ], [ "path", {
            d: "M14 21V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v16"
        } ], [ "path", {
            d: "M2 21h13"
        } ], [ "path", {
            d: "M3 9h11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Fullscreen = [ [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "rect", {
            width: "10",
            height: "8",
            x: "7",
            y: "8",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FunnelPlus = [ [ "path", {
            d: "M13.354 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14v6a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341l1.218-1.348"
        } ], [ "path", {
            d: "M16 6h6"
        } ], [ "path", {
            d: "M19 3v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const FunnelX = [ [ "path", {
            d: "M12.531 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14v6a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341l.427-.473"
        } ], [ "path", {
            d: "m16.5 3.5 5 5"
        } ], [ "path", {
            d: "m21.5 3.5-5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Funnel = [ [ "path", {
            d: "M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GalleryHorizontalEnd = [ [ "path", {
            d: "M2 7v10"
        } ], [ "path", {
            d: "M6 5v14"
        } ], [ "rect", {
            width: "12",
            height: "18",
            x: "10",
            y: "3",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GalleryHorizontal = [ [ "path", {
            d: "M2 3v18"
        } ], [ "rect", {
            width: "12",
            height: "18",
            x: "6",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M22 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GalleryVerticalEnd = [ [ "path", {
            d: "M7 2h10"
        } ], [ "path", {
            d: "M5 6h14"
        } ], [ "rect", {
            width: "18",
            height: "12",
            x: "3",
            y: "10",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GalleryThumbnails = [ [ "rect", {
            width: "18",
            height: "14",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M4 21h1"
        } ], [ "path", {
            d: "M9 21h1"
        } ], [ "path", {
            d: "M14 21h1"
        } ], [ "path", {
            d: "M19 21h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GalleryVertical = [ [ "path", {
            d: "M3 2h18"
        } ], [ "rect", {
            width: "18",
            height: "12",
            x: "3",
            y: "6",
            rx: "2"
        } ], [ "path", {
            d: "M3 22h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Gamepad2 = [ [ "line", {
            x1: "6",
            x2: "10",
            y1: "11",
            y2: "11"
        } ], [ "line", {
            x1: "8",
            x2: "8",
            y1: "9",
            y2: "13"
        } ], [ "line", {
            x1: "15",
            x2: "15.01",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "18",
            x2: "18.01",
            y1: "10",
            y2: "10"
        } ], [ "path", {
            d: "M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Gamepad = [ [ "line", {
            x1: "6",
            x2: "10",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "8",
            x2: "8",
            y1: "10",
            y2: "14"
        } ], [ "line", {
            x1: "15",
            x2: "15.01",
            y1: "13",
            y2: "13"
        } ], [ "line", {
            x1: "18",
            x2: "18.01",
            y1: "11",
            y2: "11"
        } ], [ "rect", {
            width: "20",
            height: "12",
            x: "2",
            y: "6",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Gauge = [ [ "path", {
            d: "m12 14 4-4"
        } ], [ "path", {
            d: "M3.34 19a10 10 0 1 1 17.32 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Gavel = [ [ "path", {
            d: "m14 13-8.381 8.38a1 1 0 0 1-3.001-3l8.384-8.381"
        } ], [ "path", {
            d: "m16 16 6-6"
        } ], [ "path", {
            d: "m21.5 10.5-8-8"
        } ], [ "path", {
            d: "m8 8 6-6"
        } ], [ "path", {
            d: "m8.5 7.5 8 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Gem = [ [ "path", {
            d: "M10.5 3 8 9l4 13 4-13-2.5-6"
        } ], [ "path", {
            d: "M17 3a2 2 0 0 1 1.6.8l3 4a2 2 0 0 1 .013 2.382l-7.99 10.986a2 2 0 0 1-3.247 0l-7.99-10.986A2 2 0 0 1 2.4 7.8l2.998-3.997A2 2 0 0 1 7 3z"
        } ], [ "path", {
            d: "M2 9h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GeorgianLari = [ [ "path", {
            d: "M11.5 21a7.5 7.5 0 1 1 7.35-9"
        } ], [ "path", {
            d: "M13 12V3"
        } ], [ "path", {
            d: "M4 21h16"
        } ], [ "path", {
            d: "M9 12V3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ghost = [ [ "path", {
            d: "M9 10h.01"
        } ], [ "path", {
            d: "M15 10h.01"
        } ], [ "path", {
            d: "M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Gift = [ [ "rect", {
            x: "3",
            y: "8",
            width: "18",
            height: "4",
            rx: "1"
        } ], [ "path", {
            d: "M12 8v13"
        } ], [ "path", {
            d: "M19 12v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7"
        } ], [ "path", {
            d: "M7.5 8a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5 2.5 2.5 0 0 1 0 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitBranchPlus = [ [ "path", {
            d: "M6 3v12"
        } ], [ "path", {
            d: "M18 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"
        } ], [ "path", {
            d: "M6 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"
        } ], [ "path", {
            d: "M15 6a9 9 0 0 0-9 9"
        } ], [ "path", {
            d: "M18 15v6"
        } ], [ "path", {
            d: "M21 18h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitBranch = [ [ "line", {
            x1: "6",
            x2: "6",
            y1: "3",
            y2: "15"
        } ], [ "circle", {
            cx: "18",
            cy: "6",
            r: "3"
        } ], [ "circle", {
            cx: "6",
            cy: "18",
            r: "3"
        } ], [ "path", {
            d: "M18 9a9 9 0 0 1-9 9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitCommitHorizontal = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ], [ "line", {
            x1: "3",
            x2: "9",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "15",
            x2: "21",
            y1: "12",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitCommitVertical = [ [ "path", {
            d: "M12 3v6"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ], [ "path", {
            d: "M12 15v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitCompareArrows = [ [ "circle", {
            cx: "5",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M12 6h5a2 2 0 0 1 2 2v7"
        } ], [ "path", {
            d: "m15 9-3-3 3-3"
        } ], [ "circle", {
            cx: "19",
            cy: "18",
            r: "3"
        } ], [ "path", {
            d: "M12 18H7a2 2 0 0 1-2-2V9"
        } ], [ "path", {
            d: "m9 15 3 3-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitCompare = [ [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ], [ "circle", {
            cx: "6",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M13 6h3a2 2 0 0 1 2 2v7"
        } ], [ "path", {
            d: "M11 18H8a2 2 0 0 1-2-2V9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitFork = [ [ "circle", {
            cx: "12",
            cy: "18",
            r: "3"
        } ], [ "circle", {
            cx: "6",
            cy: "6",
            r: "3"
        } ], [ "circle", {
            cx: "18",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M18 9v2c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1V9"
        } ], [ "path", {
            d: "M12 12v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitGraph = [ [ "circle", {
            cx: "5",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M5 9v6"
        } ], [ "circle", {
            cx: "5",
            cy: "18",
            r: "3"
        } ], [ "path", {
            d: "M12 3v18"
        } ], [ "circle", {
            cx: "19",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M16 15.7A9 9 0 0 0 19 9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitMerge = [ [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ], [ "circle", {
            cx: "6",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M6 21V9a9 9 0 0 0 9 9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitPullRequestArrow = [ [ "circle", {
            cx: "5",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M5 9v12"
        } ], [ "circle", {
            cx: "19",
            cy: "18",
            r: "3"
        } ], [ "path", {
            d: "m15 9-3-3 3-3"
        } ], [ "path", {
            d: "M12 6h5a2 2 0 0 1 2 2v7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitPullRequestClosed = [ [ "circle", {
            cx: "6",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M6 9v12"
        } ], [ "path", {
            d: "m21 3-6 6"
        } ], [ "path", {
            d: "m21 9-6-6"
        } ], [ "path", {
            d: "M18 11.5V15"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitPullRequestCreateArrow = [ [ "circle", {
            cx: "5",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M5 9v12"
        } ], [ "path", {
            d: "m15 9-3-3 3-3"
        } ], [ "path", {
            d: "M12 6h5a2 2 0 0 1 2 2v3"
        } ], [ "path", {
            d: "M19 15v6"
        } ], [ "path", {
            d: "M22 18h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitPullRequestCreate = [ [ "circle", {
            cx: "6",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M6 9v12"
        } ], [ "path", {
            d: "M13 6h3a2 2 0 0 1 2 2v3"
        } ], [ "path", {
            d: "M18 15v6"
        } ], [ "path", {
            d: "M21 18h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitPullRequestDraft = [ [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ], [ "circle", {
            cx: "6",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M18 6V5"
        } ], [ "path", {
            d: "M18 11v-1"
        } ], [ "line", {
            x1: "6",
            x2: "6",
            y1: "9",
            y2: "21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GitPullRequest = [ [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ], [ "circle", {
            cx: "6",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M13 6h3a2 2 0 0 1 2 2v7"
        } ], [ "line", {
            x1: "6",
            x2: "6",
            y1: "9",
            y2: "21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Github = [ [ "path", {
            d: "M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"
        } ], [ "path", {
            d: "M9 18c-4.51 2-5-2-7-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Gitlab = [ [ "path", {
            d: "m22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GlassWater = [ [ "path", {
            d: "M5.116 4.104A1 1 0 0 1 6.11 3h11.78a1 1 0 0 1 .994 1.105L17.19 20.21A2 2 0 0 1 15.2 22H8.8a2 2 0 0 1-2-1.79z"
        } ], [ "path", {
            d: "M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Glasses = [ [ "circle", {
            cx: "6",
            cy: "15",
            r: "4"
        } ], [ "circle", {
            cx: "18",
            cy: "15",
            r: "4"
        } ], [ "path", {
            d: "M14 15a2 2 0 0 0-2-2 2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M2.5 13 5 7c.7-1.3 1.4-2 3-2"
        } ], [ "path", {
            d: "M21.5 13 19 7c-.7-1.3-1.5-2-3-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GlobeLock = [ [ "path", {
            d: "M15.686 15A14.5 14.5 0 0 1 12 22a14.5 14.5 0 0 1 0-20 10 10 0 1 0 9.542 13"
        } ], [ "path", {
            d: "M2 12h8.5"
        } ], [ "path", {
            d: "M20 6V4a2 2 0 1 0-4 0v2"
        } ], [ "rect", {
            width: "8",
            height: "5",
            x: "14",
            y: "6",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Globe = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"
        } ], [ "path", {
            d: "M2 12h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Goal = [ [ "path", {
            d: "M12 13V2l8 4-8 4"
        } ], [ "path", {
            d: "M20.561 10.222a9 9 0 1 1-12.55-5.29"
        } ], [ "path", {
            d: "M8.002 9.997a5 5 0 1 0 8.9 2.02"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GraduationCap = [ [ "path", {
            d: "M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z"
        } ], [ "path", {
            d: "M22 10v6"
        } ], [ "path", {
            d: "M6 12.5V16a6 3 0 0 0 12 0v-3.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Gpu = [ [ "path", {
            d: "M2 21V3"
        } ], [ "path", {
            d: "M2 5h18a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2.26"
        } ], [ "path", {
            d: "M7 17v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-3"
        } ], [ "circle", {
            cx: "16",
            cy: "11",
            r: "2"
        } ], [ "circle", {
            cx: "8",
            cy: "11",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Grape = [ [ "path", {
            d: "M22 5V2l-5.89 5.89"
        } ], [ "circle", {
            cx: "16.6",
            cy: "15.89",
            r: "3"
        } ], [ "circle", {
            cx: "8.11",
            cy: "7.4",
            r: "3"
        } ], [ "circle", {
            cx: "12.35",
            cy: "11.65",
            r: "3"
        } ], [ "circle", {
            cx: "13.91",
            cy: "5.85",
            r: "3"
        } ], [ "circle", {
            cx: "18.15",
            cy: "10.09",
            r: "3"
        } ], [ "circle", {
            cx: "6.56",
            cy: "13.2",
            r: "3"
        } ], [ "circle", {
            cx: "10.8",
            cy: "17.44",
            r: "3"
        } ], [ "circle", {
            cx: "5",
            cy: "19",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Grid2x2Check = [ [ "path", {
            d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3"
        } ], [ "path", {
            d: "m16 19 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Grid2x2Plus = [ [ "path", {
            d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3"
        } ], [ "path", {
            d: "M16 19h6"
        } ], [ "path", {
            d: "M19 22v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Grid2x2X = [ [ "path", {
            d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3"
        } ], [ "path", {
            d: "m16 16 5 5"
        } ], [ "path", {
            d: "m16 21 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Grid2x2 = [ [ "path", {
            d: "M12 3v18"
        } ], [ "path", {
            d: "M3 12h18"
        } ], [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Grid3x2 = [ [ "path", {
            d: "M15 3v18"
        } ], [ "path", {
            d: "M3 12h18"
        } ], [ "path", {
            d: "M9 3v18"
        } ], [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Grid3x3 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 9h18"
        } ], [ "path", {
            d: "M3 15h18"
        } ], [ "path", {
            d: "M9 3v18"
        } ], [ "path", {
            d: "M15 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GripHorizontal = [ [ "circle", {
            cx: "12",
            cy: "9",
            r: "1"
        } ], [ "circle", {
            cx: "19",
            cy: "9",
            r: "1"
        } ], [ "circle", {
            cx: "5",
            cy: "9",
            r: "1"
        } ], [ "circle", {
            cx: "12",
            cy: "15",
            r: "1"
        } ], [ "circle", {
            cx: "19",
            cy: "15",
            r: "1"
        } ], [ "circle", {
            cx: "5",
            cy: "15",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const GripVertical = [ [ "circle", {
            cx: "9",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "9",
            cy: "5",
            r: "1"
        } ], [ "circle", {
            cx: "9",
            cy: "19",
            r: "1"
        } ], [ "circle", {
            cx: "15",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "15",
            cy: "5",
            r: "1"
        } ], [ "circle", {
            cx: "15",
            cy: "19",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Grip = [ [ "circle", {
            cx: "12",
            cy: "5",
            r: "1"
        } ], [ "circle", {
            cx: "19",
            cy: "5",
            r: "1"
        } ], [ "circle", {
            cx: "5",
            cy: "5",
            r: "1"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "19",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "5",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "12",
            cy: "19",
            r: "1"
        } ], [ "circle", {
            cx: "19",
            cy: "19",
            r: "1"
        } ], [ "circle", {
            cx: "5",
            cy: "19",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Group = [ [ "path", {
            d: "M3 7V5c0-1.1.9-2 2-2h2"
        } ], [ "path", {
            d: "M17 3h2c1.1 0 2 .9 2 2v2"
        } ], [ "path", {
            d: "M21 17v2c0 1.1-.9 2-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5c-1.1 0-2-.9-2-2v-2"
        } ], [ "rect", {
            width: "7",
            height: "5",
            x: "7",
            y: "7",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "5",
            x: "10",
            y: "12",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Guitar = [ [ "path", {
            d: "m11.9 12.1 4.514-4.514"
        } ], [ "path", {
            d: "M20.1 2.3a1 1 0 0 0-1.4 0l-1.114 1.114A2 2 0 0 0 17 4.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 17.828 7h1.344a2 2 0 0 0 1.414-.586L21.7 5.3a1 1 0 0 0 0-1.4z"
        } ], [ "path", {
            d: "m6 16 2 2"
        } ], [ "path", {
            d: "M8.23 9.85A3 3 0 0 1 11 8a5 5 0 0 1 5 5 3 3 0 0 1-1.85 2.77l-.92.38A2 2 0 0 0 12 18a4 4 0 0 1-4 4 6 6 0 0 1-6-6 4 4 0 0 1 4-4 2 2 0 0 0 1.85-1.23z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ham = [ [ "path", {
            d: "M13.144 21.144A7.274 10.445 45 1 0 2.856 10.856"
        } ], [ "path", {
            d: "M13.144 21.144A7.274 4.365 45 0 0 2.856 10.856a7.274 4.365 45 0 0 10.288 10.288"
        } ], [ "path", {
            d: "M16.565 10.435 18.6 8.4a2.501 2.501 0 1 0 1.65-4.65 2.5 2.5 0 1 0-4.66 1.66l-2.024 2.025"
        } ], [ "path", {
            d: "m8.5 16.5-1-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hamburger = [ [ "path", {
            d: "M12 16H4a2 2 0 1 1 0-4h16a2 2 0 1 1 0 4h-4.25"
        } ], [ "path", {
            d: "M5 12a2 2 0 0 1-2-2 9 7 0 0 1 18 0 2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M5 16a2 2 0 0 0-2 2 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 2 2 0 0 0-2-2q0 0 0 0"
        } ], [ "path", {
            d: "m6.67 12 6.13 4.6a2 2 0 0 0 2.8-.4l3.15-4.2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hammer = [ [ "path", {
            d: "m15 12-9.373 9.373a1 1 0 0 1-3.001-3L12 9"
        } ], [ "path", {
            d: "m18 15 4-4"
        } ], [ "path", {
            d: "m21.5 11.5-1.914-1.914A2 2 0 0 1 19 8.172v-.344a2 2 0 0 0-.586-1.414l-1.657-1.657A6 6 0 0 0 12.516 3H9l1.243 1.243A6 6 0 0 1 12 8.485V10l2 2h1.172a2 2 0 0 1 1.414.586L18.5 14.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HandCoins = [ [ "path", {
            d: "M11 15h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 17"
        } ], [ "path", {
            d: "m7 21 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9"
        } ], [ "path", {
            d: "m2 16 6 6"
        } ], [ "circle", {
            cx: "16",
            cy: "9",
            r: "2.9"
        } ], [ "circle", {
            cx: "6",
            cy: "5",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HandFist = [ [ "path", {
            d: "M12.035 17.012a3 3 0 0 0-3-3l-.311-.002a.72.72 0 0 1-.505-1.229l1.195-1.195A2 2 0 0 1 10.828 11H12a2 2 0 0 0 0-4H9.243a3 3 0 0 0-2.122.879l-2.707 2.707A4.83 4.83 0 0 0 3 14a8 8 0 0 0 8 8h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v2a2 2 0 1 0 4 0"
        } ], [ "path", {
            d: "M13.888 9.662A2 2 0 0 0 17 8V5A2 2 0 1 0 13 5"
        } ], [ "path", {
            d: "M9 5A2 2 0 1 0 5 5V10"
        } ], [ "path", {
            d: "M9 7V4A2 2 0 1 1 13 4V7.268"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HandHeart = [ [ "path", {
            d: "M11 14h2a2 2 0 0 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 16"
        } ], [ "path", {
            d: "m14.45 13.39 5.05-4.694C20.196 8 21 6.85 21 5.75a2.75 2.75 0 0 0-4.797-1.837.276.276 0 0 1-.406 0A2.75 2.75 0 0 0 11 5.75c0 1.2.802 2.248 1.5 2.946L16 11.95"
        } ], [ "path", {
            d: "m2 15 6 6"
        } ], [ "path", {
            d: "m7 20 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a1 1 0 0 0-2.75-2.91"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HandGrab = [ [ "path", {
            d: "M18 11.5V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4"
        } ], [ "path", {
            d: "M14 10V8a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2"
        } ], [ "path", {
            d: "M10 9.9V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v5"
        } ], [ "path", {
            d: "M6 14a2 2 0 0 0-2-2a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-4a8 8 0 0 1-8-8 2 2 0 1 1 4 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HandHelping = [ [ "path", {
            d: "M11 12h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 14"
        } ], [ "path", {
            d: "m7 18 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9"
        } ], [ "path", {
            d: "m2 13 6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HandMetal = [ [ "path", {
            d: "M18 12.5V10a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4"
        } ], [ "path", {
            d: "M14 11V9a2 2 0 1 0-4 0v2"
        } ], [ "path", {
            d: "M10 10.5V5a2 2 0 1 0-4 0v9"
        } ], [ "path", {
            d: "m7 15-1.76-1.76a2 2 0 0 0-2.83 2.82l3.6 3.6C7.5 21.14 9.2 22 12 22h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HandPlatter = [ [ "path", {
            d: "M12 3V2"
        } ], [ "path", {
            d: "m15.4 17.4 3.2-2.8a2 2 0 1 1 2.8 2.9l-3.6 3.3c-.7.8-1.7 1.2-2.8 1.2h-4c-1.1 0-2.1-.4-2.8-1.2l-1.302-1.464A1 1 0 0 0 6.151 19H5"
        } ], [ "path", {
            d: "M2 14h12a2 2 0 0 1 0 4h-2"
        } ], [ "path", {
            d: "M4 10h16"
        } ], [ "path", {
            d: "M5 10a7 7 0 0 1 14 0"
        } ], [ "path", {
            d: "M5 14v6a1 1 0 0 1-1 1H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hand = [ [ "path", {
            d: "M18 11V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M14 10V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2"
        } ], [ "path", {
            d: "M10 10.5V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2v8"
        } ], [ "path", {
            d: "M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Handshake = [ [ "path", {
            d: "m11 17 2 2a1 1 0 1 0 3-3"
        } ], [ "path", {
            d: "m14 14 2.5 2.5a1 1 0 1 0 3-3l-3.88-3.88a3 3 0 0 0-4.24 0l-.88.88a1 1 0 1 1-3-3l2.81-2.81a5.79 5.79 0 0 1 7.06-.87l.47.28a2 2 0 0 0 1.42.25L21 4"
        } ], [ "path", {
            d: "m21 3 1 11h-2"
        } ], [ "path", {
            d: "M3 3 2 14l6.5 6.5a1 1 0 1 0 3-3"
        } ], [ "path", {
            d: "M3 4h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Handbag = [ [ "path", {
            d: "M2.048 18.566A2 2 0 0 0 4 21h16a2 2 0 0 0 1.952-2.434l-2-9A2 2 0 0 0 18 8H6a2 2 0 0 0-1.952 1.566z"
        } ], [ "path", {
            d: "M8 11V6a4 4 0 0 1 8 0v5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HardDriveDownload = [ [ "path", {
            d: "M12 2v8"
        } ], [ "path", {
            d: "m16 6-4 4-4-4"
        } ], [ "rect", {
            width: "20",
            height: "8",
            x: "2",
            y: "14",
            rx: "2"
        } ], [ "path", {
            d: "M6 18h.01"
        } ], [ "path", {
            d: "M10 18h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HardDriveUpload = [ [ "path", {
            d: "m16 6-4-4-4 4"
        } ], [ "path", {
            d: "M12 2v8"
        } ], [ "rect", {
            width: "20",
            height: "8",
            x: "2",
            y: "14",
            rx: "2"
        } ], [ "path", {
            d: "M6 18h.01"
        } ], [ "path", {
            d: "M10 18h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HardDrive = [ [ "line", {
            x1: "22",
            x2: "2",
            y1: "12",
            y2: "12"
        } ], [ "path", {
            d: "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"
        } ], [ "line", {
            x1: "6",
            x2: "6.01",
            y1: "16",
            y2: "16"
        } ], [ "line", {
            x1: "10",
            x2: "10.01",
            y1: "16",
            y2: "16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HardHat = [ [ "path", {
            d: "M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5"
        } ], [ "path", {
            d: "M14 6a6 6 0 0 1 6 6v3"
        } ], [ "path", {
            d: "M4 15v-3a6 6 0 0 1 6-6"
        } ], [ "rect", {
            x: "2",
            y: "15",
            width: "20",
            height: "4",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hash = [ [ "line", {
            x1: "4",
            x2: "20",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "4",
            x2: "20",
            y1: "15",
            y2: "15"
        } ], [ "line", {
            x1: "10",
            x2: "8",
            y1: "3",
            y2: "21"
        } ], [ "line", {
            x1: "16",
            x2: "14",
            y1: "3",
            y2: "21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HatGlasses = [ [ "path", {
            d: "M14 18a2 2 0 0 0-4 0"
        } ], [ "path", {
            d: "m19 11-2.11-6.657a2 2 0 0 0-2.752-1.148l-1.276.61A2 2 0 0 1 12 4H8.5a2 2 0 0 0-1.925 1.456L5 11"
        } ], [ "path", {
            d: "M2 11h20"
        } ], [ "circle", {
            cx: "17",
            cy: "18",
            r: "3"
        } ], [ "circle", {
            cx: "7",
            cy: "18",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Haze = [ [ "path", {
            d: "m5.2 6.2 1.4 1.4"
        } ], [ "path", {
            d: "M2 13h2"
        } ], [ "path", {
            d: "M20 13h2"
        } ], [ "path", {
            d: "m17.4 7.6 1.4-1.4"
        } ], [ "path", {
            d: "M22 17H2"
        } ], [ "path", {
            d: "M22 21H2"
        } ], [ "path", {
            d: "M16 13a4 4 0 0 0-8 0"
        } ], [ "path", {
            d: "M12 5V2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HdmiPort = [ [ "path", {
            d: "M22 9a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h1l2 2h12l2-2h1a1 1 0 0 0 1-1Z"
        } ], [ "path", {
            d: "M7.5 12h9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heading1 = [ [ "path", {
            d: "M4 12h8"
        } ], [ "path", {
            d: "M4 18V6"
        } ], [ "path", {
            d: "M12 18V6"
        } ], [ "path", {
            d: "m17 12 3-2v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heading2 = [ [ "path", {
            d: "M4 12h8"
        } ], [ "path", {
            d: "M4 18V6"
        } ], [ "path", {
            d: "M12 18V6"
        } ], [ "path", {
            d: "M21 18h-4c0-4 4-3 4-6 0-1.5-2-2.5-4-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heading3 = [ [ "path", {
            d: "M4 12h8"
        } ], [ "path", {
            d: "M4 18V6"
        } ], [ "path", {
            d: "M12 18V6"
        } ], [ "path", {
            d: "M17.5 10.5c1.7-1 3.5 0 3.5 1.5a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M17 17.5c2 1.5 4 .3 4-1.5a2 2 0 0 0-2-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heading4 = [ [ "path", {
            d: "M12 18V6"
        } ], [ "path", {
            d: "M17 10v3a1 1 0 0 0 1 1h3"
        } ], [ "path", {
            d: "M21 10v8"
        } ], [ "path", {
            d: "M4 12h8"
        } ], [ "path", {
            d: "M4 18V6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heading5 = [ [ "path", {
            d: "M4 12h8"
        } ], [ "path", {
            d: "M4 18V6"
        } ], [ "path", {
            d: "M12 18V6"
        } ], [ "path", {
            d: "M17 13v-3h4"
        } ], [ "path", {
            d: "M17 17.7c.4.2.8.3 1.3.3 1.5 0 2.7-1.1 2.7-2.5S19.8 13 18.3 13H17"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heading6 = [ [ "path", {
            d: "M4 12h8"
        } ], [ "path", {
            d: "M4 18V6"
        } ], [ "path", {
            d: "M12 18V6"
        } ], [ "circle", {
            cx: "19",
            cy: "16",
            r: "2"
        } ], [ "path", {
            d: "M20 10c-2 2-3 3.5-3 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heading = [ [ "path", {
            d: "M6 12h12"
        } ], [ "path", {
            d: "M6 20V4"
        } ], [ "path", {
            d: "M18 20V4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HeadphoneOff = [ [ "path", {
            d: "M21 14h-1.343"
        } ], [ "path", {
            d: "M9.128 3.47A9 9 0 0 1 21 12v3.343"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M20.414 20.414A2 2 0 0 1 19 21h-1a2 2 0 0 1-2-2v-3"
        } ], [ "path", {
            d: "M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 2.636-6.364"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Headphones = [ [ "path", {
            d: "M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Headset = [ [ "path", {
            d: "M3 11h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-5Zm0 0a9 9 0 1 1 18 0m0 0v5a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3Z"
        } ], [ "path", {
            d: "M21 16v2a4 4 0 0 1-4 4h-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HeartCrack = [ [ "path", {
            d: "M12.409 5.824c-.702.792-1.15 1.496-1.415 2.166l2.153 2.156a.5.5 0 0 1 0 .707l-2.293 2.293a.5.5 0 0 0 0 .707L12 15"
        } ], [ "path", {
            d: "M13.508 20.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 9.591-3.677.6.6 0 0 0 .818.001A5.5 5.5 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HeartHandshake = [ [ "path", {
            d: "M19.414 14.414C21 12.828 22 11.5 22 9.5a5.5 5.5 0 0 0-9.591-3.676.6.6 0 0 1-.818.001A5.5 5.5 0 0 0 2 9.5c0 2.3 1.5 4 3 5.5l5.535 5.362a2 2 0 0 0 2.879.052 2.12 2.12 0 0 0-.004-3 2.124 2.124 0 1 0 3-3 2.124 2.124 0 0 0 3.004 0 2 2 0 0 0 0-2.828l-1.881-1.882a2.41 2.41 0 0 0-3.409 0l-1.71 1.71a2 2 0 0 1-2.828 0 2 2 0 0 1 0-2.828l2.823-2.762"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HeartMinus = [ [ "path", {
            d: "m14.876 18.99-1.368 1.323a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5a5.2 5.2 0 0 1-.244 1.572"
        } ], [ "path", {
            d: "M15 15h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HeartOff = [ [ "path", {
            d: "M10.5 4.893a5.5 5.5 0 0 1 1.091.931.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 1.872-1.002 3.356-2.187 4.655"
        } ], [ "path", {
            d: "m16.967 16.967-3.459 3.346a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 2.747-4.761"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HeartPlus = [ [ "path", {
            d: "m14.479 19.374-.971.939a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5a5.2 5.2 0 0 1-.219 1.49"
        } ], [ "path", {
            d: "M15 15h6"
        } ], [ "path", {
            d: "M18 12v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HeartPulse = [ [ "path", {
            d: "M2 9.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5l-5.492 5.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5"
        } ], [ "path", {
            d: "M3.22 13H9.5l.5-1 2 4.5 2-7 1.5 3.5h5.27"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heart = [ [ "path", {
            d: "M2 9.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5l-5.492 5.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Heater = [ [ "path", {
            d: "M11 8c2-3-2-3 0-6"
        } ], [ "path", {
            d: "M15.5 8c2-3-2-3 0-6"
        } ], [ "path", {
            d: "M6 10h.01"
        } ], [ "path", {
            d: "M6 14h.01"
        } ], [ "path", {
            d: "M10 16v-4"
        } ], [ "path", {
            d: "M14 16v-4"
        } ], [ "path", {
            d: "M18 16v-4"
        } ], [ "path", {
            d: "M20 6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3"
        } ], [ "path", {
            d: "M5 20v2"
        } ], [ "path", {
            d: "M19 20v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hexagon = [ [ "path", {
            d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Highlighter = [ [ "path", {
            d: "m9 11-6 6v3h9l3-3"
        } ], [ "path", {
            d: "m22 12-4.6 4.6a2 2 0 0 1-2.8 0l-5.2-5.2a2 2 0 0 1 0-2.8L14 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const History = [ [ "path", {
            d: "M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"
        } ], [ "path", {
            d: "M3 3v5h5"
        } ], [ "path", {
            d: "M12 7v5l4 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HopOff = [ [ "path", {
            d: "M10.82 16.12c1.69.6 3.91.79 5.18.85.28.01.53-.09.7-.27"
        } ], [ "path", {
            d: "M11.14 20.57c.52.24 2.44 1.12 4.08 1.37.46.06.86-.25.9-.71.12-1.52-.3-3.43-.5-4.28"
        } ], [ "path", {
            d: "M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .7-.26"
        } ], [ "path", {
            d: "M17.99 5.52a20.83 20.83 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-1.17.1-2.5.02-3.9-.25"
        } ], [ "path", {
            d: "M20.57 11.14c.24.52 1.12 2.44 1.37 4.08.04.3-.08.59-.31.75"
        } ], [ "path", {
            d: "M4.93 4.93a10 10 0 0 0-.67 13.4c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.85.85 0 0 0 .48-.24"
        } ], [ "path", {
            d: "M5.52 17.99c1.05.95 2.91 2.42 4.5 3.15a.8.8 0 0 0 1.13-.68c.2-2.34-.33-5.3-1.57-8.28"
        } ], [ "path", {
            d: "M8.35 2.68a10 10 0 0 1 9.98 1.58c.43.35.4.96-.12 1.17-1.5.6-4.3.98-6.07 1.05"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hop = [ [ "path", {
            d: "M10.82 16.12c1.69.6 3.91.79 5.18.85.55.03 1-.42.97-.97-.06-1.27-.26-3.5-.85-5.18"
        } ], [ "path", {
            d: "M11.5 6.5c1.64 0 5-.38 6.71-1.07.52-.2.55-.82.12-1.17A10 10 0 0 0 4.26 18.33c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.88.88 0 0 0 .73-.74c.3-2.14-.15-3.5-.61-4.88"
        } ], [ "path", {
            d: "M15.62 16.95c.2.85.62 2.76.5 4.28a.77.77 0 0 1-.9.7 16.64 16.64 0 0 1-4.08-1.36"
        } ], [ "path", {
            d: "M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .96-.96 17.68 17.68 0 0 0-.9-4.87"
        } ], [ "path", {
            d: "M16.94 15.62c.86.2 2.77.62 4.29.5a.77.77 0 0 0 .7-.9 16.64 16.64 0 0 0-1.36-4.08"
        } ], [ "path", {
            d: "M17.99 5.52a20.82 20.82 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-2.33.2-5.3-.32-8.27-1.57"
        } ], [ "path", {
            d: "M4.93 4.93 3 3a.7.7 0 0 1 0-1"
        } ], [ "path", {
            d: "M9.58 12.18c1.24 2.98 1.77 5.95 1.57 8.28a.8.8 0 0 1-1.13.68 20.82 20.82 0 0 1-4.5-3.15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hospital = [ [ "path", {
            d: "M12 7v4"
        } ], [ "path", {
            d: "M14 21v-3a2 2 0 0 0-4 0v3"
        } ], [ "path", {
            d: "M14 9h-4"
        } ], [ "path", {
            d: "M18 11h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M18 21V5a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hotel = [ [ "path", {
            d: "M10 22v-6.57"
        } ], [ "path", {
            d: "M12 11h.01"
        } ], [ "path", {
            d: "M12 7h.01"
        } ], [ "path", {
            d: "M14 15.43V22"
        } ], [ "path", {
            d: "M15 16a5 5 0 0 0-6 0"
        } ], [ "path", {
            d: "M16 11h.01"
        } ], [ "path", {
            d: "M16 7h.01"
        } ], [ "path", {
            d: "M8 11h.01"
        } ], [ "path", {
            d: "M8 7h.01"
        } ], [ "rect", {
            x: "4",
            y: "2",
            width: "16",
            height: "20",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Hourglass = [ [ "path", {
            d: "M5 22h14"
        } ], [ "path", {
            d: "M5 2h14"
        } ], [ "path", {
            d: "M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22"
        } ], [ "path", {
            d: "M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HouseHeart = [ [ "path", {
            d: "M8.62 13.8A2.25 2.25 0 1 1 12 10.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z"
        } ], [ "path", {
            d: "M3 10a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HousePlug = [ [ "path", {
            d: "M10 12V8.964"
        } ], [ "path", {
            d: "M14 12V8.964"
        } ], [ "path", {
            d: "M15 12a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2a1 1 0 0 1 1-1z"
        } ], [ "path", {
            d: "M8.5 21H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2h-5a2 2 0 0 1-2-2v-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HousePlus = [ [ "path", {
            d: "M12.35 21H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 .71-1.53l7-6a2 2 0 0 1 2.58 0l7 6A2 2 0 0 1 21 10v2.35"
        } ], [ "path", {
            d: "M14.8 12.4A1 1 0 0 0 14 12h-4a1 1 0 0 0-1 1v8"
        } ], [ "path", {
            d: "M15 18h6"
        } ], [ "path", {
            d: "M18 15v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const House = [ [ "path", {
            d: "M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"
        } ], [ "path", {
            d: "M3 10a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const HouseWifi = [ [ "path", {
            d: "M9.5 13.866a4 4 0 0 1 5 .01"
        } ], [ "path", {
            d: "M12 17h.01"
        } ], [ "path", {
            d: "M3 10a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
        } ], [ "path", {
            d: "M7 10.754a8 8 0 0 1 10 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const IceCreamBowl = [ [ "path", {
            d: "M12 17c5 0 8-2.69 8-6H4c0 3.31 3 6 8 6m-4 4h8m-4-3v3M5.14 11a3.5 3.5 0 1 1 6.71 0"
        } ], [ "path", {
            d: "M12.14 11a3.5 3.5 0 1 1 6.71 0"
        } ], [ "path", {
            d: "M15.5 6.5a3.5 3.5 0 1 0-7 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const IceCreamCone = [ [ "path", {
            d: "m7 11 4.08 10.35a1 1 0 0 0 1.84 0L17 11"
        } ], [ "path", {
            d: "M17 7A5 5 0 0 0 7 7"
        } ], [ "path", {
            d: "M17 7a2 2 0 0 1 0 4H7a2 2 0 0 1 0-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const IdCardLanyard = [ [ "path", {
            d: "M13.5 8h-3"
        } ], [ "path", {
            d: "m15 2-1 2h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h3"
        } ], [ "path", {
            d: "M16.899 22A5 5 0 0 0 7.1 22"
        } ], [ "path", {
            d: "m9 2 3 6"
        } ], [ "circle", {
            cx: "12",
            cy: "15",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const IdCard = [ [ "path", {
            d: "M16 10h2"
        } ], [ "path", {
            d: "M16 14h2"
        } ], [ "path", {
            d: "M6.17 15a3 3 0 0 1 5.66 0"
        } ], [ "circle", {
            cx: "9",
            cy: "11",
            r: "2"
        } ], [ "rect", {
            x: "2",
            y: "5",
            width: "20",
            height: "14",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ImageDown = [ [ "path", {
            d: "M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21"
        } ], [ "path", {
            d: "m14 19 3 3v-5.5"
        } ], [ "path", {
            d: "m17 22 3-3"
        } ], [ "circle", {
            cx: "9",
            cy: "9",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ImageOff = [ [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ], [ "path", {
            d: "M10.41 10.41a2 2 0 1 1-2.83-2.83"
        } ], [ "line", {
            x1: "13.5",
            x2: "6",
            y1: "13.5",
            y2: "21"
        } ], [ "line", {
            x1: "18",
            x2: "21",
            y1: "12",
            y2: "15"
        } ], [ "path", {
            d: "M3.59 3.59A1.99 1.99 0 0 0 3 5v14a2 2 0 0 0 2 2h14c.55 0 1.052-.22 1.41-.59"
        } ], [ "path", {
            d: "M21 15V5a2 2 0 0 0-2-2H9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ImageMinus = [ [ "path", {
            d: "M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7"
        } ], [ "line", {
            x1: "16",
            x2: "22",
            y1: "5",
            y2: "5"
        } ], [ "circle", {
            cx: "9",
            cy: "9",
            r: "2"
        } ], [ "path", {
            d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ImagePlay = [ [ "path", {
            d: "M15 15.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997a1 1 0 0 1-1.517-.86z"
        } ], [ "path", {
            d: "M21 12.17V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6"
        } ], [ "path", {
            d: "m6 21 5-5"
        } ], [ "circle", {
            cx: "9",
            cy: "9",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ImagePlus = [ [ "path", {
            d: "M16 5h6"
        } ], [ "path", {
            d: "M19 2v6"
        } ], [ "path", {
            d: "M21 11.5V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7.5"
        } ], [ "path", {
            d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"
        } ], [ "circle", {
            cx: "9",
            cy: "9",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ImageUp = [ [ "path", {
            d: "M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21"
        } ], [ "path", {
            d: "m14 19.5 3-3 3 3"
        } ], [ "path", {
            d: "M17 22v-5.5"
        } ], [ "circle", {
            cx: "9",
            cy: "9",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ImageUpscale = [ [ "path", {
            d: "M16 3h5v5"
        } ], [ "path", {
            d: "M17 21h2a2 2 0 0 0 2-2"
        } ], [ "path", {
            d: "M21 12v3"
        } ], [ "path", {
            d: "m21 3-5 5"
        } ], [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2"
        } ], [ "path", {
            d: "m5 21 4.144-4.144a1.21 1.21 0 0 1 1.712 0L13 19"
        } ], [ "path", {
            d: "M9 3h3"
        } ], [ "rect", {
            x: "3",
            y: "11",
            width: "10",
            height: "10",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const image_Image = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "circle", {
            cx: "9",
            cy: "9",
            r: "2"
        } ], [ "path", {
            d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Images = [ [ "path", {
            d: "m22 11-1.296-1.296a2.4 2.4 0 0 0-3.408 0L11 16"
        } ], [ "path", {
            d: "M4 8a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2"
        } ], [ "circle", {
            cx: "13",
            cy: "7",
            r: "1",
            fill: "currentColor"
        } ], [ "rect", {
            x: "8",
            y: "2",
            width: "14",
            height: "14",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Import = [ [ "path", {
            d: "M12 3v12"
        } ], [ "path", {
            d: "m8 11 4 4 4-4"
        } ], [ "path", {
            d: "M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Inbox = [ [ "polyline", {
            points: "22 12 16 12 14 15 10 15 8 12 2 12"
        } ], [ "path", {
            d: "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const IndianRupee = [ [ "path", {
            d: "M6 3h12"
        } ], [ "path", {
            d: "M6 8h12"
        } ], [ "path", {
            d: "m6 13 8.5 8"
        } ], [ "path", {
            d: "M6 13h3"
        } ], [ "path", {
            d: "M9 13c6.667 0 6.667-10 0-10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const infinity_Infinity = [ [ "path", {
            d: "M6 16c5 0 7-8 12-8a4 4 0 0 1 0 8c-5 0-7-8-12-8a4 4 0 1 0 0 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Info = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M12 16v-4"
        } ], [ "path", {
            d: "M12 8h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const InspectionPanel = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M7 7h.01"
        } ], [ "path", {
            d: "M17 7h.01"
        } ], [ "path", {
            d: "M7 17h.01"
        } ], [ "path", {
            d: "M17 17h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Instagram = [ [ "rect", {
            width: "20",
            height: "20",
            x: "2",
            y: "2",
            rx: "5",
            ry: "5"
        } ], [ "path", {
            d: "M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"
        } ], [ "line", {
            x1: "17.5",
            x2: "17.51",
            y1: "6.5",
            y2: "6.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Italic = [ [ "line", {
            x1: "19",
            x2: "10",
            y1: "4",
            y2: "4"
        } ], [ "line", {
            x1: "14",
            x2: "5",
            y1: "20",
            y2: "20"
        } ], [ "line", {
            x1: "15",
            x2: "9",
            y1: "4",
            y2: "20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const IterationCcw = [ [ "path", {
            d: "m16 14 4 4-4 4"
        } ], [ "path", {
            d: "M20 10a8 8 0 1 0-8 8h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const IterationCw = [ [ "path", {
            d: "M4 10a8 8 0 1 1 8 8H4"
        } ], [ "path", {
            d: "m8 22-4-4 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const JapaneseYen = [ [ "path", {
            d: "M12 9.5V21m0-11.5L6 3m6 6.5L18 3"
        } ], [ "path", {
            d: "M6 15h12"
        } ], [ "path", {
            d: "M6 11h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Joystick = [ [ "path", {
            d: "M21 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-2Z"
        } ], [ "path", {
            d: "M6 15v-2"
        } ], [ "path", {
            d: "M12 15V9"
        } ], [ "circle", {
            cx: "12",
            cy: "6",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Kanban = [ [ "path", {
            d: "M5 3v14"
        } ], [ "path", {
            d: "M12 3v8"
        } ], [ "path", {
            d: "M19 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Kayak = [ [ "path", {
            d: "M18 17a1 1 0 0 0-1 1v1a2 2 0 1 0 2-2z"
        } ], [ "path", {
            d: "M20.97 3.61a.45.45 0 0 0-.58-.58C10.2 6.6 6.6 10.2 3.03 20.39a.45.45 0 0 0 .58.58C13.8 17.4 17.4 13.8 20.97 3.61"
        } ], [ "path", {
            d: "m6.707 6.707 10.586 10.586"
        } ], [ "path", {
            d: "M7 5a2 2 0 1 0-2 2h1a1 1 0 0 0 1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const KeyRound = [ [ "path", {
            d: "M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z"
        } ], [ "circle", {
            cx: "16.5",
            cy: "7.5",
            r: ".5",
            fill: "currentColor"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const KeySquare = [ [ "path", {
            d: "M12.4 2.7a2.5 2.5 0 0 1 3.4 0l5.5 5.5a2.5 2.5 0 0 1 0 3.4l-3.7 3.7a2.5 2.5 0 0 1-3.4 0L8.7 9.8a2.5 2.5 0 0 1 0-3.4z"
        } ], [ "path", {
            d: "m14 7 3 3"
        } ], [ "path", {
            d: "m9.4 10.6-6.814 6.814A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Key = [ [ "path", {
            d: "m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4"
        } ], [ "path", {
            d: "m21 2-9.6 9.6"
        } ], [ "circle", {
            cx: "7.5",
            cy: "15.5",
            r: "5.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const KeyboardMusic = [ [ "rect", {
            width: "20",
            height: "16",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M6 8h4"
        } ], [ "path", {
            d: "M14 8h.01"
        } ], [ "path", {
            d: "M18 8h.01"
        } ], [ "path", {
            d: "M2 12h20"
        } ], [ "path", {
            d: "M6 12v4"
        } ], [ "path", {
            d: "M10 12v4"
        } ], [ "path", {
            d: "M14 12v4"
        } ], [ "path", {
            d: "M18 12v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const KeyboardOff = [ [ "path", {
            d: "M 20 4 A2 2 0 0 1 22 6"
        } ], [ "path", {
            d: "M 22 6 L 22 16.41"
        } ], [ "path", {
            d: "M 7 16 L 16 16"
        } ], [ "path", {
            d: "M 9.69 4 L 20 4"
        } ], [ "path", {
            d: "M14 8h.01"
        } ], [ "path", {
            d: "M18 8h.01"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M20 20H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2"
        } ], [ "path", {
            d: "M6 8h.01"
        } ], [ "path", {
            d: "M8 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Keyboard = [ [ "path", {
            d: "M10 8h.01"
        } ], [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M14 8h.01"
        } ], [ "path", {
            d: "M16 12h.01"
        } ], [ "path", {
            d: "M18 8h.01"
        } ], [ "path", {
            d: "M6 8h.01"
        } ], [ "path", {
            d: "M7 16h10"
        } ], [ "path", {
            d: "M8 12h.01"
        } ], [ "rect", {
            width: "20",
            height: "16",
            x: "2",
            y: "4",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LampCeiling = [ [ "path", {
            d: "M12 2v5"
        } ], [ "path", {
            d: "M14.829 15.998a3 3 0 1 1-5.658 0"
        } ], [ "path", {
            d: "M20.92 14.606A1 1 0 0 1 20 16H4a1 1 0 0 1-.92-1.394l3-7A1 1 0 0 1 7 7h10a1 1 0 0 1 .92.606z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LampDesk = [ [ "path", {
            d: "M10.293 2.293a1 1 0 0 1 1.414 0l2.5 2.5 5.994 1.227a1 1 0 0 1 .506 1.687l-7 7a1 1 0 0 1-1.687-.506l-1.227-5.994-2.5-2.5a1 1 0 0 1 0-1.414z"
        } ], [ "path", {
            d: "m14.207 4.793-3.414 3.414"
        } ], [ "path", {
            d: "M3 20a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1z"
        } ], [ "path", {
            d: "m9.086 6.5-4.793 4.793a1 1 0 0 0-.18 1.17L7 18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LampFloor = [ [ "path", {
            d: "M12 10v12"
        } ], [ "path", {
            d: "M17.929 7.629A1 1 0 0 1 17 9H7a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 9 2h6a1 1 0 0 1 .928.629z"
        } ], [ "path", {
            d: "M9 22h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LampWallDown = [ [ "path", {
            d: "M19.929 18.629A1 1 0 0 1 19 20H9a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 11 13h6a1 1 0 0 1 .928.629z"
        } ], [ "path", {
            d: "M6 3a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1z"
        } ], [ "path", {
            d: "M8 6h4a2 2 0 0 1 2 2v5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LampWallUp = [ [ "path", {
            d: "M19.929 9.629A1 1 0 0 1 19 11H9a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 11 4h6a1 1 0 0 1 .928.629z"
        } ], [ "path", {
            d: "M6 15a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H5a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z"
        } ], [ "path", {
            d: "M8 18h4a2 2 0 0 0 2-2v-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Lamp = [ [ "path", {
            d: "M12 12v6"
        } ], [ "path", {
            d: "M4.077 10.615A1 1 0 0 0 5 12h14a1 1 0 0 0 .923-1.385l-3.077-7.384A2 2 0 0 0 15 2H9a2 2 0 0 0-1.846 1.23Z"
        } ], [ "path", {
            d: "M8 20a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LandPlot = [ [ "path", {
            d: "m12 8 6-3-6-3v10"
        } ], [ "path", {
            d: "m8 11.99-5.5 3.14a1 1 0 0 0 0 1.74l8.5 4.86a2 2 0 0 0 2 0l8.5-4.86a1 1 0 0 0 0-1.74L16 12"
        } ], [ "path", {
            d: "m6.49 12.85 11.02 6.3"
        } ], [ "path", {
            d: "M17.51 12.85 6.5 19.15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Landmark = [ [ "path", {
            d: "M10 18v-7"
        } ], [ "path", {
            d: "M11.12 2.198a2 2 0 0 1 1.76.006l7.866 3.847c.476.233.31.949-.22.949H3.474c-.53 0-.695-.716-.22-.949z"
        } ], [ "path", {
            d: "M14 18v-7"
        } ], [ "path", {
            d: "M18 18v-7"
        } ], [ "path", {
            d: "M3 22h18"
        } ], [ "path", {
            d: "M6 18v-7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Languages = [ [ "path", {
            d: "m5 8 6 6"
        } ], [ "path", {
            d: "m4 14 6-6 2-3"
        } ], [ "path", {
            d: "M2 5h12"
        } ], [ "path", {
            d: "M7 2h1"
        } ], [ "path", {
            d: "m22 22-5-10-5 10"
        } ], [ "path", {
            d: "M14 18h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LaptopMinimalCheck = [ [ "path", {
            d: "M2 20h20"
        } ], [ "path", {
            d: "m9 10 2 2 4-4"
        } ], [ "rect", {
            x: "3",
            y: "4",
            width: "18",
            height: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LaptopMinimal = [ [ "rect", {
            width: "18",
            height: "12",
            x: "3",
            y: "4",
            rx: "2",
            ry: "2"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "20",
            y2: "20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Laptop = [ [ "path", {
            d: "M18 5a2 2 0 0 1 2 2v8.526a2 2 0 0 0 .212.897l1.068 2.127a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45l1.068-2.127A2 2 0 0 0 4 15.526V7a2 2 0 0 1 2-2z"
        } ], [ "path", {
            d: "M20.054 15.987H3.946"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LassoSelect = [ [ "path", {
            d: "M7 22a5 5 0 0 1-2-4"
        } ], [ "path", {
            d: "M7 16.93c.96.43 1.96.74 2.99.91"
        } ], [ "path", {
            d: "M3.34 14A6.8 6.8 0 0 1 2 10c0-4.42 4.48-8 10-8s10 3.58 10 8a7.19 7.19 0 0 1-.33 2"
        } ], [ "path", {
            d: "M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"
        } ], [ "path", {
            d: "M14.33 22h-.09a.35.35 0 0 1-.24-.32v-10a.34.34 0 0 1 .33-.34c.08 0 .15.03.21.08l7.34 6a.33.33 0 0 1-.21.59h-4.49l-2.57 3.85a.35.35 0 0 1-.28.14z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Lasso = [ [ "path", {
            d: "M3.704 14.467A10 8 0 0 1 2 10a10 8 0 0 1 20 0 10 8 0 0 1-10 8 10 8 0 0 1-5.181-1.158"
        } ], [ "path", {
            d: "M7 22a5 5 0 0 1-2-3.994"
        } ], [ "circle", {
            cx: "5",
            cy: "16",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Laugh = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M18 13a6 6 0 0 1-6 5 6 6 0 0 1-6-5h12Z"
        } ], [ "line", {
            x1: "9",
            x2: "9.01",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "15",
            x2: "15.01",
            y1: "9",
            y2: "9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Layers2 = [ [ "path", {
            d: "M13 13.74a2 2 0 0 1-2 0L2.5 8.87a1 1 0 0 1 0-1.74L11 2.26a2 2 0 0 1 2 0l8.5 4.87a1 1 0 0 1 0 1.74z"
        } ], [ "path", {
            d: "m20 14.285 1.5.845a1 1 0 0 1 0 1.74L13 21.74a2 2 0 0 1-2 0l-8.5-4.87a1 1 0 0 1 0-1.74l1.5-.845"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Layers = [ [ "path", {
            d: "M12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83z"
        } ], [ "path", {
            d: "M2 12a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 12"
        } ], [ "path", {
            d: "M2 17a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 17"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LayoutDashboard = [ [ "rect", {
            width: "7",
            height: "9",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "5",
            x: "14",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "9",
            x: "14",
            y: "12",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "5",
            x: "3",
            y: "16",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LayoutGrid = [ [ "rect", {
            width: "7",
            height: "7",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "7",
            x: "14",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "7",
            x: "14",
            y: "14",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "7",
            x: "3",
            y: "14",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LayoutList = [ [ "rect", {
            width: "7",
            height: "7",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "7",
            x: "3",
            y: "14",
            rx: "1"
        } ], [ "path", {
            d: "M14 4h7"
        } ], [ "path", {
            d: "M14 9h7"
        } ], [ "path", {
            d: "M14 15h7"
        } ], [ "path", {
            d: "M14 20h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LayoutPanelLeft = [ [ "rect", {
            width: "7",
            height: "18",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "7",
            x: "14",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "7",
            x: "14",
            y: "14",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LayoutPanelTop = [ [ "rect", {
            width: "18",
            height: "7",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "7",
            x: "3",
            y: "14",
            rx: "1"
        } ], [ "rect", {
            width: "7",
            height: "7",
            x: "14",
            y: "14",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LayoutTemplate = [ [ "rect", {
            width: "18",
            height: "7",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "9",
            height: "7",
            x: "3",
            y: "14",
            rx: "1"
        } ], [ "rect", {
            width: "5",
            height: "7",
            x: "16",
            y: "14",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Leaf = [ [ "path", {
            d: "M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z"
        } ], [ "path", {
            d: "M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LeafyGreen = [ [ "path", {
            d: "M2 22c1.25-.987 2.27-1.975 3.9-2.2a5.56 5.56 0 0 1 3.8 1.5 4 4 0 0 0 6.187-2.353 3.5 3.5 0 0 0 3.69-5.116A3.5 3.5 0 0 0 20.95 8 3.5 3.5 0 1 0 16 3.05a3.5 3.5 0 0 0-5.831 1.373 3.5 3.5 0 0 0-5.116 3.69 4 4 0 0 0-2.348 6.155C3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22"
        } ], [ "path", {
            d: "M2 22 17 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Lectern = [ [ "path", {
            d: "M16 12h3a2 2 0 0 0 1.902-1.38l1.056-3.333A1 1 0 0 0 21 6H3a1 1 0 0 0-.958 1.287l1.056 3.334A2 2 0 0 0 5 12h3"
        } ], [ "path", {
            d: "M18 6V3a1 1 0 0 0-1-1h-3"
        } ], [ "rect", {
            width: "8",
            height: "12",
            x: "8",
            y: "10",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LibraryBig = [ [ "rect", {
            width: "8",
            height: "18",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "path", {
            d: "M7 3v18"
        } ], [ "path", {
            d: "M20.4 18.9c.2.5-.1 1.1-.6 1.3l-1.9.7c-.5.2-1.1-.1-1.3-.6L11.1 5.1c-.2-.5.1-1.1.6-1.3l1.9-.7c.5-.2 1.1.1 1.3.6Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Library = [ [ "path", {
            d: "m16 6 4 14"
        } ], [ "path", {
            d: "M12 6v14"
        } ], [ "path", {
            d: "M8 8v12"
        } ], [ "path", {
            d: "M4 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LifeBuoy = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "m4.93 4.93 4.24 4.24"
        } ], [ "path", {
            d: "m14.83 9.17 4.24-4.24"
        } ], [ "path", {
            d: "m14.83 14.83 4.24 4.24"
        } ], [ "path", {
            d: "m9.17 14.83-4.24 4.24"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ligature = [ [ "path", {
            d: "M14 12h2v8"
        } ], [ "path", {
            d: "M14 20h4"
        } ], [ "path", {
            d: "M6 12h4"
        } ], [ "path", {
            d: "M6 20h4"
        } ], [ "path", {
            d: "M8 20V8a4 4 0 0 1 7.464-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LightbulbOff = [ [ "path", {
            d: "M16.8 11.2c.8-.9 1.2-2 1.2-3.2a6 6 0 0 0-9.3-5"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M6.3 6.3a4.67 4.67 0 0 0 1.2 5.2c.7.7 1.3 1.5 1.5 2.5"
        } ], [ "path", {
            d: "M9 18h6"
        } ], [ "path", {
            d: "M10 22h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Lightbulb = [ [ "path", {
            d: "M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5"
        } ], [ "path", {
            d: "M9 18h6"
        } ], [ "path", {
            d: "M10 22h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LineSquiggle = [ [ "path", {
            d: "M7 3.5c5-2 7 2.5 3 4C1.5 10 2 15 5 16c5 2 9-10 14-7s.5 13.5-4 12c-5-2.5.5-11 6-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Link2Off = [ [ "path", {
            d: "M9 17H7A5 5 0 0 1 7 7"
        } ], [ "path", {
            d: "M15 7h2a5 5 0 0 1 4 8"
        } ], [ "line", {
            x1: "8",
            x2: "12",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Link2 = [ [ "path", {
            d: "M9 17H7A5 5 0 0 1 7 7h2"
        } ], [ "path", {
            d: "M15 7h2a5 5 0 1 1 0 10h-2"
        } ], [ "line", {
            x1: "8",
            x2: "16",
            y1: "12",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Link = [ [ "path", {
            d: "M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"
        } ], [ "path", {
            d: "M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Linkedin = [ [ "path", {
            d: "M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"
        } ], [ "rect", {
            width: "4",
            height: "12",
            x: "2",
            y: "9"
        } ], [ "circle", {
            cx: "4",
            cy: "4",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListCheck = [ [ "path", {
            d: "M16 5H3"
        } ], [ "path", {
            d: "M16 12H3"
        } ], [ "path", {
            d: "M11 19H3"
        } ], [ "path", {
            d: "m15 18 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListChecks = [ [ "path", {
            d: "M13 5h8"
        } ], [ "path", {
            d: "M13 12h8"
        } ], [ "path", {
            d: "M13 19h8"
        } ], [ "path", {
            d: "m3 17 2 2 4-4"
        } ], [ "path", {
            d: "m3 7 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListChevronsDownUp = [ [ "path", {
            d: "M3 5h8"
        } ], [ "path", {
            d: "M3 12h8"
        } ], [ "path", {
            d: "M3 19h8"
        } ], [ "path", {
            d: "m15 5 3 3 3-3"
        } ], [ "path", {
            d: "m15 19 3-3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListChevronsUpDown = [ [ "path", {
            d: "M3 5h8"
        } ], [ "path", {
            d: "M3 12h8"
        } ], [ "path", {
            d: "M3 19h8"
        } ], [ "path", {
            d: "m15 8 3-3 3 3"
        } ], [ "path", {
            d: "m15 16 3 3 3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListCollapse = [ [ "path", {
            d: "M10 5h11"
        } ], [ "path", {
            d: "M10 12h11"
        } ], [ "path", {
            d: "M10 19h11"
        } ], [ "path", {
            d: "m3 10 3-3-3-3"
        } ], [ "path", {
            d: "m3 20 3-3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListEnd = [ [ "path", {
            d: "M16 5H3"
        } ], [ "path", {
            d: "M16 12H3"
        } ], [ "path", {
            d: "M9 19H3"
        } ], [ "path", {
            d: "m16 16-3 3 3 3"
        } ], [ "path", {
            d: "M21 5v12a2 2 0 0 1-2 2h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListFilter = [ [ "path", {
            d: "M2 5h20"
        } ], [ "path", {
            d: "M6 12h12"
        } ], [ "path", {
            d: "M9 19h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListFilterPlus = [ [ "path", {
            d: "M12 5H2"
        } ], [ "path", {
            d: "M6 12h12"
        } ], [ "path", {
            d: "M9 19h6"
        } ], [ "path", {
            d: "M16 5h6"
        } ], [ "path", {
            d: "M19 8V2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListIndentDecrease = [ [ "path", {
            d: "M21 5H11"
        } ], [ "path", {
            d: "M21 12H11"
        } ], [ "path", {
            d: "M21 19H11"
        } ], [ "path", {
            d: "m7 8-4 4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListIndentIncrease = [ [ "path", {
            d: "M21 5H11"
        } ], [ "path", {
            d: "M21 12H11"
        } ], [ "path", {
            d: "M21 19H11"
        } ], [ "path", {
            d: "m3 8 4 4-4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListMinus = [ [ "path", {
            d: "M16 5H3"
        } ], [ "path", {
            d: "M11 12H3"
        } ], [ "path", {
            d: "M16 19H3"
        } ], [ "path", {
            d: "M21 12h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListOrdered = [ [ "path", {
            d: "M11 5h10"
        } ], [ "path", {
            d: "M11 12h10"
        } ], [ "path", {
            d: "M11 19h10"
        } ], [ "path", {
            d: "M4 4h1v5"
        } ], [ "path", {
            d: "M4 9h2"
        } ], [ "path", {
            d: "M6.5 20H3.4c0-1 2.6-1.925 2.6-3.5a1.5 1.5 0 0 0-2.6-1.02"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListMusic = [ [ "path", {
            d: "M16 5H3"
        } ], [ "path", {
            d: "M11 12H3"
        } ], [ "path", {
            d: "M11 19H3"
        } ], [ "path", {
            d: "M21 16V5"
        } ], [ "circle", {
            cx: "18",
            cy: "16",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListPlus = [ [ "path", {
            d: "M16 5H3"
        } ], [ "path", {
            d: "M11 12H3"
        } ], [ "path", {
            d: "M16 19H3"
        } ], [ "path", {
            d: "M18 9v6"
        } ], [ "path", {
            d: "M21 12h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListRestart = [ [ "path", {
            d: "M21 5H3"
        } ], [ "path", {
            d: "M7 12H3"
        } ], [ "path", {
            d: "M7 19H3"
        } ], [ "path", {
            d: "M12 18a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L11 14"
        } ], [ "path", {
            d: "M11 10v4h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListStart = [ [ "path", {
            d: "M3 5h6"
        } ], [ "path", {
            d: "M3 12h13"
        } ], [ "path", {
            d: "M3 19h13"
        } ], [ "path", {
            d: "m16 8-3-3 3-3"
        } ], [ "path", {
            d: "M21 19V7a2 2 0 0 0-2-2h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListTodo = [ [ "path", {
            d: "M13 5h8"
        } ], [ "path", {
            d: "M13 12h8"
        } ], [ "path", {
            d: "M13 19h8"
        } ], [ "path", {
            d: "m3 17 2 2 4-4"
        } ], [ "rect", {
            x: "3",
            y: "4",
            width: "6",
            height: "6",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListTree = [ [ "path", {
            d: "M8 5h13"
        } ], [ "path", {
            d: "M13 12h8"
        } ], [ "path", {
            d: "M13 19h8"
        } ], [ "path", {
            d: "M3 10a2 2 0 0 0 2 2h3"
        } ], [ "path", {
            d: "M3 5v12a2 2 0 0 0 2 2h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListVideo = [ [ "path", {
            d: "M21 5H3"
        } ], [ "path", {
            d: "M10 12H3"
        } ], [ "path", {
            d: "M10 19H3"
        } ], [ "path", {
            d: "M15 12.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997a1 1 0 0 1-1.517-.86z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ListX = [ [ "path", {
            d: "M16 5H3"
        } ], [ "path", {
            d: "M11 12H3"
        } ], [ "path", {
            d: "M16 19H3"
        } ], [ "path", {
            d: "m15.5 9.5 5 5"
        } ], [ "path", {
            d: "m20.5 9.5-5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const List = [ [ "path", {
            d: "M3 5h.01"
        } ], [ "path", {
            d: "M3 12h.01"
        } ], [ "path", {
            d: "M3 19h.01"
        } ], [ "path", {
            d: "M8 5h13"
        } ], [ "path", {
            d: "M8 12h13"
        } ], [ "path", {
            d: "M8 19h13"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LoaderCircle = [ [ "path", {
            d: "M21 12a9 9 0 1 1-6.219-8.56"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LoaderPinwheel = [ [ "path", {
            d: "M22 12a1 1 0 0 1-10 0 1 1 0 0 0-10 0"
        } ], [ "path", {
            d: "M7 20.7a1 1 0 1 1 5-8.7 1 1 0 1 0 5-8.6"
        } ], [ "path", {
            d: "M7 3.3a1 1 0 1 1 5 8.6 1 1 0 1 0 5 8.6"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Loader = [ [ "path", {
            d: "M12 2v4"
        } ], [ "path", {
            d: "m16.2 7.8 2.9-2.9"
        } ], [ "path", {
            d: "M18 12h4"
        } ], [ "path", {
            d: "m16.2 16.2 2.9 2.9"
        } ], [ "path", {
            d: "M12 18v4"
        } ], [ "path", {
            d: "m4.9 19.1 2.9-2.9"
        } ], [ "path", {
            d: "M2 12h4"
        } ], [ "path", {
            d: "m4.9 4.9 2.9 2.9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LocateFixed = [ [ "line", {
            x1: "2",
            x2: "5",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "19",
            x2: "22",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "2",
            y2: "5"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "19",
            y2: "22"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "7"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LocateOff = [ [ "path", {
            d: "M12 19v3"
        } ], [ "path", {
            d: "M12 2v3"
        } ], [ "path", {
            d: "M18.89 13.24a7 7 0 0 0-8.13-8.13"
        } ], [ "path", {
            d: "M19 12h3"
        } ], [ "path", {
            d: "M2 12h3"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M7.05 7.05a7 7 0 0 0 9.9 9.9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Locate = [ [ "line", {
            x1: "2",
            x2: "5",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "19",
            x2: "22",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "2",
            y2: "5"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "19",
            y2: "22"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LockKeyholeOpen = [ [ "circle", {
            cx: "12",
            cy: "16",
            r: "1"
        } ], [ "rect", {
            width: "18",
            height: "12",
            x: "3",
            y: "10",
            rx: "2"
        } ], [ "path", {
            d: "M7 10V7a5 5 0 0 1 9.33-2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LockKeyhole = [ [ "circle", {
            cx: "12",
            cy: "16",
            r: "1"
        } ], [ "rect", {
            x: "3",
            y: "10",
            width: "18",
            height: "12",
            rx: "2"
        } ], [ "path", {
            d: "M7 10V7a5 5 0 0 1 10 0v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LockOpen = [ [ "rect", {
            width: "18",
            height: "11",
            x: "3",
            y: "11",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M7 11V7a5 5 0 0 1 9.9-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Lock = [ [ "rect", {
            width: "18",
            height: "11",
            x: "3",
            y: "11",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M7 11V7a5 5 0 0 1 10 0v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LogIn = [ [ "path", {
            d: "m10 17 5-5-5-5"
        } ], [ "path", {
            d: "M15 12H3"
        } ], [ "path", {
            d: "M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const LogOut = [ [ "path", {
            d: "m16 17 5-5-5-5"
        } ], [ "path", {
            d: "M21 12H9"
        } ], [ "path", {
            d: "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Logs = [ [ "path", {
            d: "M3 5h1"
        } ], [ "path", {
            d: "M3 12h1"
        } ], [ "path", {
            d: "M3 19h1"
        } ], [ "path", {
            d: "M8 5h1"
        } ], [ "path", {
            d: "M8 12h1"
        } ], [ "path", {
            d: "M8 19h1"
        } ], [ "path", {
            d: "M13 5h8"
        } ], [ "path", {
            d: "M13 12h8"
        } ], [ "path", {
            d: "M13 19h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Lollipop = [ [ "circle", {
            cx: "11",
            cy: "11",
            r: "8"
        } ], [ "path", {
            d: "m21 21-4.3-4.3"
        } ], [ "path", {
            d: "M11 11a2 2 0 0 0 4 0 4 4 0 0 0-8 0 6 6 0 0 0 12 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Luggage = [ [ "path", {
            d: "M6 20a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M8 18V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v14"
        } ], [ "path", {
            d: "M10 20h4"
        } ], [ "circle", {
            cx: "16",
            cy: "20",
            r: "2"
        } ], [ "circle", {
            cx: "8",
            cy: "20",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Magnet = [ [ "path", {
            d: "m12 15 4 4"
        } ], [ "path", {
            d: "M2.352 10.648a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l6.029-6.029a1 1 0 1 1 3 3l-6.029 6.029a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l6.365-6.367A1 1 0 0 0 8.716 4.282z"
        } ], [ "path", {
            d: "m5 8 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MailCheck = [ [ "path", {
            d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8"
        } ], [ "path", {
            d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
        } ], [ "path", {
            d: "m16 19 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MailMinus = [ [ "path", {
            d: "M22 15V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8"
        } ], [ "path", {
            d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
        } ], [ "path", {
            d: "M16 19h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MailOpen = [ [ "path", {
            d: "M21.2 8.4c.5.38.8.97.8 1.6v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V10a2 2 0 0 1 .8-1.6l8-6a2 2 0 0 1 2.4 0l8 6Z"
        } ], [ "path", {
            d: "m22 10-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MailPlus = [ [ "path", {
            d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8"
        } ], [ "path", {
            d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
        } ], [ "path", {
            d: "M19 16v6"
        } ], [ "path", {
            d: "M16 19h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MailQuestionMark = [ [ "path", {
            d: "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5"
        } ], [ "path", {
            d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
        } ], [ "path", {
            d: "M18 15.28c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2"
        } ], [ "path", {
            d: "M20 22v.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MailSearch = [ [ "path", {
            d: "M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5"
        } ], [ "path", {
            d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
        } ], [ "path", {
            d: "M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ], [ "path", {
            d: "m22 22-1.5-1.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MailWarning = [ [ "path", {
            d: "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5"
        } ], [ "path", {
            d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
        } ], [ "path", {
            d: "M20 14v4"
        } ], [ "path", {
            d: "M20 22v.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MailX = [ [ "path", {
            d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h9"
        } ], [ "path", {
            d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
        } ], [ "path", {
            d: "m17 17 4 4"
        } ], [ "path", {
            d: "m21 17-4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Mail = [ [ "path", {
            d: "m22 7-8.991 5.727a2 2 0 0 1-2.009 0L2 7"
        } ], [ "rect", {
            x: "2",
            y: "4",
            width: "20",
            height: "16",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Mailbox = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.5C2 7 4 5 6.5 5H18c2.2 0 4 1.8 4 4v8Z"
        } ], [ "polyline", {
            points: "15,9 18,9 18,11"
        } ], [ "path", {
            d: "M6.5 5C9 5 11 7 11 9.5V17a2 2 0 0 1-2 2"
        } ], [ "line", {
            x1: "6",
            x2: "7",
            y1: "10",
            y2: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Mails = [ [ "path", {
            d: "M17 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 1-1.732"
        } ], [ "path", {
            d: "m22 5.5-6.419 4.179a2 2 0 0 1-2.162 0L7 5.5"
        } ], [ "rect", {
            x: "7",
            y: "3",
            width: "15",
            height: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapMinus = [ [ "path", {
            d: "m11 19-1.106-.552a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0l4.212 2.106a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619V14"
        } ], [ "path", {
            d: "M15 5.764V14"
        } ], [ "path", {
            d: "M21 18h-6"
        } ], [ "path", {
            d: "M9 3.236v15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinCheckInside = [ [ "path", {
            d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
        } ], [ "path", {
            d: "m9 10 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinCheck = [ [ "path", {
            d: "M19.43 12.935c.357-.967.57-1.955.57-2.935a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32.197 32.197 0 0 0 .813-.728"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ], [ "path", {
            d: "m16 18 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinHouse = [ [ "path", {
            d: "M15 22a1 1 0 0 1-1-1v-4a1 1 0 0 1 .445-.832l3-2a1 1 0 0 1 1.11 0l3 2A1 1 0 0 1 22 17v4a1 1 0 0 1-1 1z"
        } ], [ "path", {
            d: "M18 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 .601.2"
        } ], [ "path", {
            d: "M18 22v-3"
        } ], [ "circle", {
            cx: "10",
            cy: "10",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinMinusInside = [ [ "path", {
            d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
        } ], [ "path", {
            d: "M9 10h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinMinus = [ [ "path", {
            d: "M18.977 14C19.6 12.701 20 11.343 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ], [ "path", {
            d: "M16 18h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinOff = [ [ "path", {
            d: "M12.75 7.09a3 3 0 0 1 2.16 2.16"
        } ], [ "path", {
            d: "M17.072 17.072c-1.634 2.17-3.527 3.912-4.471 4.727a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 1.432-4.568"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M8.475 2.818A8 8 0 0 1 20 10c0 1.183-.31 2.377-.81 3.533"
        } ], [ "path", {
            d: "M9.13 9.13a3 3 0 0 0 3.74 3.74"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinPen = [ [ "path", {
            d: "M17.97 9.304A8 8 0 0 0 2 10c0 4.69 4.887 9.562 7.022 11.468"
        } ], [ "path", {
            d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ], [ "circle", {
            cx: "10",
            cy: "10",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinPlusInside = [ [ "path", {
            d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
        } ], [ "path", {
            d: "M12 7v6"
        } ], [ "path", {
            d: "M9 10h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinPlus = [ [ "path", {
            d: "M19.914 11.105A7.298 7.298 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ], [ "path", {
            d: "M16 18h6"
        } ], [ "path", {
            d: "M19 15v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinXInside = [ [ "path", {
            d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
        } ], [ "path", {
            d: "m14.5 7.5-5 5"
        } ], [ "path", {
            d: "m9.5 7.5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinX = [ [ "path", {
            d: "M19.752 11.901A7.78 7.78 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 19 19 0 0 0 .09-.077"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ], [ "path", {
            d: "m21.5 15.5-5 5"
        } ], [ "path", {
            d: "m21.5 20.5-5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPin = [ [ "path", {
            d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPinned = [ [ "path", {
            d: "M18 8c0 3.613-3.869 7.429-5.393 8.795a1 1 0 0 1-1.214 0C9.87 15.429 6 11.613 6 8a6 6 0 0 1 12 0"
        } ], [ "circle", {
            cx: "12",
            cy: "8",
            r: "2"
        } ], [ "path", {
            d: "M8.714 14h-3.71a1 1 0 0 0-.948.683l-2.004 6A1 1 0 0 0 3 22h18a1 1 0 0 0 .948-1.316l-2-6a1 1 0 0 0-.949-.684h-3.712"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MapPlus = [ [ "path", {
            d: "m11 19-1.106-.552a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0l4.212 2.106a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619V12"
        } ], [ "path", {
            d: "M15 5.764V12"
        } ], [ "path", {
            d: "M18 15v6"
        } ], [ "path", {
            d: "M21 18h-6"
        } ], [ "path", {
            d: "M9 3.236v15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const app_Map = [ [ "path", {
            d: "M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0z"
        } ], [ "path", {
            d: "M15 5.764v15"
        } ], [ "path", {
            d: "M9 3.236v15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MarsStroke = [ [ "path", {
            d: "m14 6 4 4"
        } ], [ "path", {
            d: "M17 3h4v4"
        } ], [ "path", {
            d: "m21 3-7.75 7.75"
        } ], [ "circle", {
            cx: "9",
            cy: "15",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Mars = [ [ "path", {
            d: "M16 3h5v5"
        } ], [ "path", {
            d: "m21 3-6.75 6.75"
        } ], [ "circle", {
            cx: "10",
            cy: "14",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Martini = [ [ "path", {
            d: "M8 22h8"
        } ], [ "path", {
            d: "M12 11v11"
        } ], [ "path", {
            d: "m19 3-7 8-7-8Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Maximize2 = [ [ "path", {
            d: "M15 3h6v6"
        } ], [ "path", {
            d: "m21 3-7 7"
        } ], [ "path", {
            d: "m3 21 7-7"
        } ], [ "path", {
            d: "M9 21H3v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Maximize = [ [ "path", {
            d: "M8 3H5a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "M21 8V5a2 2 0 0 0-2-2h-3"
        } ], [ "path", {
            d: "M3 16v3a2 2 0 0 0 2 2h3"
        } ], [ "path", {
            d: "M16 21h3a2 2 0 0 0 2-2v-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Medal = [ [ "path", {
            d: "M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15"
        } ], [ "path", {
            d: "M11 12 5.12 2.2"
        } ], [ "path", {
            d: "m13 12 5.88-9.8"
        } ], [ "path", {
            d: "M8 7h8"
        } ], [ "circle", {
            cx: "12",
            cy: "17",
            r: "5"
        } ], [ "path", {
            d: "M12 18v-2h-.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MegaphoneOff = [ [ "path", {
            d: "M11.636 6A13 13 0 0 0 19.4 3.2 1 1 0 0 1 21 4v11.344"
        } ], [ "path", {
            d: "M14.378 14.357A13 13 0 0 0 11 14H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h1"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M6 14a12 12 0 0 0 2.4 7.2 2 2 0 0 0 3.2-2.4A8 8 0 0 1 10 14"
        } ], [ "path", {
            d: "M8 8v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Megaphone = [ [ "path", {
            d: "M11 6a13 13 0 0 0 8.4-2.8A1 1 0 0 1 21 4v12a1 1 0 0 1-1.6.8A13 13 0 0 0 11 14H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2z"
        } ], [ "path", {
            d: "M6 14a12 12 0 0 0 2.4 7.2 2 2 0 0 0 3.2-2.4A8 8 0 0 1 10 14"
        } ], [ "path", {
            d: "M8 6v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Meh = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "line", {
            x1: "8",
            x2: "16",
            y1: "15",
            y2: "15"
        } ], [ "line", {
            x1: "9",
            x2: "9.01",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "15",
            x2: "15.01",
            y1: "9",
            y2: "9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MemoryStick = [ [ "path", {
            d: "M6 19v-3"
        } ], [ "path", {
            d: "M10 19v-3"
        } ], [ "path", {
            d: "M14 19v-3"
        } ], [ "path", {
            d: "M18 19v-3"
        } ], [ "path", {
            d: "M8 11V9"
        } ], [ "path", {
            d: "M16 11V9"
        } ], [ "path", {
            d: "M12 11V9"
        } ], [ "path", {
            d: "M2 15h20"
        } ], [ "path", {
            d: "M2 7a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1.1a2 2 0 0 0 0 3.837V17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5.1a2 2 0 0 0 0-3.837Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Menu = [ [ "path", {
            d: "M4 5h16"
        } ], [ "path", {
            d: "M4 12h16"
        } ], [ "path", {
            d: "M4 19h16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Merge = [ [ "path", {
            d: "m8 6 4-4 4 4"
        } ], [ "path", {
            d: "M12 2v10.3a4 4 0 0 1-1.172 2.872L4 22"
        } ], [ "path", {
            d: "m20 22-5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleCode = [ [ "path", {
            d: "m10 9-3 3 3 3"
        } ], [ "path", {
            d: "m14 15 3-3-3-3"
        } ], [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleDashed = [ [ "path", {
            d: "M10.1 2.182a10 10 0 0 1 3.8 0"
        } ], [ "path", {
            d: "M13.9 21.818a10 10 0 0 1-3.8 0"
        } ], [ "path", {
            d: "M17.609 3.72a10 10 0 0 1 2.69 2.7"
        } ], [ "path", {
            d: "M2.182 13.9a10 10 0 0 1 0-3.8"
        } ], [ "path", {
            d: "M20.28 17.61a10 10 0 0 1-2.7 2.69"
        } ], [ "path", {
            d: "M21.818 10.1a10 10 0 0 1 0 3.8"
        } ], [ "path", {
            d: "M3.721 6.391a10 10 0 0 1 2.7-2.69"
        } ], [ "path", {
            d: "m6.163 21.117-2.906.85a1 1 0 0 1-1.236-1.169l.965-2.98"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleHeart = [ [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ], [ "path", {
            d: "M7.828 13.07A3 3 0 0 1 12 8.764a3 3 0 0 1 5.004 2.224 3 3 0 0 1-.832 2.083l-3.447 3.62a1 1 0 0 1-1.45-.001z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleMore = [ [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ], [ "path", {
            d: "M8 12h.01"
        } ], [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M16 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleOff = [ [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M4.93 4.929a10 10 0 0 0-1.938 11.412 2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 0 0 11.302-1.989"
        } ], [ "path", {
            d: "M8.35 2.69A10 10 0 0 1 21.3 15.65"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCirclePlus = [ [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "path", {
            d: "M12 8v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleQuestionMark = [ [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ], [ "path", {
            d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
        } ], [ "path", {
            d: "M12 17h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleReply = [ [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ], [ "path", {
            d: "m10 15-3-3 3-3"
        } ], [ "path", {
            d: "M7 12h8a2 2 0 0 1 2 2v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleWarning = [ [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ], [ "path", {
            d: "M12 8v4"
        } ], [ "path", {
            d: "M12 16h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircleX = [ [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ], [ "path", {
            d: "m15 9-6 6"
        } ], [ "path", {
            d: "m9 9 6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareCode = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "m10 8-3 3 3 3"
        } ], [ "path", {
            d: "m14 14 3-3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageCircle = [ [ "path", {
            d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareDashed = [ [ "path", {
            d: "M12 19h.01"
        } ], [ "path", {
            d: "M12 3h.01"
        } ], [ "path", {
            d: "M16 19h.01"
        } ], [ "path", {
            d: "M16 3h.01"
        } ], [ "path", {
            d: "M2 13h.01"
        } ], [ "path", {
            d: "M2 17v4.286a.71.71 0 0 0 1.212.502l2.202-2.202A2 2 0 0 1 6.828 19H8"
        } ], [ "path", {
            d: "M2 5a2 2 0 0 1 2-2"
        } ], [ "path", {
            d: "M2 9h.01"
        } ], [ "path", {
            d: "M20 3a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M22 13h.01"
        } ], [ "path", {
            d: "M22 17a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M22 9h.01"
        } ], [ "path", {
            d: "M8 3h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareDiff = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M10 15h4"
        } ], [ "path", {
            d: "M10 9h4"
        } ], [ "path", {
            d: "M12 7v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareDot = [ [ "path", {
            d: "M12.7 3H4a2 2 0 0 0-2 2v16.286a.71.71 0 0 0 1.212.502l2.202-2.202A2 2 0 0 1 6.828 19H20a2 2 0 0 0 2-2v-4.7"
        } ], [ "circle", {
            cx: "19",
            cy: "6",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareHeart = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M7.5 9.5c0 .687.265 1.383.697 1.844l3.009 3.264a1.14 1.14 0 0 0 .407.314 1 1 0 0 0 .783-.004 1.14 1.14 0 0 0 .398-.31l3.008-3.264A2.77 2.77 0 0 0 16.5 9.5 2.5 2.5 0 0 0 12 8a2.5 2.5 0 0 0-4.5 1.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareLock = [ [ "path", {
            d: "M22 8.5V5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v16.286a.71.71 0 0 0 1.212.502l2.202-2.202A2 2 0 0 1 6.828 19H10"
        } ], [ "path", {
            d: "M20 15v-2a2 2 0 0 0-4 0v2"
        } ], [ "rect", {
            x: "14",
            y: "15",
            width: "8",
            height: "5",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareMore = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M12 11h.01"
        } ], [ "path", {
            d: "M16 11h.01"
        } ], [ "path", {
            d: "M8 11h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareOff = [ [ "path", {
            d: "M19 19H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.7.7 0 0 1 2 21.286V5a2 2 0 0 1 1.184-1.826"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M8.656 3H20a2 2 0 0 1 2 2v11.344"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquarePlus = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M12 8v6"
        } ], [ "path", {
            d: "M9 11h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareQuote = [ [ "path", {
            d: "M14 14a2 2 0 0 0 2-2V8h-2"
        } ], [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M8 14a2 2 0 0 0 2-2V8H8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareReply = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "m10 8-3 3 3 3"
        } ], [ "path", {
            d: "M17 14v-1a2 2 0 0 0-2-2H7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareText = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M7 11h10"
        } ], [ "path", {
            d: "M7 15h6"
        } ], [ "path", {
            d: "M7 7h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareShare = [ [ "path", {
            d: "M12 3H4a2 2 0 0 0-2 2v16.286a.71.71 0 0 0 1.212.502l2.202-2.202A2 2 0 0 1 6.828 19H20a2 2 0 0 0 2-2v-4"
        } ], [ "path", {
            d: "M16 3h6v6"
        } ], [ "path", {
            d: "m16 9 6-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareWarning = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M12 15h.01"
        } ], [ "path", {
            d: "M12 7v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquare = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessageSquareX = [ [ "path", {
            d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "m14.5 8.5-5 5"
        } ], [ "path", {
            d: "m9.5 8.5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MessagesSquare = [ [ "path", {
            d: "M16 10a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 14.286V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"
        } ], [ "path", {
            d: "M20 9a2 2 0 0 1 2 2v10.286a.71.71 0 0 1-1.212.502l-2.202-2.202A2 2 0 0 0 17.172 19H10a2 2 0 0 1-2-2v-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MicOff = [ [ "path", {
            d: "M12 19v3"
        } ], [ "path", {
            d: "M15 9.34V5a3 3 0 0 0-5.68-1.33"
        } ], [ "path", {
            d: "M16.95 16.95A7 7 0 0 1 5 12v-2"
        } ], [ "path", {
            d: "M18.89 13.23A7 7 0 0 0 19 12v-2"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M9 9v3a3 3 0 0 0 5.12 2.12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Mic = [ [ "path", {
            d: "M12 19v3"
        } ], [ "path", {
            d: "M19 10v2a7 7 0 0 1-14 0v-2"
        } ], [ "rect", {
            x: "9",
            y: "2",
            width: "6",
            height: "13",
            rx: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Microchip = [ [ "path", {
            d: "M18 12h2"
        } ], [ "path", {
            d: "M18 16h2"
        } ], [ "path", {
            d: "M18 20h2"
        } ], [ "path", {
            d: "M18 4h2"
        } ], [ "path", {
            d: "M18 8h2"
        } ], [ "path", {
            d: "M4 12h2"
        } ], [ "path", {
            d: "M4 16h2"
        } ], [ "path", {
            d: "M4 20h2"
        } ], [ "path", {
            d: "M4 4h2"
        } ], [ "path", {
            d: "M4 8h2"
        } ], [ "path", {
            d: "M8 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-1.5c-.276 0-.494.227-.562.495a2 2 0 0 1-3.876 0C9.994 2.227 9.776 2 9.5 2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MicVocal = [ [ "path", {
            d: "m11 7.601-5.994 8.19a1 1 0 0 0 .1 1.298l.817.818a1 1 0 0 0 1.314.087L15.09 12"
        } ], [ "path", {
            d: "M16.5 21.174C15.5 20.5 14.372 20 13 20c-2.058 0-3.928 2.356-6 2-2.072-.356-2.775-3.369-1.5-4.5"
        } ], [ "circle", {
            cx: "16",
            cy: "7",
            r: "5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Microscope = [ [ "path", {
            d: "M6 18h8"
        } ], [ "path", {
            d: "M3 22h18"
        } ], [ "path", {
            d: "M14 22a7 7 0 1 0 0-14h-1"
        } ], [ "path", {
            d: "M9 14h2"
        } ], [ "path", {
            d: "M9 12a2 2 0 0 1-2-2V6h6v4a2 2 0 0 1-2 2Z"
        } ], [ "path", {
            d: "M12 6V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Milestone = [ [ "path", {
            d: "M12 13v8"
        } ], [ "path", {
            d: "M12 3v3"
        } ], [ "path", {
            d: "M4 6a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h13a2 2 0 0 0 1.152-.365l3.424-2.317a1 1 0 0 0 0-1.635l-3.424-2.318A2 2 0 0 0 17 6z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MilkOff = [ [ "path", {
            d: "M8 2h8"
        } ], [ "path", {
            d: "M9 2v1.343M15 2v2.789a4 4 0 0 0 .672 2.219l.656.984a4 4 0 0 1 .672 2.22v1.131M7.8 7.8l-.128.192A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3"
        } ], [ "path", {
            d: "M7 15a6.47 6.47 0 0 1 5 0 6.472 6.472 0 0 0 3.435.435"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Microwave = [ [ "rect", {
            width: "20",
            height: "15",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "rect", {
            width: "8",
            height: "7",
            x: "6",
            y: "8",
            rx: "1"
        } ], [ "path", {
            d: "M18 8v7"
        } ], [ "path", {
            d: "M6 19v2"
        } ], [ "path", {
            d: "M18 19v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Minimize2 = [ [ "path", {
            d: "m14 10 7-7"
        } ], [ "path", {
            d: "M20 10h-6V4"
        } ], [ "path", {
            d: "m3 21 7-7"
        } ], [ "path", {
            d: "M4 14h6v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Minimize = [ [ "path", {
            d: "M8 3v3a2 2 0 0 1-2 2H3"
        } ], [ "path", {
            d: "M21 8h-3a2 2 0 0 1-2-2V3"
        } ], [ "path", {
            d: "M3 16h3a2 2 0 0 1 2 2v3"
        } ], [ "path", {
            d: "M16 21v-3a2 2 0 0 1 2-2h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Milk = [ [ "path", {
            d: "M8 2h8"
        } ], [ "path", {
            d: "M9 2v2.789a4 4 0 0 1-.672 2.219l-.656.984A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-9.789a4 4 0 0 0-.672-2.219l-.656-.984A4 4 0 0 1 15 4.788V2"
        } ], [ "path", {
            d: "M7 15a6.472 6.472 0 0 1 5 0 6.47 6.47 0 0 0 5 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Minus = [ [ "path", {
            d: "M5 12h14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorCheck = [ [ "path", {
            d: "m9 10 2 2 4-4"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M8 21h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorCog = [ [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "m14.305 7.53.923-.382"
        } ], [ "path", {
            d: "m15.228 4.852-.923-.383"
        } ], [ "path", {
            d: "m16.852 3.228-.383-.924"
        } ], [ "path", {
            d: "m16.852 8.772-.383.923"
        } ], [ "path", {
            d: "m19.148 3.228.383-.924"
        } ], [ "path", {
            d: "m19.53 9.696-.382-.924"
        } ], [ "path", {
            d: "m20.772 4.852.924-.383"
        } ], [ "path", {
            d: "m20.772 7.148.924.383"
        } ], [ "path", {
            d: "M22 13v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7"
        } ], [ "path", {
            d: "M8 21h8"
        } ], [ "circle", {
            cx: "18",
            cy: "6",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorDot = [ [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M22 12.307V15a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h8.693"
        } ], [ "path", {
            d: "M8 21h8"
        } ], [ "circle", {
            cx: "19",
            cy: "6",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorDown = [ [ "path", {
            d: "M12 13V7"
        } ], [ "path", {
            d: "m15 10-3 3-3-3"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M8 21h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorOff = [ [ "path", {
            d: "M17 17H4a2 2 0 0 1-2-2V5c0-1.5 1-2 1-2"
        } ], [ "path", {
            d: "M22 15V5a2 2 0 0 0-2-2H9"
        } ], [ "path", {
            d: "M8 21h8"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorPlay = [ [ "path", {
            d: "M15.033 9.44a.647.647 0 0 1 0 1.12l-4.065 2.352a.645.645 0 0 1-.968-.56V7.648a.645.645 0 0 1 .967-.56z"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M8 21h8"
        } ], [ "rect", {
            x: "2",
            y: "3",
            width: "20",
            height: "14",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorPause = [ [ "path", {
            d: "M10 13V7"
        } ], [ "path", {
            d: "M14 13V7"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M8 21h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorSmartphone = [ [ "path", {
            d: "M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8"
        } ], [ "path", {
            d: "M10 19v-3.96 3.15"
        } ], [ "path", {
            d: "M7 19h5"
        } ], [ "rect", {
            width: "6",
            height: "10",
            x: "16",
            y: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorSpeaker = [ [ "path", {
            d: "M5.5 20H8"
        } ], [ "path", {
            d: "M17 9h.01"
        } ], [ "rect", {
            width: "10",
            height: "16",
            x: "12",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4"
        } ], [ "circle", {
            cx: "17",
            cy: "15",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorStop = [ [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M8 21h8"
        } ], [ "rect", {
            x: "2",
            y: "3",
            width: "20",
            height: "14",
            rx: "2"
        } ], [ "rect", {
            x: "9",
            y: "7",
            width: "6",
            height: "6",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorUp = [ [ "path", {
            d: "m9 10 3-3 3 3"
        } ], [ "path", {
            d: "M12 13V7"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M8 21h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MonitorX = [ [ "path", {
            d: "m14.5 12.5-5-5"
        } ], [ "path", {
            d: "m9.5 12.5 5-5"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M8 21h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Monitor = [ [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "3",
            rx: "2"
        } ], [ "line", {
            x1: "8",
            x2: "16",
            y1: "21",
            y2: "21"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "17",
            y2: "21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoonStar = [ [ "path", {
            d: "M18 5h4"
        } ], [ "path", {
            d: "M20 3v4"
        } ], [ "path", {
            d: "M20.985 12.486a9 9 0 1 1-9.473-9.472c.405-.022.617.46.402.803a6 6 0 0 0 8.268 8.268c.344-.215.825-.004.803.401"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Moon = [ [ "path", {
            d: "M20.985 12.486a9 9 0 1 1-9.473-9.472c.405-.022.617.46.402.803a6 6 0 0 0 8.268 8.268c.344-.215.825-.004.803.401"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MountainSnow = [ [ "path", {
            d: "m8 3 4 8 5-5 5 15H2L8 3z"
        } ], [ "path", {
            d: "M4.14 15.08c2.62-1.57 5.24-1.43 7.86.42 2.74 1.94 5.49 2 8.23.19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Mountain = [ [ "path", {
            d: "m8 3 4 8 5-5 5 15H2L8 3z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MouseOff = [ [ "path", {
            d: "M12 6v.343"
        } ], [ "path", {
            d: "M18.218 18.218A7 7 0 0 1 5 15V9a7 7 0 0 1 .782-3.218"
        } ], [ "path", {
            d: "M19 13.343V9A7 7 0 0 0 8.56 2.902"
        } ], [ "path", {
            d: "M22 22 2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MousePointer2 = [ [ "path", {
            d: "M4.037 4.688a.495.495 0 0 1 .651-.651l16 6.5a.5.5 0 0 1-.063.947l-6.124 1.58a2 2 0 0 0-1.438 1.435l-1.579 6.126a.5.5 0 0 1-.947.063z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MousePointerBan = [ [ "path", {
            d: "M2.034 2.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.944L8.204 7.545a1 1 0 0 0-.66.66l-1.066 3.443a.5.5 0 0 1-.944.033z"
        } ], [ "circle", {
            cx: "16",
            cy: "16",
            r: "6"
        } ], [ "path", {
            d: "m11.8 11.8 8.4 8.4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MousePointerClick = [ [ "path", {
            d: "M14 4.1 12 6"
        } ], [ "path", {
            d: "m5.1 8-2.9-.8"
        } ], [ "path", {
            d: "m6 12-1.9 2"
        } ], [ "path", {
            d: "M7.2 2.2 8 5.1"
        } ], [ "path", {
            d: "M9.037 9.69a.498.498 0 0 1 .653-.653l11 4.5a.5.5 0 0 1-.074.949l-4.349 1.041a1 1 0 0 0-.74.739l-1.04 4.35a.5.5 0 0 1-.95.074z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MousePointer = [ [ "path", {
            d: "M12.586 12.586 19 19"
        } ], [ "path", {
            d: "M3.688 3.037a.497.497 0 0 0-.651.651l6.5 15.999a.501.501 0 0 0 .947-.062l1.569-6.083a2 2 0 0 1 1.448-1.479l6.124-1.579a.5.5 0 0 0 .063-.947z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Mouse = [ [ "rect", {
            x: "5",
            y: "2",
            width: "14",
            height: "20",
            rx: "7"
        } ], [ "path", {
            d: "M12 6v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Move3d = [ [ "path", {
            d: "M5 3v16h16"
        } ], [ "path", {
            d: "m5 19 6-6"
        } ], [ "path", {
            d: "m2 6 3-3 3 3"
        } ], [ "path", {
            d: "m18 16 3 3-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveDiagonal2 = [ [ "path", {
            d: "M19 13v6h-6"
        } ], [ "path", {
            d: "M5 11V5h6"
        } ], [ "path", {
            d: "m5 5 14 14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveDiagonal = [ [ "path", {
            d: "M11 19H5v-6"
        } ], [ "path", {
            d: "M13 5h6v6"
        } ], [ "path", {
            d: "M19 5 5 19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveDownLeft = [ [ "path", {
            d: "M11 19H5V13"
        } ], [ "path", {
            d: "M19 5L5 19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveDownRight = [ [ "path", {
            d: "M19 13V19H13"
        } ], [ "path", {
            d: "M5 5L19 19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveDown = [ [ "path", {
            d: "M8 18L12 22L16 18"
        } ], [ "path", {
            d: "M12 2V22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveHorizontal = [ [ "path", {
            d: "m18 8 4 4-4 4"
        } ], [ "path", {
            d: "M2 12h20"
        } ], [ "path", {
            d: "m6 8-4 4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveLeft = [ [ "path", {
            d: "M6 8L2 12L6 16"
        } ], [ "path", {
            d: "M2 12H22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveRight = [ [ "path", {
            d: "M18 8L22 12L18 16"
        } ], [ "path", {
            d: "M2 12H22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveUpLeft = [ [ "path", {
            d: "M5 11V5H11"
        } ], [ "path", {
            d: "M5 5L19 19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveUpRight = [ [ "path", {
            d: "M13 5H19V11"
        } ], [ "path", {
            d: "M19 5L5 19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveUp = [ [ "path", {
            d: "M8 6L12 2L16 6"
        } ], [ "path", {
            d: "M12 2V22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const MoveVertical = [ [ "path", {
            d: "M12 2v20"
        } ], [ "path", {
            d: "m8 18 4 4 4-4"
        } ], [ "path", {
            d: "m8 6 4-4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Move = [ [ "path", {
            d: "M12 2v20"
        } ], [ "path", {
            d: "m15 19-3 3-3-3"
        } ], [ "path", {
            d: "m19 9 3 3-3 3"
        } ], [ "path", {
            d: "M2 12h20"
        } ], [ "path", {
            d: "m5 9-3 3 3 3"
        } ], [ "path", {
            d: "m9 5 3-3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Music2 = [ [ "circle", {
            cx: "8",
            cy: "18",
            r: "4"
        } ], [ "path", {
            d: "M12 18V2l7 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Music3 = [ [ "circle", {
            cx: "12",
            cy: "18",
            r: "4"
        } ], [ "path", {
            d: "M16 18V2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Music4 = [ [ "path", {
            d: "M9 18V5l12-2v13"
        } ], [ "path", {
            d: "m9 9 12-2"
        } ], [ "circle", {
            cx: "6",
            cy: "18",
            r: "3"
        } ], [ "circle", {
            cx: "18",
            cy: "16",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Music = [ [ "path", {
            d: "M9 18V5l12-2v13"
        } ], [ "circle", {
            cx: "6",
            cy: "18",
            r: "3"
        } ], [ "circle", {
            cx: "18",
            cy: "16",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Navigation2Off = [ [ "path", {
            d: "M9.31 9.31 5 21l7-4 7 4-1.17-3.17"
        } ], [ "path", {
            d: "M14.53 8.88 12 2l-1.17 3.17"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Navigation2 = [ [ "polygon", {
            points: "12 2 19 21 12 17 5 21 12 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const NavigationOff = [ [ "path", {
            d: "M8.43 8.43 3 11l8 2 2 8 2.57-5.43"
        } ], [ "path", {
            d: "M17.39 11.73 22 2l-9.73 4.61"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Navigation = [ [ "polygon", {
            points: "3 11 22 2 13 21 11 13 3 11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Network = [ [ "rect", {
            x: "16",
            y: "16",
            width: "6",
            height: "6",
            rx: "1"
        } ], [ "rect", {
            x: "2",
            y: "16",
            width: "6",
            height: "6",
            rx: "1"
        } ], [ "rect", {
            x: "9",
            y: "2",
            width: "6",
            height: "6",
            rx: "1"
        } ], [ "path", {
            d: "M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3"
        } ], [ "path", {
            d: "M12 12V8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Newspaper = [ [ "path", {
            d: "M15 18h-5"
        } ], [ "path", {
            d: "M18 14h-8"
        } ], [ "path", {
            d: "M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-4 0v-9a2 2 0 0 1 2-2h2"
        } ], [ "rect", {
            width: "8",
            height: "4",
            x: "10",
            y: "6",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Nfc = [ [ "path", {
            d: "M6 8.32a7.43 7.43 0 0 1 0 7.36"
        } ], [ "path", {
            d: "M9.46 6.21a11.76 11.76 0 0 1 0 11.58"
        } ], [ "path", {
            d: "M12.91 4.1a15.91 15.91 0 0 1 .01 15.8"
        } ], [ "path", {
            d: "M16.37 2a20.16 20.16 0 0 1 0 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const NonBinary = [ [ "path", {
            d: "M12 2v10"
        } ], [ "path", {
            d: "m8.5 4 7 4"
        } ], [ "path", {
            d: "m8.5 8 7-4"
        } ], [ "circle", {
            cx: "12",
            cy: "17",
            r: "5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const NotebookPen = [ [ "path", {
            d: "M13.4 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7.4"
        } ], [ "path", {
            d: "M2 6h4"
        } ], [ "path", {
            d: "M2 10h4"
        } ], [ "path", {
            d: "M2 14h4"
        } ], [ "path", {
            d: "M2 18h4"
        } ], [ "path", {
            d: "M21.378 5.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const NotebookTabs = [ [ "path", {
            d: "M2 6h4"
        } ], [ "path", {
            d: "M2 10h4"
        } ], [ "path", {
            d: "M2 14h4"
        } ], [ "path", {
            d: "M2 18h4"
        } ], [ "rect", {
            width: "16",
            height: "20",
            x: "4",
            y: "2",
            rx: "2"
        } ], [ "path", {
            d: "M15 2v20"
        } ], [ "path", {
            d: "M15 7h5"
        } ], [ "path", {
            d: "M15 12h5"
        } ], [ "path", {
            d: "M15 17h5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const NotebookText = [ [ "path", {
            d: "M2 6h4"
        } ], [ "path", {
            d: "M2 10h4"
        } ], [ "path", {
            d: "M2 14h4"
        } ], [ "path", {
            d: "M2 18h4"
        } ], [ "rect", {
            width: "16",
            height: "20",
            x: "4",
            y: "2",
            rx: "2"
        } ], [ "path", {
            d: "M9.5 8h5"
        } ], [ "path", {
            d: "M9.5 12H16"
        } ], [ "path", {
            d: "M9.5 16H14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const NotepadTextDashed = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M12 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "path", {
            d: "M16 4h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M20 12v2"
        } ], [ "path", {
            d: "M20 18v2a2 2 0 0 1-2 2h-1"
        } ], [ "path", {
            d: "M13 22h-2"
        } ], [ "path", {
            d: "M7 22H6a2 2 0 0 1-2-2v-2"
        } ], [ "path", {
            d: "M4 14v-2"
        } ], [ "path", {
            d: "M4 8V6a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M8 10h6"
        } ], [ "path", {
            d: "M8 14h8"
        } ], [ "path", {
            d: "M8 18h5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Notebook = [ [ "path", {
            d: "M2 6h4"
        } ], [ "path", {
            d: "M2 10h4"
        } ], [ "path", {
            d: "M2 14h4"
        } ], [ "path", {
            d: "M2 18h4"
        } ], [ "rect", {
            width: "16",
            height: "20",
            x: "4",
            y: "2",
            rx: "2"
        } ], [ "path", {
            d: "M16 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const NotepadText = [ [ "path", {
            d: "M8 2v4"
        } ], [ "path", {
            d: "M12 2v4"
        } ], [ "path", {
            d: "M16 2v4"
        } ], [ "rect", {
            width: "16",
            height: "18",
            x: "4",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M8 10h6"
        } ], [ "path", {
            d: "M8 14h8"
        } ], [ "path", {
            d: "M8 18h5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const NutOff = [ [ "path", {
            d: "M12 4V2"
        } ], [ "path", {
            d: "M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592a7.01 7.01 0 0 0 4.125-2.939"
        } ], [ "path", {
            d: "M19 10v3.343"
        } ], [ "path", {
            d: "M12 12c-1.349-.573-1.905-1.005-2.5-2-.546.902-1.048 1.353-2.5 2-1.018-.644-1.46-1.08-2-2-1.028.71-1.69.918-3 1 1.081-1.048 1.757-2.03 2-3 .194-.776.84-1.551 1.79-2.21m11.654 5.997c.887-.457 1.28-.891 1.556-1.787 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4-.74 0-1.461.068-2.15.192"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Nut = [ [ "path", {
            d: "M12 4V2"
        } ], [ "path", {
            d: "M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592A7.003 7.003 0 0 0 19 14v-4"
        } ], [ "path", {
            d: "M12 4C8 4 4.5 6 4 8c-.243.97-.919 1.952-2 3 1.31-.082 1.972-.29 3-1 .54.92.982 1.356 2 2 1.452-.647 1.954-1.098 2.5-2 .595.995 1.151 1.427 2.5 2 1.31-.621 1.862-1.058 2.5-2 .629.977 1.162 1.423 2.5 2 1.209-.548 1.68-.967 2-2 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const OctagonAlert = [ [ "path", {
            d: "M12 16h.01"
        } ], [ "path", {
            d: "M12 8v4"
        } ], [ "path", {
            d: "M15.312 2a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586l-4.688-4.688A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const OctagonMinus = [ [ "path", {
            d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"
        } ], [ "path", {
            d: "M8 12h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const OctagonX = [ [ "path", {
            d: "m15 9-6 6"
        } ], [ "path", {
            d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"
        } ], [ "path", {
            d: "m9 9 6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Octagon = [ [ "path", {
            d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const OctagonPause = [ [ "path", {
            d: "M10 15V9"
        } ], [ "path", {
            d: "M14 15V9"
        } ], [ "path", {
            d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Omega = [ [ "path", {
            d: "M3 20h4.5a.5.5 0 0 0 .5-.5v-.282a.52.52 0 0 0-.247-.437 8 8 0 1 1 8.494-.001.52.52 0 0 0-.247.438v.282a.5.5 0 0 0 .5.5H21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Option = [ [ "path", {
            d: "M3 3h6l6 18h6"
        } ], [ "path", {
            d: "M14 3h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Orbit = [ [ "path", {
            d: "M20.341 6.484A10 10 0 0 1 10.266 21.85"
        } ], [ "path", {
            d: "M3.659 17.516A10 10 0 0 1 13.74 2.152"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ], [ "circle", {
            cx: "19",
            cy: "5",
            r: "2"
        } ], [ "circle", {
            cx: "5",
            cy: "19",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Package2 = [ [ "path", {
            d: "M12 3v6"
        } ], [ "path", {
            d: "M16.76 3a2 2 0 0 1 1.8 1.1l2.23 4.479a2 2 0 0 1 .21.891V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9.472a2 2 0 0 1 .211-.894L5.45 4.1A2 2 0 0 1 7.24 3z"
        } ], [ "path", {
            d: "M3.054 9.013h17.893"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PackageCheck = [ [ "path", {
            d: "m16 16 2 2 4-4"
        } ], [ "path", {
            d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
        } ], [ "path", {
            d: "m7.5 4.27 9 5.15"
        } ], [ "polyline", {
            points: "3.29 7 12 12 20.71 7"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "22",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Origami = [ [ "path", {
            d: "M12 12V4a1 1 0 0 1 1-1h6.297a1 1 0 0 1 .651 1.759l-4.696 4.025"
        } ], [ "path", {
            d: "m12 21-7.414-7.414A2 2 0 0 1 4 12.172V6.415a1.002 1.002 0 0 1 1.707-.707L20 20.009"
        } ], [ "path", {
            d: "m12.214 3.381 8.414 14.966a1 1 0 0 1-.167 1.199l-1.168 1.163a1 1 0 0 1-.706.291H6.351a1 1 0 0 1-.625-.219L3.25 18.8a1 1 0 0 1 .631-1.781l4.165.027"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PackageMinus = [ [ "path", {
            d: "M16 16h6"
        } ], [ "path", {
            d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
        } ], [ "path", {
            d: "m7.5 4.27 9 5.15"
        } ], [ "polyline", {
            points: "3.29 7 12 12 20.71 7"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "22",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PackageOpen = [ [ "path", {
            d: "M12 22v-9"
        } ], [ "path", {
            d: "M15.17 2.21a1.67 1.67 0 0 1 1.63 0L21 4.57a1.93 1.93 0 0 1 0 3.36L8.82 14.79a1.655 1.655 0 0 1-1.64 0L3 12.43a1.93 1.93 0 0 1 0-3.36z"
        } ], [ "path", {
            d: "M20 13v3.87a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13"
        } ], [ "path", {
            d: "M21 12.43a1.93 1.93 0 0 0 0-3.36L8.83 2.2a1.64 1.64 0 0 0-1.63 0L3 4.57a1.93 1.93 0 0 0 0 3.36l12.18 6.86a1.636 1.636 0 0 0 1.63 0z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PackagePlus = [ [ "path", {
            d: "M16 16h6"
        } ], [ "path", {
            d: "M19 13v6"
        } ], [ "path", {
            d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
        } ], [ "path", {
            d: "m7.5 4.27 9 5.15"
        } ], [ "polyline", {
            points: "3.29 7 12 12 20.71 7"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "22",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PackageX = [ [ "path", {
            d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
        } ], [ "path", {
            d: "m7.5 4.27 9 5.15"
        } ], [ "polyline", {
            points: "3.29 7 12 12 20.71 7"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "22",
            y2: "12"
        } ], [ "path", {
            d: "m17 13 5 5m-5 0 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PackageSearch = [ [ "path", {
            d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14"
        } ], [ "path", {
            d: "m7.5 4.27 9 5.15"
        } ], [ "polyline", {
            points: "3.29 7 12 12 20.71 7"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "22",
            y2: "12"
        } ], [ "circle", {
            cx: "18.5",
            cy: "15.5",
            r: "2.5"
        } ], [ "path", {
            d: "M20.27 17.27 22 19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Package = [ [ "path", {
            d: "M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73z"
        } ], [ "path", {
            d: "M12 22V12"
        } ], [ "polyline", {
            points: "3.29 7 12 12 20.71 7"
        } ], [ "path", {
            d: "m7.5 4.27 9 5.15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PaintBucket = [ [ "path", {
            d: "m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z"
        } ], [ "path", {
            d: "m5 2 5 5"
        } ], [ "path", {
            d: "M2 13h15"
        } ], [ "path", {
            d: "M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PaintRoller = [ [ "rect", {
            width: "16",
            height: "6",
            x: "2",
            y: "2",
            rx: "2"
        } ], [ "path", {
            d: "M10 16v-2a2 2 0 0 1 2-2h8a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"
        } ], [ "rect", {
            width: "4",
            height: "6",
            x: "8",
            y: "16",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PaintbrushVertical = [ [ "path", {
            d: "M10 2v2"
        } ], [ "path", {
            d: "M14 2v4"
        } ], [ "path", {
            d: "M17 2a1 1 0 0 1 1 1v9H6V3a1 1 0 0 1 1-1z"
        } ], [ "path", {
            d: "M6 12a1 1 0 0 0-1 1v1a2 2 0 0 0 2 2h2a1 1 0 0 1 1 1v2.9a2 2 0 1 0 4 0V17a1 1 0 0 1 1-1h2a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Paintbrush = [ [ "path", {
            d: "m14.622 17.897-10.68-2.913"
        } ], [ "path", {
            d: "M18.376 2.622a1 1 0 1 1 3.002 3.002L17.36 9.643a.5.5 0 0 0 0 .707l.944.944a2.41 2.41 0 0 1 0 3.408l-.944.944a.5.5 0 0 1-.707 0L8.354 7.348a.5.5 0 0 1 0-.707l.944-.944a2.41 2.41 0 0 1 3.408 0l.944.944a.5.5 0 0 0 .707 0z"
        } ], [ "path", {
            d: "M9 8c-1.804 2.71-3.97 3.46-6.583 3.948a.507.507 0 0 0-.302.819l7.32 8.883a1 1 0 0 0 1.185.204C12.735 20.405 16 16.792 16 15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Palette = [ [ "path", {
            d: "M12 22a1 1 0 0 1 0-20 10 9 0 0 1 10 9 5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z"
        } ], [ "circle", {
            cx: "13.5",
            cy: "6.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "circle", {
            cx: "17.5",
            cy: "10.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "circle", {
            cx: "6.5",
            cy: "12.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "circle", {
            cx: "8.5",
            cy: "7.5",
            r: ".5",
            fill: "currentColor"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Panda = [ [ "path", {
            d: "M11.25 17.25h1.5L12 18z"
        } ], [ "path", {
            d: "m15 12 2 2"
        } ], [ "path", {
            d: "M18 6.5a.5.5 0 0 0-.5-.5"
        } ], [ "path", {
            d: "M20.69 9.67a4.5 4.5 0 1 0-7.04-5.5 8.35 8.35 0 0 0-3.3 0 4.5 4.5 0 1 0-7.04 5.5C2.49 11.2 2 12.88 2 14.5 2 19.47 6.48 22 12 22s10-2.53 10-7.5c0-1.62-.48-3.3-1.3-4.83"
        } ], [ "path", {
            d: "M6 6.5a.495.495 0 0 1 .5-.5"
        } ], [ "path", {
            d: "m9 12-2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelBottomClose = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 15h18"
        } ], [ "path", {
            d: "m15 8-3 3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelBottomDashed = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M14 15h1"
        } ], [ "path", {
            d: "M19 15h2"
        } ], [ "path", {
            d: "M3 15h2"
        } ], [ "path", {
            d: "M9 15h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelBottomOpen = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 15h18"
        } ], [ "path", {
            d: "m9 10 3-3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelLeftClose = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M9 3v18"
        } ], [ "path", {
            d: "m16 15-3-3 3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelBottom = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 15h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelLeftDashed = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M9 14v1"
        } ], [ "path", {
            d: "M9 19v2"
        } ], [ "path", {
            d: "M9 3v2"
        } ], [ "path", {
            d: "M9 9v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelLeftOpen = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M9 3v18"
        } ], [ "path", {
            d: "m14 9 3 3-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelLeftRightDashed = [ [ "path", {
            d: "M15 10V9"
        } ], [ "path", {
            d: "M15 15v-1"
        } ], [ "path", {
            d: "M15 21v-2"
        } ], [ "path", {
            d: "M15 5V3"
        } ], [ "path", {
            d: "M9 10V9"
        } ], [ "path", {
            d: "M9 15v-1"
        } ], [ "path", {
            d: "M9 21v-2"
        } ], [ "path", {
            d: "M9 5V3"
        } ], [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelLeft = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M9 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelRightClose = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M15 3v18"
        } ], [ "path", {
            d: "m8 9 3 3-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelRightDashed = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M15 14v1"
        } ], [ "path", {
            d: "M15 19v2"
        } ], [ "path", {
            d: "M15 3v2"
        } ], [ "path", {
            d: "M15 9v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelRightOpen = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M15 3v18"
        } ], [ "path", {
            d: "m10 15-3-3 3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelRight = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M15 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelTopBottomDashed = [ [ "path", {
            d: "M14 15h1"
        } ], [ "path", {
            d: "M14 9h1"
        } ], [ "path", {
            d: "M19 15h2"
        } ], [ "path", {
            d: "M19 9h2"
        } ], [ "path", {
            d: "M3 15h2"
        } ], [ "path", {
            d: "M3 9h2"
        } ], [ "path", {
            d: "M9 15h1"
        } ], [ "path", {
            d: "M9 9h1"
        } ], [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelTopClose = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 9h18"
        } ], [ "path", {
            d: "m9 16 3-3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelTopDashed = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M14 9h1"
        } ], [ "path", {
            d: "M19 9h2"
        } ], [ "path", {
            d: "M3 9h2"
        } ], [ "path", {
            d: "M9 9h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelTopOpen = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 9h18"
        } ], [ "path", {
            d: "m15 14-3 3-3-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelTop = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 9h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelsLeftBottom = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M9 3v18"
        } ], [ "path", {
            d: "M9 15h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelsRightBottom = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 15h12"
        } ], [ "path", {
            d: "M15 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PanelsTopLeft = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 9h18"
        } ], [ "path", {
            d: "M9 21V9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Paperclip = [ [ "path", {
            d: "m16 6-8.414 8.586a2 2 0 0 0 2.829 2.829l8.414-8.586a4 4 0 1 0-5.657-5.657l-8.379 8.551a6 6 0 1 0 8.485 8.485l8.379-8.551"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Parentheses = [ [ "path", {
            d: "M8 21s-4-3-4-9 4-9 4-9"
        } ], [ "path", {
            d: "M16 3s4 3 4 9-4 9-4 9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ParkingMeter = [ [ "path", {
            d: "M11 15h2"
        } ], [ "path", {
            d: "M12 12v3"
        } ], [ "path", {
            d: "M12 19v3"
        } ], [ "path", {
            d: "M15.282 19a1 1 0 0 0 .948-.68l2.37-6.988a7 7 0 1 0-13.2 0l2.37 6.988a1 1 0 0 0 .948.68z"
        } ], [ "path", {
            d: "M9 9a3 3 0 1 1 6 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PartyPopper = [ [ "path", {
            d: "M5.8 11.3 2 22l10.7-3.79"
        } ], [ "path", {
            d: "M4 3h.01"
        } ], [ "path", {
            d: "M22 8h.01"
        } ], [ "path", {
            d: "M15 2h.01"
        } ], [ "path", {
            d: "M22 20h.01"
        } ], [ "path", {
            d: "m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10"
        } ], [ "path", {
            d: "m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11c-.11.7-.72 1.22-1.43 1.22H17"
        } ], [ "path", {
            d: "m11 2 .33.82c.34.86-.2 1.82-1.11 1.98C9.52 4.9 9 5.52 9 6.23V7"
        } ], [ "path", {
            d: "M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pause = [ [ "rect", {
            x: "14",
            y: "3",
            width: "5",
            height: "18",
            rx: "1"
        } ], [ "rect", {
            x: "5",
            y: "3",
            width: "5",
            height: "18",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PawPrint = [ [ "circle", {
            cx: "11",
            cy: "4",
            r: "2"
        } ], [ "circle", {
            cx: "18",
            cy: "8",
            r: "2"
        } ], [ "circle", {
            cx: "20",
            cy: "16",
            r: "2"
        } ], [ "path", {
            d: "M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PcCase = [ [ "rect", {
            width: "14",
            height: "20",
            x: "5",
            y: "2",
            rx: "2"
        } ], [ "path", {
            d: "M15 14h.01"
        } ], [ "path", {
            d: "M9 6h6"
        } ], [ "path", {
            d: "M9 10h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PenLine = [ [ "path", {
            d: "M13 21h8"
        } ], [ "path", {
            d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PenOff = [ [ "path", {
            d: "m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982"
        } ], [ "path", {
            d: "m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PenTool = [ [ "path", {
            d: "M15.707 21.293a1 1 0 0 1-1.414 0l-1.586-1.586a1 1 0 0 1 0-1.414l5.586-5.586a1 1 0 0 1 1.414 0l1.586 1.586a1 1 0 0 1 0 1.414z"
        } ], [ "path", {
            d: "m18 13-1.375-6.874a1 1 0 0 0-.746-.776L3.235 2.028a1 1 0 0 0-1.207 1.207L5.35 15.879a1 1 0 0 0 .776.746L13 18"
        } ], [ "path", {
            d: "m2.3 2.3 7.286 7.286"
        } ], [ "circle", {
            cx: "11",
            cy: "11",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PencilLine = [ [ "path", {
            d: "M13 21h8"
        } ], [ "path", {
            d: "m15 5 4 4"
        } ], [ "path", {
            d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pen = [ [ "path", {
            d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PencilOff = [ [ "path", {
            d: "m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982"
        } ], [ "path", {
            d: "m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353"
        } ], [ "path", {
            d: "m15 5 4 4"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PencilRuler = [ [ "path", {
            d: "M13 7 8.7 2.7a2.41 2.41 0 0 0-3.4 0L2.7 5.3a2.41 2.41 0 0 0 0 3.4L7 13"
        } ], [ "path", {
            d: "m8 6 2-2"
        } ], [ "path", {
            d: "m18 16 2-2"
        } ], [ "path", {
            d: "m17 11 4.3 4.3c.94.94.94 2.46 0 3.4l-2.6 2.6c-.94.94-2.46.94-3.4 0L11 17"
        } ], [ "path", {
            d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
        } ], [ "path", {
            d: "m15 5 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pencil = [ [ "path", {
            d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"
        } ], [ "path", {
            d: "m15 5 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pentagon = [ [ "path", {
            d: "M10.83 2.38a2 2 0 0 1 2.34 0l8 5.74a2 2 0 0 1 .73 2.25l-3.04 9.26a2 2 0 0 1-1.9 1.37H7.04a2 2 0 0 1-1.9-1.37L2.1 10.37a2 2 0 0 1 .73-2.25z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Percent = [ [ "line", {
            x1: "19",
            x2: "5",
            y1: "5",
            y2: "19"
        } ], [ "circle", {
            cx: "6.5",
            cy: "6.5",
            r: "2.5"
        } ], [ "circle", {
            cx: "17.5",
            cy: "17.5",
            r: "2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PersonStanding = [ [ "circle", {
            cx: "12",
            cy: "5",
            r: "1"
        } ], [ "path", {
            d: "m9 20 3-6 3 6"
        } ], [ "path", {
            d: "m6 8 6 2 6-2"
        } ], [ "path", {
            d: "M12 10v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PhilippinePeso = [ [ "path", {
            d: "M20 11H4"
        } ], [ "path", {
            d: "M20 7H4"
        } ], [ "path", {
            d: "M7 21V4a1 1 0 0 1 1-1h4a1 1 0 0 1 0 12H7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PhoneCall = [ [ "path", {
            d: "M13 2a9 9 0 0 1 9 9"
        } ], [ "path", {
            d: "M13 6a5 5 0 0 1 5 5"
        } ], [ "path", {
            d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PhoneForwarded = [ [ "path", {
            d: "M14 6h8"
        } ], [ "path", {
            d: "m18 2 4 4-4 4"
        } ], [ "path", {
            d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PhoneIncoming = [ [ "path", {
            d: "M16 2v6h6"
        } ], [ "path", {
            d: "m22 2-6 6"
        } ], [ "path", {
            d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PhoneMissed = [ [ "path", {
            d: "m16 2 6 6"
        } ], [ "path", {
            d: "m22 2-6 6"
        } ], [ "path", {
            d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PhoneOff = [ [ "path", {
            d: "M10.1 13.9a14 14 0 0 0 3.732 2.668 1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2 18 18 0 0 1-12.728-5.272"
        } ], [ "path", {
            d: "M22 2 2 22"
        } ], [ "path", {
            d: "M4.76 13.582A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 .244.473"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PhoneOutgoing = [ [ "path", {
            d: "m16 8 6-6"
        } ], [ "path", {
            d: "M22 8V2h-6"
        } ], [ "path", {
            d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Phone = [ [ "path", {
            d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pi = [ [ "line", {
            x1: "9",
            x2: "9",
            y1: "4",
            y2: "20"
        } ], [ "path", {
            d: "M4 7c0-1.7 1.3-3 3-3h13"
        } ], [ "path", {
            d: "M18 20c-1.7 0-3-1.3-3-3V4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Piano = [ [ "path", {
            d: "M18.5 8c-1.4 0-2.6-.8-3.2-2A6.87 6.87 0 0 0 2 9v11a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-8.5C22 9.6 20.4 8 18.5 8"
        } ], [ "path", {
            d: "M2 14h20"
        } ], [ "path", {
            d: "M6 14v4"
        } ], [ "path", {
            d: "M10 14v4"
        } ], [ "path", {
            d: "M14 14v4"
        } ], [ "path", {
            d: "M18 14v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pickaxe = [ [ "path", {
            d: "m14 13-8.381 8.38a1 1 0 0 1-3.001-3L11 9.999"
        } ], [ "path", {
            d: "M15.973 4.027A13 13 0 0 0 5.902 2.373c-1.398.342-1.092 2.158.277 2.601a19.9 19.9 0 0 1 5.822 3.024"
        } ], [ "path", {
            d: "M16.001 11.999a19.9 19.9 0 0 1 3.024 5.824c.444 1.369 2.26 1.676 2.603.278A13 13 0 0 0 20 8.069"
        } ], [ "path", {
            d: "M18.352 3.352a1.205 1.205 0 0 0-1.704 0l-5.296 5.296a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l5.296-5.296a1.205 1.205 0 0 0 0-1.704z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PictureInPicture2 = [ [ "path", {
            d: "M21 9V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h4"
        } ], [ "rect", {
            width: "10",
            height: "7",
            x: "12",
            y: "13",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PictureInPicture = [ [ "path", {
            d: "M2 10h6V4"
        } ], [ "path", {
            d: "m2 4 6 6"
        } ], [ "path", {
            d: "M21 10V7a2 2 0 0 0-2-2h-7"
        } ], [ "path", {
            d: "M3 14v2a2 2 0 0 0 2 2h3"
        } ], [ "rect", {
            x: "12",
            y: "14",
            width: "10",
            height: "7",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PiggyBank = [ [ "path", {
            d: "M11 17h3v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a3.16 3.16 0 0 0 2-2h1a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1h-1a5 5 0 0 0-2-4V3a4 4 0 0 0-3.2 1.6l-.3.4H11a6 6 0 0 0-6 6v1a5 5 0 0 0 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1z"
        } ], [ "path", {
            d: "M16 10h.01"
        } ], [ "path", {
            d: "M2 8v1a2 2 0 0 0 2 2h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PilcrowRight = [ [ "path", {
            d: "M10 3v11"
        } ], [ "path", {
            d: "M10 9H7a1 1 0 0 1 0-6h8"
        } ], [ "path", {
            d: "M14 3v11"
        } ], [ "path", {
            d: "m18 14 4 4H2"
        } ], [ "path", {
            d: "m22 18-4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PilcrowLeft = [ [ "path", {
            d: "M14 3v11"
        } ], [ "path", {
            d: "M14 9h-3a3 3 0 0 1 0-6h9"
        } ], [ "path", {
            d: "M18 3v11"
        } ], [ "path", {
            d: "M22 18H2l4-4"
        } ], [ "path", {
            d: "m6 22-4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pilcrow = [ [ "path", {
            d: "M13 4v16"
        } ], [ "path", {
            d: "M17 4v16"
        } ], [ "path", {
            d: "M19 4H9.5a4.5 4.5 0 0 0 0 9H13"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PillBottle = [ [ "path", {
            d: "M18 11h-4a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h4"
        } ], [ "path", {
            d: "M6 7v13a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7"
        } ], [ "rect", {
            width: "16",
            height: "5",
            x: "4",
            y: "2",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pill = [ [ "path", {
            d: "m10.5 20.5 10-10a4.95 4.95 0 1 0-7-7l-10 10a4.95 4.95 0 1 0 7 7Z"
        } ], [ "path", {
            d: "m8.5 8.5 7 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PinOff = [ [ "path", {
            d: "M12 17v5"
        } ], [ "path", {
            d: "M15 9.34V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H7.89"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M9 9v1.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pin = [ [ "path", {
            d: "M12 17v5"
        } ], [ "path", {
            d: "M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pipette = [ [ "path", {
            d: "m12 9-8.414 8.414A2 2 0 0 0 3 18.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 3.828 21h1.344a2 2 0 0 0 1.414-.586L15 12"
        } ], [ "path", {
            d: "m18 9 .4.4a1 1 0 1 1-3 3l-3.8-3.8a1 1 0 1 1 3-3l.4.4 3.4-3.4a1 1 0 1 1 3 3z"
        } ], [ "path", {
            d: "m2 22 .414-.414"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pizza = [ [ "path", {
            d: "m12 14-1 1"
        } ], [ "path", {
            d: "m13.75 18.25-1.25 1.42"
        } ], [ "path", {
            d: "M17.775 5.654a15.68 15.68 0 0 0-12.121 12.12"
        } ], [ "path", {
            d: "M18.8 9.3a1 1 0 0 0 2.1 7.7"
        } ], [ "path", {
            d: "M21.964 20.732a1 1 0 0 1-1.232 1.232l-18-5a1 1 0 0 1-.695-1.232A19.68 19.68 0 0 1 15.732 2.037a1 1 0 0 1 1.232.695z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PlaneLanding = [ [ "path", {
            d: "M2 22h20"
        } ], [ "path", {
            d: "M3.77 10.77 2 9l2-4.5 1.1.55c.55.28.9.84.9 1.45s.35 1.17.9 1.45L8 8.5l3-6 1.05.53a2 2 0 0 1 1.09 1.52l.72 5.4a2 2 0 0 0 1.09 1.52l4.4 2.2c.42.22.78.55 1.01.96l.6 1.03c.49.88-.06 1.98-1.06 2.1l-1.18.15c-.47.06-.95-.02-1.37-.24L4.29 11.15a2 2 0 0 1-.52-.38Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PlaneTakeoff = [ [ "path", {
            d: "M2 22h20"
        } ], [ "path", {
            d: "M6.36 17.4 4 17l-2-4 1.1-.55a2 2 0 0 1 1.8 0l.17.1a2 2 0 0 0 1.8 0L8 12 5 6l.9-.45a2 2 0 0 1 2.09.2l4.02 3a2 2 0 0 0 2.1.2l4.19-2.06a2.41 2.41 0 0 1 1.73-.17L21 7a1.4 1.4 0 0 1 .87 1.99l-.38.76c-.23.46-.6.84-1.07 1.08L7.58 17.2a2 2 0 0 1-1.22.18Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Plane = [ [ "path", {
            d: "M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Play = [ [ "path", {
            d: "M5 5a2 2 0 0 1 3.008-1.728l11.997 6.998a2 2 0 0 1 .003 3.458l-12 7A2 2 0 0 1 5 19z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Plug2 = [ [ "path", {
            d: "M9 2v6"
        } ], [ "path", {
            d: "M15 2v6"
        } ], [ "path", {
            d: "M12 17v5"
        } ], [ "path", {
            d: "M5 8h14"
        } ], [ "path", {
            d: "M6 11V8h12v3a6 6 0 1 1-12 0Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PlugZap = [ [ "path", {
            d: "M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z"
        } ], [ "path", {
            d: "m2 22 3-3"
        } ], [ "path", {
            d: "M7.5 13.5 10 11"
        } ], [ "path", {
            d: "M10.5 16.5 13 14"
        } ], [ "path", {
            d: "m18 3-4 4h6l-4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Plug = [ [ "path", {
            d: "M12 22v-5"
        } ], [ "path", {
            d: "M9 8V2"
        } ], [ "path", {
            d: "M15 8V2"
        } ], [ "path", {
            d: "M18 8v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4V8Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Plus = [ [ "path", {
            d: "M5 12h14"
        } ], [ "path", {
            d: "M12 5v14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PocketKnife = [ [ "path", {
            d: "M3 2v1c0 1 2 1 2 2S3 6 3 7s2 1 2 2-2 1-2 2 2 1 2 2"
        } ], [ "path", {
            d: "M18 6h.01"
        } ], [ "path", {
            d: "M6 18h.01"
        } ], [ "path", {
            d: "M20.83 8.83a4 4 0 0 0-5.66-5.66l-12 12a4 4 0 1 0 5.66 5.66Z"
        } ], [ "path", {
            d: "M18 11.66V22a4 4 0 0 0 4-4V6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Podcast = [ [ "path", {
            d: "M13 17a1 1 0 1 0-2 0l.5 4.5a0.5 0.5 0 0 0 1 0z",
            fill: "currentColor"
        } ], [ "path", {
            d: "M16.85 18.58a9 9 0 1 0-9.7 0"
        } ], [ "path", {
            d: "M8 14a5 5 0 1 1 8 0"
        } ], [ "circle", {
            cx: "12",
            cy: "11",
            r: "1",
            fill: "currentColor"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pocket = [ [ "path", {
            d: "M20 3a2 2 0 0 1 2 2v6a1 1 0 0 1-20 0V5a2 2 0 0 1 2-2z"
        } ], [ "path", {
            d: "m8 10 4 4 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pointer = [ [ "path", {
            d: "M22 14a8 8 0 0 1-8 8"
        } ], [ "path", {
            d: "M18 11v-1a2 2 0 0 0-2-2a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M14 10V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1"
        } ], [ "path", {
            d: "M10 9.5V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v10"
        } ], [ "path", {
            d: "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PointerOff = [ [ "path", {
            d: "M10 4.5V4a2 2 0 0 0-2.41-1.957"
        } ], [ "path", {
            d: "M13.9 8.4a2 2 0 0 0-1.26-1.295"
        } ], [ "path", {
            d: "M21.7 16.2A8 8 0 0 0 22 14v-3a2 2 0 1 0-4 0v-1a2 2 0 0 0-3.63-1.158"
        } ], [ "path", {
            d: "m7 15-1.8-1.8a2 2 0 0 0-2.79 2.86L6 19.7a7.74 7.74 0 0 0 6 2.3h2a8 8 0 0 0 5.657-2.343"
        } ], [ "path", {
            d: "M6 6v8"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Popcorn = [ [ "path", {
            d: "M18 8a2 2 0 0 0 0-4 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0 0 4"
        } ], [ "path", {
            d: "M10 22 9 8"
        } ], [ "path", {
            d: "m14 22 1-14"
        } ], [ "path", {
            d: "M20 8c.5 0 .9.4.8 1l-2.6 12c-.1.5-.7 1-1.2 1H7c-.6 0-1.1-.4-1.2-1L3.2 9c-.1-.6.3-1 .8-1Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Popsicle = [ [ "path", {
            d: "M18.6 14.4c.8-.8.8-2 0-2.8l-8.1-8.1a4.95 4.95 0 1 0-7.1 7.1l8.1 8.1c.9.7 2.1.7 2.9-.1Z"
        } ], [ "path", {
            d: "m22 22-5.5-5.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PoundSterling = [ [ "path", {
            d: "M18 7c0-5.333-8-5.333-8 0"
        } ], [ "path", {
            d: "M10 7v14"
        } ], [ "path", {
            d: "M6 21h12"
        } ], [ "path", {
            d: "M6 13h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PowerOff = [ [ "path", {
            d: "M18.36 6.64A9 9 0 0 1 20.77 15"
        } ], [ "path", {
            d: "M6.16 6.16a9 9 0 1 0 12.68 12.68"
        } ], [ "path", {
            d: "M12 2v4"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Presentation = [ [ "path", {
            d: "M2 3h20"
        } ], [ "path", {
            d: "M21 3v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V3"
        } ], [ "path", {
            d: "m7 21 5-5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Power = [ [ "path", {
            d: "M12 2v10"
        } ], [ "path", {
            d: "M18.4 6.6a9 9 0 1 1-12.77.04"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const PrinterCheck = [ [ "path", {
            d: "M13.5 22H7a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v.5"
        } ], [ "path", {
            d: "m16 19 2 2 4-4"
        } ], [ "path", {
            d: "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Printer = [ [ "path", {
            d: "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6"
        } ], [ "rect", {
            x: "6",
            y: "14",
            width: "12",
            height: "8",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Projector = [ [ "path", {
            d: "M5 7 3 5"
        } ], [ "path", {
            d: "M9 6V3"
        } ], [ "path", {
            d: "m13 7 2-2"
        } ], [ "circle", {
            cx: "9",
            cy: "13",
            r: "3"
        } ], [ "path", {
            d: "M11.83 12H20a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.17"
        } ], [ "path", {
            d: "M16 16h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Proportions = [ [ "rect", {
            width: "20",
            height: "16",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M12 9v11"
        } ], [ "path", {
            d: "M2 9h13a2 2 0 0 1 2 2v9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Pyramid = [ [ "path", {
            d: "M2.5 16.88a1 1 0 0 1-.32-1.43l9-13.02a1 1 0 0 1 1.64 0l9 13.01a1 1 0 0 1-.32 1.44l-8.51 4.86a2 2 0 0 1-1.98 0Z"
        } ], [ "path", {
            d: "M12 2v20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Puzzle = [ [ "path", {
            d: "M15.39 4.39a1 1 0 0 0 1.68-.474 2.5 2.5 0 1 1 3.014 3.015 1 1 0 0 0-.474 1.68l1.683 1.682a2.414 2.414 0 0 1 0 3.414L19.61 15.39a1 1 0 0 1-1.68-.474 2.5 2.5 0 1 0-3.014 3.015 1 1 0 0 1 .474 1.68l-1.683 1.682a2.414 2.414 0 0 1-3.414 0L8.61 19.61a1 1 0 0 0-1.68.474 2.5 2.5 0 1 1-3.014-3.015 1 1 0 0 0 .474-1.68l-1.683-1.682a2.414 2.414 0 0 1 0-3.414L4.39 8.61a1 1 0 0 1 1.68.474 2.5 2.5 0 1 0 3.014-3.015 1 1 0 0 1-.474-1.68l1.683-1.682a2.414 2.414 0 0 1 3.414 0z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const QrCode = [ [ "rect", {
            width: "5",
            height: "5",
            x: "3",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "5",
            height: "5",
            x: "16",
            y: "3",
            rx: "1"
        } ], [ "rect", {
            width: "5",
            height: "5",
            x: "3",
            y: "16",
            rx: "1"
        } ], [ "path", {
            d: "M21 16h-3a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "M21 21v.01"
        } ], [ "path", {
            d: "M12 7v3a2 2 0 0 1-2 2H7"
        } ], [ "path", {
            d: "M3 12h.01"
        } ], [ "path", {
            d: "M12 3h.01"
        } ], [ "path", {
            d: "M12 16v.01"
        } ], [ "path", {
            d: "M16 12h1"
        } ], [ "path", {
            d: "M21 12v.01"
        } ], [ "path", {
            d: "M12 21v-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Quote = [ [ "path", {
            d: "M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z"
        } ], [ "path", {
            d: "M5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rabbit = [ [ "path", {
            d: "M13 16a3 3 0 0 1 2.24 5"
        } ], [ "path", {
            d: "M18 12h.01"
        } ], [ "path", {
            d: "M18 21h-8a4 4 0 0 1-4-4 7 7 0 0 1 7-7h.2L9.6 6.4a1 1 0 1 1 2.8-2.8L15.8 7h.2c3.3 0 6 2.7 6 6v1a2 2 0 0 1-2 2h-1a3 3 0 0 0-3 3"
        } ], [ "path", {
            d: "M20 8.54V4a2 2 0 1 0-4 0v3"
        } ], [ "path", {
            d: "M7.612 12.524a3 3 0 1 0-1.6 4.3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Radar = [ [ "path", {
            d: "M19.07 4.93A10 10 0 0 0 6.99 3.34"
        } ], [ "path", {
            d: "M4 6h.01"
        } ], [ "path", {
            d: "M2.29 9.62A10 10 0 1 0 21.31 8.35"
        } ], [ "path", {
            d: "M16.24 7.76A6 6 0 1 0 8.23 16.67"
        } ], [ "path", {
            d: "M12 18h.01"
        } ], [ "path", {
            d: "M17.99 11.66A6 6 0 0 1 15.77 16.67"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ], [ "path", {
            d: "m13.41 10.59 5.66-5.66"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Radiation = [ [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M14 15.4641a4 4 0 0 1-4 0L7.52786 19.74597 A 1 1 0 0 0 7.99303 21.16211 10 10 0 0 0 16.00697 21.16211 1 1 0 0 0 16.47214 19.74597z"
        } ], [ "path", {
            d: "M16 12a4 4 0 0 0-2-3.464l2.472-4.282a1 1 0 0 1 1.46-.305 10 10 0 0 1 4.006 6.94A1 1 0 0 1 21 12z"
        } ], [ "path", {
            d: "M8 12a4 4 0 0 1 2-3.464L7.528 4.254a1 1 0 0 0-1.46-.305 10 10 0 0 0-4.006 6.94A1 1 0 0 0 3 12z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RadioReceiver = [ [ "path", {
            d: "M5 16v2"
        } ], [ "path", {
            d: "M19 16v2"
        } ], [ "rect", {
            width: "20",
            height: "8",
            x: "2",
            y: "8",
            rx: "2"
        } ], [ "path", {
            d: "M18 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Radical = [ [ "path", {
            d: "M3 12h3.28a1 1 0 0 1 .948.684l2.298 7.934a.5.5 0 0 0 .96-.044L13.82 4.771A1 1 0 0 1 14.792 4H21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RadioTower = [ [ "path", {
            d: "M4.9 16.1C1 12.2 1 5.8 4.9 1.9"
        } ], [ "path", {
            d: "M7.8 4.7a6.14 6.14 0 0 0-.8 7.5"
        } ], [ "circle", {
            cx: "12",
            cy: "9",
            r: "2"
        } ], [ "path", {
            d: "M16.2 4.8c2 2 2.26 5.11.8 7.47"
        } ], [ "path", {
            d: "M19.1 1.9a9.96 9.96 0 0 1 0 14.1"
        } ], [ "path", {
            d: "M9.5 18h5"
        } ], [ "path", {
            d: "m8 22 4-11 4 11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Radio = [ [ "path", {
            d: "M16.247 7.761a6 6 0 0 1 0 8.478"
        } ], [ "path", {
            d: "M19.075 4.933a10 10 0 0 1 0 14.134"
        } ], [ "path", {
            d: "M4.925 19.067a10 10 0 0 1 0-14.134"
        } ], [ "path", {
            d: "M7.753 16.239a6 6 0 0 1 0-8.478"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Radius = [ [ "path", {
            d: "M20.34 17.52a10 10 0 1 0-2.82 2.82"
        } ], [ "circle", {
            cx: "19",
            cy: "19",
            r: "2"
        } ], [ "path", {
            d: "m13.41 13.41 4.18 4.18"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RailSymbol = [ [ "path", {
            d: "M5 15h14"
        } ], [ "path", {
            d: "M5 9h14"
        } ], [ "path", {
            d: "m14 20-5-5 6-6-5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rainbow = [ [ "path", {
            d: "M22 17a10 10 0 0 0-20 0"
        } ], [ "path", {
            d: "M6 17a6 6 0 0 1 12 0"
        } ], [ "path", {
            d: "M10 17a2 2 0 0 1 4 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rat = [ [ "path", {
            d: "M13 22H4a2 2 0 0 1 0-4h12"
        } ], [ "path", {
            d: "M13.236 18a3 3 0 0 0-2.2-5"
        } ], [ "path", {
            d: "M16 9h.01"
        } ], [ "path", {
            d: "M16.82 3.94a3 3 0 1 1 3.237 4.868l1.815 2.587a1.5 1.5 0 0 1-1.5 2.1l-2.872-.453a3 3 0 0 0-3.5 3"
        } ], [ "path", {
            d: "M17 4.988a3 3 0 1 0-5.2 2.052A7 7 0 0 0 4 14.015 4 4 0 0 0 8 18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ratio = [ [ "rect", {
            width: "12",
            height: "20",
            x: "6",
            y: "2",
            rx: "2"
        } ], [ "rect", {
            width: "20",
            height: "12",
            x: "2",
            y: "6",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptCent = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "M12 6.5v11"
        } ], [ "path", {
            d: "M15 9.4a4 4 0 1 0 0 5.2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptEuro = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "M8 12h5"
        } ], [ "path", {
            d: "M16 9.5a4 4 0 1 0 0 5.2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptIndianRupee = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "M8 7h8"
        } ], [ "path", {
            d: "M12 17.5 8 15h1a4 4 0 0 0 0-8"
        } ], [ "path", {
            d: "M8 11h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptJapaneseYen = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "m12 10 3-3"
        } ], [ "path", {
            d: "m9 7 3 3v7.5"
        } ], [ "path", {
            d: "M9 11h6"
        } ], [ "path", {
            d: "M9 15h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptPoundSterling = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "M8 13h5"
        } ], [ "path", {
            d: "M10 17V9.5a2.5 2.5 0 0 1 5 0"
        } ], [ "path", {
            d: "M8 17h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptSwissFranc = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "M10 17V7h5"
        } ], [ "path", {
            d: "M10 11h4"
        } ], [ "path", {
            d: "M8 15h5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptRussianRuble = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "M8 15h5"
        } ], [ "path", {
            d: "M8 11h5a2 2 0 1 0 0-4h-3v10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptText = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "M14 8H8"
        } ], [ "path", {
            d: "M16 12H8"
        } ], [ "path", {
            d: "M13 16H8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReceiptTurkishLira = [ [ "path", {
            d: "M10 6.5v11a5.5 5.5 0 0 0 5.5-5.5"
        } ], [ "path", {
            d: "m14 8-6 3"
        } ], [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Receipt = [ [ "path", {
            d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"
        } ], [ "path", {
            d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"
        } ], [ "path", {
            d: "M12 17.5v-11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RectangleCircle = [ [ "path", {
            d: "M14 4v16H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1z"
        } ], [ "circle", {
            cx: "14",
            cy: "12",
            r: "8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RectangleEllipsis = [ [ "rect", {
            width: "20",
            height: "12",
            x: "2",
            y: "6",
            rx: "2"
        } ], [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M17 12h.01"
        } ], [ "path", {
            d: "M7 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RectangleGoggles = [ [ "path", {
            d: "M20 6a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-4a2 2 0 0 1-1.6-.8l-1.6-2.13a1 1 0 0 0-1.6 0L9.6 17.2A2 2 0 0 1 8 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RectangleHorizontal = [ [ "rect", {
            width: "20",
            height: "12",
            x: "2",
            y: "6",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RectangleVertical = [ [ "rect", {
            width: "12",
            height: "20",
            x: "6",
            y: "2",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Recycle = [ [ "path", {
            d: "M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5"
        } ], [ "path", {
            d: "M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12"
        } ], [ "path", {
            d: "m14 16-3 3 3 3"
        } ], [ "path", {
            d: "M8.293 13.596 7.196 9.5 3.1 10.598"
        } ], [ "path", {
            d: "m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843"
        } ], [ "path", {
            d: "m13.378 9.633 4.096 1.098 1.097-4.096"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Redo2 = [ [ "path", {
            d: "m15 14 5-5-5-5"
        } ], [ "path", {
            d: "M20 9H9.5A5.5 5.5 0 0 0 4 14.5A5.5 5.5 0 0 0 9.5 20H13"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RedoDot = [ [ "circle", {
            cx: "12",
            cy: "17",
            r: "1"
        } ], [ "path", {
            d: "M21 7v6h-6"
        } ], [ "path", {
            d: "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Redo = [ [ "path", {
            d: "M21 7v6h-6"
        } ], [ "path", {
            d: "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RefreshCcw = [ [ "path", {
            d: "M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"
        } ], [ "path", {
            d: "M3 3v5h5"
        } ], [ "path", {
            d: "M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16"
        } ], [ "path", {
            d: "M16 16h5v5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RefreshCcwDot = [ [ "path", {
            d: "M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"
        } ], [ "path", {
            d: "M3 3v5h5"
        } ], [ "path", {
            d: "M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16"
        } ], [ "path", {
            d: "M16 16h5v5"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RefreshCwOff = [ [ "path", {
            d: "M21 8L18.74 5.74A9.75 9.75 0 0 0 12 3C11 3 10.03 3.16 9.13 3.47"
        } ], [ "path", {
            d: "M8 16H3v5"
        } ], [ "path", {
            d: "M3 12C3 9.51 4 7.26 5.64 5.64"
        } ], [ "path", {
            d: "m3 16 2.26 2.26A9.75 9.75 0 0 0 12 21c2.49 0 4.74-1 6.36-2.64"
        } ], [ "path", {
            d: "M21 12c0 1-.16 1.97-.47 2.87"
        } ], [ "path", {
            d: "M21 3v5h-5"
        } ], [ "path", {
            d: "M22 22 2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RefreshCw = [ [ "path", {
            d: "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"
        } ], [ "path", {
            d: "M21 3v5h-5"
        } ], [ "path", {
            d: "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"
        } ], [ "path", {
            d: "M8 16H3v5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Refrigerator = [ [ "path", {
            d: "M5 6a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6Z"
        } ], [ "path", {
            d: "M5 10h14"
        } ], [ "path", {
            d: "M15 7v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Regex = [ [ "path", {
            d: "M17 3v10"
        } ], [ "path", {
            d: "m12.67 5.5 8.66 5"
        } ], [ "path", {
            d: "m12.67 10.5 8.66-5"
        } ], [ "path", {
            d: "M9 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RemoveFormatting = [ [ "path", {
            d: "M4 7V4h16v3"
        } ], [ "path", {
            d: "M5 20h6"
        } ], [ "path", {
            d: "M13 4 8 20"
        } ], [ "path", {
            d: "m15 15 5 5"
        } ], [ "path", {
            d: "m20 15-5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Repeat1 = [ [ "path", {
            d: "m17 2 4 4-4 4"
        } ], [ "path", {
            d: "M3 11v-1a4 4 0 0 1 4-4h14"
        } ], [ "path", {
            d: "m7 22-4-4 4-4"
        } ], [ "path", {
            d: "M21 13v1a4 4 0 0 1-4 4H3"
        } ], [ "path", {
            d: "M11 10h1v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Repeat2 = [ [ "path", {
            d: "m2 9 3-3 3 3"
        } ], [ "path", {
            d: "M13 18H7a2 2 0 0 1-2-2V6"
        } ], [ "path", {
            d: "m22 15-3 3-3-3"
        } ], [ "path", {
            d: "M11 6h6a2 2 0 0 1 2 2v10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Repeat = [ [ "path", {
            d: "m17 2 4 4-4 4"
        } ], [ "path", {
            d: "M3 11v-1a4 4 0 0 1 4-4h14"
        } ], [ "path", {
            d: "m7 22-4-4 4-4"
        } ], [ "path", {
            d: "M21 13v1a4 4 0 0 1-4 4H3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReplaceAll = [ [ "path", {
            d: "M14 14a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M14 4a2 2 0 0 1 2-2"
        } ], [ "path", {
            d: "M16 10a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M20 14a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M20 2a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M22 8a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "m3 7 3 3 3-3"
        } ], [ "path", {
            d: "M6 10V5a 3 3 0 0 1 3-3h1"
        } ], [ "rect", {
            x: "2",
            y: "14",
            width: "8",
            height: "8",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Replace = [ [ "path", {
            d: "M14 4a2 2 0 0 1 2-2"
        } ], [ "path", {
            d: "M16 10a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M20 2a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M22 8a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "m3 7 3 3 3-3"
        } ], [ "path", {
            d: "M6 10V5a3 3 0 0 1 3-3h1"
        } ], [ "rect", {
            x: "2",
            y: "14",
            width: "8",
            height: "8",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ReplyAll = [ [ "path", {
            d: "m12 17-5-5 5-5"
        } ], [ "path", {
            d: "M22 18v-2a4 4 0 0 0-4-4H7"
        } ], [ "path", {
            d: "m7 17-5-5 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Reply = [ [ "path", {
            d: "M20 18v-2a4 4 0 0 0-4-4H4"
        } ], [ "path", {
            d: "m9 17-5-5 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rewind = [ [ "path", {
            d: "M12 6a2 2 0 0 0-3.414-1.414l-6 6a2 2 0 0 0 0 2.828l6 6A2 2 0 0 0 12 18z"
        } ], [ "path", {
            d: "M22 6a2 2 0 0 0-3.414-1.414l-6 6a2 2 0 0 0 0 2.828l6 6A2 2 0 0 0 22 18z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ribbon = [ [ "path", {
            d: "M12 11.22C11 9.997 10 9 10 8a2 2 0 0 1 4 0c0 1-.998 2.002-2.01 3.22"
        } ], [ "path", {
            d: "m12 18 2.57-3.5"
        } ], [ "path", {
            d: "M6.243 9.016a7 7 0 0 1 11.507-.009"
        } ], [ "path", {
            d: "M9.35 14.53 12 11.22"
        } ], [ "path", {
            d: "M9.35 14.53C7.728 12.246 6 10.221 6 7a6 5 0 0 1 12 0c-.005 3.22-1.778 5.235-3.43 7.5l3.557 4.527a1 1 0 0 1-.203 1.43l-1.894 1.36a1 1 0 0 1-1.384-.215L12 18l-2.679 3.593a1 1 0 0 1-1.39.213l-1.865-1.353a1 1 0 0 1-.203-1.422z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rocket = [ [ "path", {
            d: "M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z"
        } ], [ "path", {
            d: "m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z"
        } ], [ "path", {
            d: "M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0"
        } ], [ "path", {
            d: "M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RockingChair = [ [ "polyline", {
            points: "3.5 2 6.5 12.5 18 12.5"
        } ], [ "line", {
            x1: "9.5",
            x2: "5.5",
            y1: "12.5",
            y2: "20"
        } ], [ "line", {
            x1: "15",
            x2: "18.5",
            y1: "12.5",
            y2: "20"
        } ], [ "path", {
            d: "M2.75 18a13 13 0 0 0 18.5 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RollerCoaster = [ [ "path", {
            d: "M6 19V5"
        } ], [ "path", {
            d: "M10 19V6.8"
        } ], [ "path", {
            d: "M14 19v-7.8"
        } ], [ "path", {
            d: "M18 5v4"
        } ], [ "path", {
            d: "M18 19v-6"
        } ], [ "path", {
            d: "M22 19V9"
        } ], [ "path", {
            d: "M2 19V9a4 4 0 0 1 4-4c2 0 4 1.33 6 4s4 4 6 4a4 4 0 1 0-3-6.65"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rose = [ [ "path", {
            d: "M17 10h-1a4 4 0 1 1 4-4v.534"
        } ], [ "path", {
            d: "M17 6h1a4 4 0 0 1 1.42 7.74l-2.29.87a6 6 0 0 1-5.339-10.68l2.069-1.31"
        } ], [ "path", {
            d: "M4.5 17c2.8-.5 4.4 0 5.5.8s1.8 2.2 2.3 3.7c-2 .4-3.5.4-4.8-.3-1.2-.6-2.3-1.9-3-4.2"
        } ], [ "path", {
            d: "M9.77 12C4 15 2 22 2 22"
        } ], [ "circle", {
            cx: "17",
            cy: "8",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rotate3d = [ [ "path", {
            d: "M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2"
        } ], [ "path", {
            d: "m15.194 13.707 3.814 1.86-1.86 3.814"
        } ], [ "path", {
            d: "M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RotateCcwKey = [ [ "path", {
            d: "m14.5 9.5 1 1"
        } ], [ "path", {
            d: "m15.5 8.5-4 4"
        } ], [ "path", {
            d: "M3 12a9 9 0 1 0 9-9 9.74 9.74 0 0 0-6.74 2.74L3 8"
        } ], [ "path", {
            d: "M3 3v5h5"
        } ], [ "circle", {
            cx: "10",
            cy: "14",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RotateCcwSquare = [ [ "path", {
            d: "M20 9V7a2 2 0 0 0-2-2h-6"
        } ], [ "path", {
            d: "m15 2-3 3 3 3"
        } ], [ "path", {
            d: "M20 13v5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RotateCcw = [ [ "path", {
            d: "M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"
        } ], [ "path", {
            d: "M3 3v5h5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RotateCwSquare = [ [ "path", {
            d: "M12 5H6a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "m9 8 3-3-3-3"
        } ], [ "path", {
            d: "M4 14v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RotateCw = [ [ "path", {
            d: "M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8"
        } ], [ "path", {
            d: "M21 3v5h-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RouteOff = [ [ "circle", {
            cx: "6",
            cy: "19",
            r: "3"
        } ], [ "path", {
            d: "M9 19h8.5c.4 0 .9-.1 1.3-.2"
        } ], [ "path", {
            d: "M5.2 5.2A3.5 3.53 0 0 0 6.5 12H12"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M21 15.3a3.5 3.5 0 0 0-3.3-3.3"
        } ], [ "path", {
            d: "M15 5h-4.3"
        } ], [ "circle", {
            cx: "18",
            cy: "5",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Route = [ [ "circle", {
            cx: "6",
            cy: "19",
            r: "3"
        } ], [ "path", {
            d: "M9 19h8.5a3.5 3.5 0 0 0 0-7h-11a3.5 3.5 0 0 1 0-7H15"
        } ], [ "circle", {
            cx: "18",
            cy: "5",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Router = [ [ "rect", {
            width: "20",
            height: "8",
            x: "2",
            y: "14",
            rx: "2"
        } ], [ "path", {
            d: "M6.01 18H6"
        } ], [ "path", {
            d: "M10.01 18H10"
        } ], [ "path", {
            d: "M15 10v4"
        } ], [ "path", {
            d: "M17.84 7.17a4 4 0 0 0-5.66 0"
        } ], [ "path", {
            d: "M20.66 4.34a8 8 0 0 0-11.31 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rows2 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 12h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rows3 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M21 9H3"
        } ], [ "path", {
            d: "M21 15H3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rows4 = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M21 7.5H3"
        } ], [ "path", {
            d: "M21 12H3"
        } ], [ "path", {
            d: "M21 16.5H3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Rss = [ [ "path", {
            d: "M4 11a9 9 0 0 1 9 9"
        } ], [ "path", {
            d: "M4 4a16 16 0 0 1 16 16"
        } ], [ "circle", {
            cx: "5",
            cy: "19",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RulerDimensionLine = [ [ "path", {
            d: "M12 15v-3.014"
        } ], [ "path", {
            d: "M16 15v-3.014"
        } ], [ "path", {
            d: "M20 6H4"
        } ], [ "path", {
            d: "M20 8V4"
        } ], [ "path", {
            d: "M4 8V4"
        } ], [ "path", {
            d: "M8 15v-3.014"
        } ], [ "rect", {
            x: "3",
            y: "12",
            width: "18",
            height: "7",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const RussianRuble = [ [ "path", {
            d: "M6 11h8a4 4 0 0 0 0-8H9v18"
        } ], [ "path", {
            d: "M6 15h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ruler = [ [ "path", {
            d: "M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z"
        } ], [ "path", {
            d: "m14.5 12.5 2-2"
        } ], [ "path", {
            d: "m11.5 9.5 2-2"
        } ], [ "path", {
            d: "m8.5 6.5 2-2"
        } ], [ "path", {
            d: "m17.5 15.5 2-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sailboat = [ [ "path", {
            d: "M10 2v15"
        } ], [ "path", {
            d: "M7 22a4 4 0 0 1-4-4 1 1 0 0 1 1-1h16a1 1 0 0 1 1 1 4 4 0 0 1-4 4z"
        } ], [ "path", {
            d: "M9.159 2.46a1 1 0 0 1 1.521-.193l9.977 8.98A1 1 0 0 1 20 13H4a1 1 0 0 1-.824-1.567z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Salad = [ [ "path", {
            d: "M7 21h10"
        } ], [ "path", {
            d: "M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z"
        } ], [ "path", {
            d: "M11.38 12a2.4 2.4 0 0 1-.4-4.77 2.4 2.4 0 0 1 3.2-2.77 2.4 2.4 0 0 1 3.47-.63 2.4 2.4 0 0 1 3.37 3.37 2.4 2.4 0 0 1-1.1 3.7 2.51 2.51 0 0 1 .03 1.1"
        } ], [ "path", {
            d: "m13 12 4-4"
        } ], [ "path", {
            d: "M10.9 7.25A3.99 3.99 0 0 0 4 10c0 .73.2 1.41.54 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SatelliteDish = [ [ "path", {
            d: "M4 10a7.31 7.31 0 0 0 10 10Z"
        } ], [ "path", {
            d: "m9 15 3-3"
        } ], [ "path", {
            d: "M17 13a6 6 0 0 0-6-6"
        } ], [ "path", {
            d: "M21 13A10 10 0 0 0 11 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sandwich = [ [ "path", {
            d: "m2.37 11.223 8.372-6.777a2 2 0 0 1 2.516 0l8.371 6.777"
        } ], [ "path", {
            d: "M21 15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-5.25"
        } ], [ "path", {
            d: "M3 15a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h9"
        } ], [ "path", {
            d: "m6.67 15 6.13 4.6a2 2 0 0 0 2.8-.4l3.15-4.2"
        } ], [ "rect", {
            width: "20",
            height: "4",
            x: "2",
            y: "11",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Satellite = [ [ "path", {
            d: "m13.5 6.5-3.148-3.148a1.205 1.205 0 0 0-1.704 0L6.352 5.648a1.205 1.205 0 0 0 0 1.704L9.5 10.5"
        } ], [ "path", {
            d: "M16.5 7.5 19 5"
        } ], [ "path", {
            d: "m17.5 10.5 3.148 3.148a1.205 1.205 0 0 1 0 1.704l-2.296 2.296a1.205 1.205 0 0 1-1.704 0L13.5 14.5"
        } ], [ "path", {
            d: "M9 21a6 6 0 0 0-6-6"
        } ], [ "path", {
            d: "M9.352 10.648a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l4.296-4.296a1.205 1.205 0 0 0 0-1.704l-2.296-2.296a1.205 1.205 0 0 0-1.704 0z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SaudiRiyal = [ [ "path", {
            d: "m20 19.5-5.5 1.2"
        } ], [ "path", {
            d: "M14.5 4v11.22a1 1 0 0 0 1.242.97L20 15.2"
        } ], [ "path", {
            d: "m2.978 19.351 5.549-1.363A2 2 0 0 0 10 16V2"
        } ], [ "path", {
            d: "M20 10 4 13.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SaveAll = [ [ "path", {
            d: "M10 2v3a1 1 0 0 0 1 1h5"
        } ], [ "path", {
            d: "M18 18v-6a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v6"
        } ], [ "path", {
            d: "M18 22H4a2 2 0 0 1-2-2V6"
        } ], [ "path", {
            d: "M8 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9.172a2 2 0 0 1 1.414.586l2.828 2.828A2 2 0 0 1 22 6.828V16a2 2 0 0 1-2.01 2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SaveOff = [ [ "path", {
            d: "M13 13H8a1 1 0 0 0-1 1v7"
        } ], [ "path", {
            d: "M14 8h1"
        } ], [ "path", {
            d: "M17 21v-4"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M20.41 20.41A2 2 0 0 1 19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 .59-1.41"
        } ], [ "path", {
            d: "M29.5 11.5s5 5 4 5"
        } ], [ "path", {
            d: "M9 3h6.2a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Save = [ [ "path", {
            d: "M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z"
        } ], [ "path", {
            d: "M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7"
        } ], [ "path", {
            d: "M7 3v4a1 1 0 0 0 1 1h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Scale3d = [ [ "path", {
            d: "M5 7v11a1 1 0 0 0 1 1h11"
        } ], [ "path", {
            d: "M5.293 18.707 11 13"
        } ], [ "circle", {
            cx: "19",
            cy: "19",
            r: "2"
        } ], [ "circle", {
            cx: "5",
            cy: "5",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Scale = [ [ "path", {
            d: "m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z"
        } ], [ "path", {
            d: "m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z"
        } ], [ "path", {
            d: "M7 21h10"
        } ], [ "path", {
            d: "M12 3v18"
        } ], [ "path", {
            d: "M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Scaling = [ [ "path", {
            d: "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
        } ], [ "path", {
            d: "M14 15H9v-5"
        } ], [ "path", {
            d: "M16 3h5v5"
        } ], [ "path", {
            d: "M21 3 9 15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScanBarcode = [ [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "path", {
            d: "M8 7v10"
        } ], [ "path", {
            d: "M12 7v10"
        } ], [ "path", {
            d: "M17 7v10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScanEye = [ [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ], [ "path", {
            d: "M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScanFace = [ [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "path", {
            d: "M8 14s1.5 2 4 2 4-2 4-2"
        } ], [ "path", {
            d: "M9 9h.01"
        } ], [ "path", {
            d: "M15 9h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScanHeart = [ [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "path", {
            d: "M7.828 13.07A3 3 0 0 1 12 8.764a3 3 0 0 1 4.172 4.306l-3.447 3.62a1 1 0 0 1-1.449 0z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScanLine = [ [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "path", {
            d: "M7 12h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScanQrCode = [ [ "path", {
            d: "M17 12v4a1 1 0 0 1-1 1h-4"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M17 8V7"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M7 17h.01"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "rect", {
            x: "7",
            y: "7",
            width: "5",
            height: "5",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScanText = [ [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "path", {
            d: "M7 8h8"
        } ], [ "path", {
            d: "M7 12h10"
        } ], [ "path", {
            d: "M7 16h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScanSearch = [ [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ], [ "path", {
            d: "m16 16-1.9-1.9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Scan = [ [ "path", {
            d: "M3 7V5a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "M17 3h2a2 2 0 0 1 2 2v2"
        } ], [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M7 21H5a2 2 0 0 1-2-2v-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const School = [ [ "path", {
            d: "M14 21v-3a2 2 0 0 0-4 0v3"
        } ], [ "path", {
            d: "M18 5v16"
        } ], [ "path", {
            d: "m4 6 7.106-3.79a2 2 0 0 1 1.788 0L20 6"
        } ], [ "path", {
            d: "m6 11-3.52 2.147a1 1 0 0 0-.48.854V19a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a1 1 0 0 0-.48-.853L18 11"
        } ], [ "path", {
            d: "M6 5v16"
        } ], [ "circle", {
            cx: "12",
            cy: "9",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScissorsLineDashed = [ [ "path", {
            d: "M5.42 9.42 8 12"
        } ], [ "circle", {
            cx: "4",
            cy: "8",
            r: "2"
        } ], [ "path", {
            d: "m14 6-8.58 8.58"
        } ], [ "circle", {
            cx: "4",
            cy: "16",
            r: "2"
        } ], [ "path", {
            d: "M10.8 14.8 14 18"
        } ], [ "path", {
            d: "M16 12h-2"
        } ], [ "path", {
            d: "M22 12h-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Scissors = [ [ "circle", {
            cx: "6",
            cy: "6",
            r: "3"
        } ], [ "path", {
            d: "M8.12 8.12 12 12"
        } ], [ "path", {
            d: "M20 4 8.12 15.88"
        } ], [ "circle", {
            cx: "6",
            cy: "18",
            r: "3"
        } ], [ "path", {
            d: "M14.8 14.8 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScreenShareOff = [ [ "path", {
            d: "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3"
        } ], [ "path", {
            d: "M8 21h8"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "m22 3-5 5"
        } ], [ "path", {
            d: "m17 3 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScreenShare = [ [ "path", {
            d: "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3"
        } ], [ "path", {
            d: "M8 21h8"
        } ], [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "m17 8 5-5"
        } ], [ "path", {
            d: "M17 3h5v5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ScrollText = [ [ "path", {
            d: "M15 12h-5"
        } ], [ "path", {
            d: "M15 8h-5"
        } ], [ "path", {
            d: "M19 17V5a2 2 0 0 0-2-2H4"
        } ], [ "path", {
            d: "M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Scroll = [ [ "path", {
            d: "M19 17V5a2 2 0 0 0-2-2H4"
        } ], [ "path", {
            d: "M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SearchCheck = [ [ "path", {
            d: "m8 11 2 2 4-4"
        } ], [ "circle", {
            cx: "11",
            cy: "11",
            r: "8"
        } ], [ "path", {
            d: "m21 21-4.3-4.3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SearchCode = [ [ "path", {
            d: "m13 13.5 2-2.5-2-2.5"
        } ], [ "path", {
            d: "m21 21-4.3-4.3"
        } ], [ "path", {
            d: "M9 8.5 7 11l2 2.5"
        } ], [ "circle", {
            cx: "11",
            cy: "11",
            r: "8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SearchSlash = [ [ "path", {
            d: "m13.5 8.5-5 5"
        } ], [ "circle", {
            cx: "11",
            cy: "11",
            r: "8"
        } ], [ "path", {
            d: "m21 21-4.3-4.3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SearchX = [ [ "path", {
            d: "m13.5 8.5-5 5"
        } ], [ "path", {
            d: "m8.5 8.5 5 5"
        } ], [ "circle", {
            cx: "11",
            cy: "11",
            r: "8"
        } ], [ "path", {
            d: "m21 21-4.3-4.3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Search = [ [ "path", {
            d: "m21 21-4.34-4.34"
        } ], [ "circle", {
            cx: "11",
            cy: "11",
            r: "8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Section = [ [ "path", {
            d: "M16 5a4 3 0 0 0-8 0c0 4 8 3 8 7a4 3 0 0 1-8 0"
        } ], [ "path", {
            d: "M8 19a4 3 0 0 0 8 0c0-4-8-3-8-7a4 3 0 0 1 8 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SendHorizontal = [ [ "path", {
            d: "M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904z"
        } ], [ "path", {
            d: "M6 12h16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SendToBack = [ [ "rect", {
            x: "14",
            y: "14",
            width: "8",
            height: "8",
            rx: "2"
        } ], [ "rect", {
            x: "2",
            y: "2",
            width: "8",
            height: "8",
            rx: "2"
        } ], [ "path", {
            d: "M7 14v1a2 2 0 0 0 2 2h1"
        } ], [ "path", {
            d: "M14 7h1a2 2 0 0 1 2 2v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Send = [ [ "path", {
            d: "M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z"
        } ], [ "path", {
            d: "m21.854 2.147-10.94 10.939"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SeparatorHorizontal = [ [ "path", {
            d: "m16 16-4 4-4-4"
        } ], [ "path", {
            d: "M3 12h18"
        } ], [ "path", {
            d: "m8 8 4-4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SeparatorVertical = [ [ "path", {
            d: "M12 3v18"
        } ], [ "path", {
            d: "m16 16 4-4-4-4"
        } ], [ "path", {
            d: "m8 8-4 4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ServerCog = [ [ "path", {
            d: "m10.852 14.772-.383.923"
        } ], [ "path", {
            d: "M13.148 14.772a3 3 0 1 0-2.296-5.544l-.383-.923"
        } ], [ "path", {
            d: "m13.148 9.228.383-.923"
        } ], [ "path", {
            d: "m13.53 15.696-.382-.924a3 3 0 1 1-2.296-5.544"
        } ], [ "path", {
            d: "m14.772 10.852.923-.383"
        } ], [ "path", {
            d: "m14.772 13.148.923.383"
        } ], [ "path", {
            d: "M4.5 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-.5"
        } ], [ "path", {
            d: "M4.5 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-.5"
        } ], [ "path", {
            d: "M6 18h.01"
        } ], [ "path", {
            d: "M6 6h.01"
        } ], [ "path", {
            d: "m9.228 10.852-.923-.383"
        } ], [ "path", {
            d: "m9.228 13.148-.923.383"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ServerCrash = [ [ "path", {
            d: "M6 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2"
        } ], [ "path", {
            d: "M6 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-2"
        } ], [ "path", {
            d: "M6 6h.01"
        } ], [ "path", {
            d: "M6 18h.01"
        } ], [ "path", {
            d: "m13 6-4 6h6l-4 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Server = [ [ "rect", {
            width: "20",
            height: "8",
            x: "2",
            y: "2",
            rx: "2",
            ry: "2"
        } ], [ "rect", {
            width: "20",
            height: "8",
            x: "2",
            y: "14",
            rx: "2",
            ry: "2"
        } ], [ "line", {
            x1: "6",
            x2: "6.01",
            y1: "6",
            y2: "6"
        } ], [ "line", {
            x1: "6",
            x2: "6.01",
            y1: "18",
            y2: "18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ServerOff = [ [ "path", {
            d: "M7 2h13a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-5"
        } ], [ "path", {
            d: "M10 10 2.5 2.5C2 2 2 2.5 2 5v3a2 2 0 0 0 2 2h6z"
        } ], [ "path", {
            d: "M22 17v-1a2 2 0 0 0-2-2h-1"
        } ], [ "path", {
            d: "M4 14a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16.5l1-.5.5.5-8-8H4z"
        } ], [ "path", {
            d: "M6 18h.01"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Settings2 = [ [ "path", {
            d: "M14 17H5"
        } ], [ "path", {
            d: "M19 7h-9"
        } ], [ "circle", {
            cx: "17",
            cy: "17",
            r: "3"
        } ], [ "circle", {
            cx: "7",
            cy: "7",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Settings = [ [ "path", {
            d: "M9.671 4.136a2.34 2.34 0 0 1 4.659 0 2.34 2.34 0 0 0 3.319 1.915 2.34 2.34 0 0 1 2.33 4.033 2.34 2.34 0 0 0 0 3.831 2.34 2.34 0 0 1-2.33 4.033 2.34 2.34 0 0 0-3.319 1.915 2.34 2.34 0 0 1-4.659 0 2.34 2.34 0 0 0-3.32-1.915 2.34 2.34 0 0 1-2.33-4.033 2.34 2.34 0 0 0 0-3.831A2.34 2.34 0 0 1 6.35 6.051a2.34 2.34 0 0 0 3.319-1.915"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shapes = [ [ "path", {
            d: "M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z"
        } ], [ "rect", {
            x: "3",
            y: "14",
            width: "7",
            height: "7",
            rx: "1"
        } ], [ "circle", {
            cx: "17.5",
            cy: "17.5",
            r: "3.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Share2 = [ [ "circle", {
            cx: "18",
            cy: "5",
            r: "3"
        } ], [ "circle", {
            cx: "6",
            cy: "12",
            r: "3"
        } ], [ "circle", {
            cx: "18",
            cy: "19",
            r: "3"
        } ], [ "line", {
            x1: "8.59",
            x2: "15.42",
            y1: "13.51",
            y2: "17.49"
        } ], [ "line", {
            x1: "15.41",
            x2: "8.59",
            y1: "6.51",
            y2: "10.49"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Share = [ [ "path", {
            d: "M12 2v13"
        } ], [ "path", {
            d: "m16 6-4-4-4 4"
        } ], [ "path", {
            d: "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sheet = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "line", {
            x1: "3",
            x2: "21",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "3",
            x2: "21",
            y1: "15",
            y2: "15"
        } ], [ "line", {
            x1: "9",
            x2: "9",
            y1: "9",
            y2: "21"
        } ], [ "line", {
            x1: "15",
            x2: "15",
            y1: "9",
            y2: "21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shell = [ [ "path", {
            d: "M14 11a2 2 0 1 1-4 0 4 4 0 0 1 8 0 6 6 0 0 1-12 0 8 8 0 0 1 16 0 10 10 0 1 1-20 0 11.93 11.93 0 0 1 2.42-7.22 2 2 0 1 1 3.16 2.44"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldAlert = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "M12 8v4"
        } ], [ "path", {
            d: "M12 16h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldBan = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "m4.243 5.21 14.39 12.472"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldCheck = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "m9 12 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldEllipsis = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "M8 12h.01"
        } ], [ "path", {
            d: "M12 12h.01"
        } ], [ "path", {
            d: "M16 12h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldHalf = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "M12 22V2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldMinus = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "M9 12h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldOff = [ [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M5 5a1 1 0 0 0-1 1v7c0 5 3.5 7.5 7.67 8.94a1 1 0 0 0 .67.01c2.35-.82 4.48-1.97 5.9-3.71"
        } ], [ "path", {
            d: "M9.309 3.652A12.252 12.252 0 0 0 11.24 2.28a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1v7a9.784 9.784 0 0 1-.08 1.264"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldPlus = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "M9 12h6"
        } ], [ "path", {
            d: "M12 9v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldUser = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "M6.376 18.91a6 6 0 0 1 11.249.003"
        } ], [ "circle", {
            cx: "12",
            cy: "11",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldQuestionMark = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3"
        } ], [ "path", {
            d: "M12 17h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShieldX = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ], [ "path", {
            d: "m14.5 9.5-5 5"
        } ], [ "path", {
            d: "m9.5 9.5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shield = [ [ "path", {
            d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ship = [ [ "path", {
            d: "M12 10.189V14"
        } ], [ "path", {
            d: "M12 2v3"
        } ], [ "path", {
            d: "M19 13V7a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v6"
        } ], [ "path", {
            d: "M19.38 20A11.6 11.6 0 0 0 21 14l-8.188-3.639a2 2 0 0 0-1.624 0L3 14a11.6 11.6 0 0 0 2.81 7.76"
        } ], [ "path", {
            d: "M2 21c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1s1.2 1 2.5 1c2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shirt = [ [ "path", {
            d: "M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShipWheel = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "8"
        } ], [ "path", {
            d: "M12 2v7.5"
        } ], [ "path", {
            d: "m19 5-5.23 5.23"
        } ], [ "path", {
            d: "M22 12h-7.5"
        } ], [ "path", {
            d: "m19 19-5.23-5.23"
        } ], [ "path", {
            d: "M12 14.5V22"
        } ], [ "path", {
            d: "M10.23 13.77 5 19"
        } ], [ "path", {
            d: "M9.5 12H2"
        } ], [ "path", {
            d: "M10.23 10.23 5 5"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShoppingBag = [ [ "path", {
            d: "M16 10a4 4 0 0 1-8 0"
        } ], [ "path", {
            d: "M3.103 6.034h17.794"
        } ], [ "path", {
            d: "M3.4 5.467a2 2 0 0 0-.4 1.2V20a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6.667a2 2 0 0 0-.4-1.2l-2-2.667A2 2 0 0 0 17 2H7a2 2 0 0 0-1.6.8z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShoppingBasket = [ [ "path", {
            d: "m15 11-1 9"
        } ], [ "path", {
            d: "m19 11-4-7"
        } ], [ "path", {
            d: "M2 11h20"
        } ], [ "path", {
            d: "m3.5 11 1.6 7.4a2 2 0 0 0 2 1.6h9.8a2 2 0 0 0 2-1.6l1.7-7.4"
        } ], [ "path", {
            d: "M4.5 15.5h15"
        } ], [ "path", {
            d: "m5 11 4-7"
        } ], [ "path", {
            d: "m9 11 1 9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShoppingCart = [ [ "circle", {
            cx: "8",
            cy: "21",
            r: "1"
        } ], [ "circle", {
            cx: "19",
            cy: "21",
            r: "1"
        } ], [ "path", {
            d: "M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shovel = [ [ "path", {
            d: "M21.56 4.56a1.5 1.5 0 0 1 0 2.122l-.47.47a3 3 0 0 1-4.212-.03 3 3 0 0 1 0-4.243l.44-.44a1.5 1.5 0 0 1 2.121 0z"
        } ], [ "path", {
            d: "M3 22a1 1 0 0 1-1-1v-3.586a1 1 0 0 1 .293-.707l3.355-3.355a1.205 1.205 0 0 1 1.704 0l3.296 3.296a1.205 1.205 0 0 1 0 1.704l-3.355 3.355a1 1 0 0 1-.707.293z"
        } ], [ "path", {
            d: "m9 15 7.879-7.878"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ShowerHead = [ [ "path", {
            d: "m4 4 2.5 2.5"
        } ], [ "path", {
            d: "M13.5 6.5a4.95 4.95 0 0 0-7 7"
        } ], [ "path", {
            d: "M15 5 5 15"
        } ], [ "path", {
            d: "M14 17v.01"
        } ], [ "path", {
            d: "M10 16v.01"
        } ], [ "path", {
            d: "M13 13v.01"
        } ], [ "path", {
            d: "M16 10v.01"
        } ], [ "path", {
            d: "M11 20v.01"
        } ], [ "path", {
            d: "M17 14v.01"
        } ], [ "path", {
            d: "M20 11v.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shredder = [ [ "path", {
            d: "M10 22v-5"
        } ], [ "path", {
            d: "M14 19v-2"
        } ], [ "path", {
            d: "M14 2v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M18 20v-3"
        } ], [ "path", {
            d: "M2 13h20"
        } ], [ "path", {
            d: "M20 13V7l-5-5H6a2 2 0 0 0-2 2v9"
        } ], [ "path", {
            d: "M6 20v-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shrimp = [ [ "path", {
            d: "M11 12h.01"
        } ], [ "path", {
            d: "M13 22c.5-.5 1.12-1 2.5-1-1.38 0-2-.5-2.5-1"
        } ], [ "path", {
            d: "M14 2a3.28 3.28 0 0 1-3.227 1.798l-6.17-.561A2.387 2.387 0 1 0 4.387 8H15.5a1 1 0 0 1 0 13 1 1 0 0 0 0-5H12a7 7 0 0 1-7-7V8"
        } ], [ "path", {
            d: "M14 8a8.5 8.5 0 0 1 0 8"
        } ], [ "path", {
            d: "M16 16c2 0 4.5-4 4-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shrink = [ [ "path", {
            d: "m15 15 6 6m-6-6v4.8m0-4.8h4.8"
        } ], [ "path", {
            d: "M9 19.8V15m0 0H4.2M9 15l-6 6"
        } ], [ "path", {
            d: "M15 4.2V9m0 0h4.8M15 9l6-6"
        } ], [ "path", {
            d: "M9 4.2V9m0 0H4.2M9 9 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sigma = [ [ "path", {
            d: "M18 7V5a1 1 0 0 0-1-1H6.5a.5.5 0 0 0-.4.8l4.5 6a2 2 0 0 1 0 2.4l-4.5 6a.5.5 0 0 0 .4.8H17a1 1 0 0 0 1-1v-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shrub = [ [ "path", {
            d: "M12 22v-5.172a2 2 0 0 0-.586-1.414L9.5 13.5"
        } ], [ "path", {
            d: "M14.5 14.5 12 17"
        } ], [ "path", {
            d: "M17 8.8A6 6 0 0 1 13.8 20H10A6.5 6.5 0 0 1 7 8a5 5 0 0 1 10 0z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Shuffle = [ [ "path", {
            d: "m18 14 4 4-4 4"
        } ], [ "path", {
            d: "m18 2 4 4-4 4"
        } ], [ "path", {
            d: "M2 18h1.973a4 4 0 0 0 3.3-1.7l5.454-8.6a4 4 0 0 1 3.3-1.7H22"
        } ], [ "path", {
            d: "M2 6h1.972a4 4 0 0 1 3.6 2.2"
        } ], [ "path", {
            d: "M22 18h-6.041a4 4 0 0 1-3.3-1.8l-.359-.45"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SignalHigh = [ [ "path", {
            d: "M2 20h.01"
        } ], [ "path", {
            d: "M7 20v-4"
        } ], [ "path", {
            d: "M12 20v-8"
        } ], [ "path", {
            d: "M17 20V8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SignalLow = [ [ "path", {
            d: "M2 20h.01"
        } ], [ "path", {
            d: "M7 20v-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SignalMedium = [ [ "path", {
            d: "M2 20h.01"
        } ], [ "path", {
            d: "M7 20v-4"
        } ], [ "path", {
            d: "M12 20v-8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SignalZero = [ [ "path", {
            d: "M2 20h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Signal = [ [ "path", {
            d: "M2 20h.01"
        } ], [ "path", {
            d: "M7 20v-4"
        } ], [ "path", {
            d: "M12 20v-8"
        } ], [ "path", {
            d: "M17 20V8"
        } ], [ "path", {
            d: "M22 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Signature = [ [ "path", {
            d: "m21 17-2.156-1.868A.5.5 0 0 0 18 15.5v.5a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1c0-2.545-3.991-3.97-8.5-4a1 1 0 0 0 0 5c4.153 0 4.745-11.295 5.708-13.5a2.5 2.5 0 1 1 3.31 3.284"
        } ], [ "path", {
            d: "M3 21h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SignpostBig = [ [ "path", {
            d: "M10 9H4L2 7l2-2h6"
        } ], [ "path", {
            d: "M14 5h6l2 2-2 2h-6"
        } ], [ "path", {
            d: "M10 22V4a2 2 0 1 1 4 0v18"
        } ], [ "path", {
            d: "M8 22h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Signpost = [ [ "path", {
            d: "M12 13v8"
        } ], [ "path", {
            d: "M12 3v3"
        } ], [ "path", {
            d: "M18 6a2 2 0 0 1 1.387.56l2.307 2.22a1 1 0 0 1 0 1.44l-2.307 2.22A2 2 0 0 1 18 13H6a2 2 0 0 1-1.387-.56l-2.306-2.22a1 1 0 0 1 0-1.44l2.306-2.22A2 2 0 0 1 6 6z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Siren = [ [ "path", {
            d: "M7 18v-6a5 5 0 1 1 10 0v6"
        } ], [ "path", {
            d: "M5 21a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-1a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2z"
        } ], [ "path", {
            d: "M21 12h1"
        } ], [ "path", {
            d: "M18.5 4.5 18 5"
        } ], [ "path", {
            d: "M2 12h1"
        } ], [ "path", {
            d: "M12 2v1"
        } ], [ "path", {
            d: "m4.929 4.929.707.707"
        } ], [ "path", {
            d: "M12 12v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SkipBack = [ [ "path", {
            d: "M17.971 4.285A2 2 0 0 1 21 6v12a2 2 0 0 1-3.029 1.715l-9.997-5.998a2 2 0 0 1-.003-3.432z"
        } ], [ "path", {
            d: "M3 20V4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SkipForward = [ [ "path", {
            d: "M21 4v16"
        } ], [ "path", {
            d: "M6.029 4.285A2 2 0 0 0 3 6v12a2 2 0 0 0 3.029 1.715l9.997-5.998a2 2 0 0 0 .003-3.432z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Skull = [ [ "path", {
            d: "m12.5 17-.5-1-.5 1h1z"
        } ], [ "path", {
            d: "M15 22a1 1 0 0 0 1-1v-1a2 2 0 0 0 1.56-3.25 8 8 0 1 0-11.12 0A2 2 0 0 0 8 20v1a1 1 0 0 0 1 1z"
        } ], [ "circle", {
            cx: "15",
            cy: "12",
            r: "1"
        } ], [ "circle", {
            cx: "9",
            cy: "12",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Slack = [ [ "rect", {
            width: "3",
            height: "8",
            x: "13",
            y: "2",
            rx: "1.5"
        } ], [ "path", {
            d: "M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5"
        } ], [ "rect", {
            width: "3",
            height: "8",
            x: "8",
            y: "14",
            rx: "1.5"
        } ], [ "path", {
            d: "M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5"
        } ], [ "rect", {
            width: "8",
            height: "3",
            x: "14",
            y: "13",
            rx: "1.5"
        } ], [ "path", {
            d: "M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5"
        } ], [ "rect", {
            width: "8",
            height: "3",
            x: "2",
            y: "8",
            rx: "1.5"
        } ], [ "path", {
            d: "M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Slash = [ [ "path", {
            d: "M22 2 2 22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Slice = [ [ "path", {
            d: "M11 16.586V19a1 1 0 0 1-1 1H2L18.37 3.63a1 1 0 1 1 3 3l-9.663 9.663a1 1 0 0 1-1.414 0L8 14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SlidersHorizontal = [ [ "path", {
            d: "M10 5H3"
        } ], [ "path", {
            d: "M12 19H3"
        } ], [ "path", {
            d: "M14 3v4"
        } ], [ "path", {
            d: "M16 17v4"
        } ], [ "path", {
            d: "M21 12h-9"
        } ], [ "path", {
            d: "M21 19h-5"
        } ], [ "path", {
            d: "M21 5h-7"
        } ], [ "path", {
            d: "M8 10v4"
        } ], [ "path", {
            d: "M8 12H3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SlidersVertical = [ [ "path", {
            d: "M10 8h4"
        } ], [ "path", {
            d: "M12 21v-9"
        } ], [ "path", {
            d: "M12 8V3"
        } ], [ "path", {
            d: "M17 16h4"
        } ], [ "path", {
            d: "M19 12V3"
        } ], [ "path", {
            d: "M19 21v-5"
        } ], [ "path", {
            d: "M3 14h4"
        } ], [ "path", {
            d: "M5 10V3"
        } ], [ "path", {
            d: "M5 21v-7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SmartphoneNfc = [ [ "rect", {
            width: "7",
            height: "12",
            x: "2",
            y: "6",
            rx: "1"
        } ], [ "path", {
            d: "M13 8.32a7.43 7.43 0 0 1 0 7.36"
        } ], [ "path", {
            d: "M16.46 6.21a11.76 11.76 0 0 1 0 11.58"
        } ], [ "path", {
            d: "M19.91 4.1a15.91 15.91 0 0 1 .01 15.8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SmartphoneCharging = [ [ "rect", {
            width: "14",
            height: "20",
            x: "5",
            y: "2",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M12.667 8 10 12h4l-2.667 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Smartphone = [ [ "rect", {
            width: "14",
            height: "20",
            x: "5",
            y: "2",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M12 18h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SmilePlus = [ [ "path", {
            d: "M22 11v1a10 10 0 1 1-9-10"
        } ], [ "path", {
            d: "M8 14s1.5 2 4 2 4-2 4-2"
        } ], [ "line", {
            x1: "9",
            x2: "9.01",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "15",
            x2: "15.01",
            y1: "9",
            y2: "9"
        } ], [ "path", {
            d: "M16 5h6"
        } ], [ "path", {
            d: "M19 2v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Smile = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "path", {
            d: "M8 14s1.5 2 4 2 4-2 4-2"
        } ], [ "line", {
            x1: "9",
            x2: "9.01",
            y1: "9",
            y2: "9"
        } ], [ "line", {
            x1: "15",
            x2: "15.01",
            y1: "9",
            y2: "9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Snail = [ [ "path", {
            d: "M2 13a6 6 0 1 0 12 0 4 4 0 1 0-8 0 2 2 0 0 0 4 0"
        } ], [ "circle", {
            cx: "10",
            cy: "13",
            r: "8"
        } ], [ "path", {
            d: "M2 21h12c4.4 0 8-3.6 8-8V7a2 2 0 1 0-4 0v6"
        } ], [ "path", {
            d: "M18 3 19.1 5.2"
        } ], [ "path", {
            d: "M22 3 20.9 5.2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Snowflake = [ [ "path", {
            d: "m10 20-1.25-2.5L6 18"
        } ], [ "path", {
            d: "M10 4 8.75 6.5 6 6"
        } ], [ "path", {
            d: "m14 20 1.25-2.5L18 18"
        } ], [ "path", {
            d: "m14 4 1.25 2.5L18 6"
        } ], [ "path", {
            d: "m17 21-3-6h-4"
        } ], [ "path", {
            d: "m17 3-3 6 1.5 3"
        } ], [ "path", {
            d: "M2 12h6.5L10 9"
        } ], [ "path", {
            d: "m20 10-1.5 2 1.5 2"
        } ], [ "path", {
            d: "M22 12h-6.5L14 15"
        } ], [ "path", {
            d: "m4 10 1.5 2L4 14"
        } ], [ "path", {
            d: "m7 21 3-6-1.5-3"
        } ], [ "path", {
            d: "m7 3 3 6h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SoapDispenserDroplet = [ [ "path", {
            d: "M10.5 2v4"
        } ], [ "path", {
            d: "M14 2H7a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M19.29 14.76A6.67 6.67 0 0 1 17 11a6.6 6.6 0 0 1-2.29 3.76c-1.15.92-1.71 2.04-1.71 3.19 0 2.22 1.8 4.05 4 4.05s4-1.83 4-4.05c0-1.16-.57-2.26-1.71-3.19"
        } ], [ "path", {
            d: "M9.607 21H6a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h7V7a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sofa = [ [ "path", {
            d: "M20 9V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v3"
        } ], [ "path", {
            d: "M2 16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z"
        } ], [ "path", {
            d: "M4 18v2"
        } ], [ "path", {
            d: "M20 18v2"
        } ], [ "path", {
            d: "M12 4v9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Soup = [ [ "path", {
            d: "M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z"
        } ], [ "path", {
            d: "M7 21h10"
        } ], [ "path", {
            d: "M19.5 12 22 6"
        } ], [ "path", {
            d: "M16.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.73 1.62"
        } ], [ "path", {
            d: "M11.25 3c.27.1.8.53.74 1.36-.05.83-.93 1.2-.98 2.02-.06.78.33 1.24.72 1.62"
        } ], [ "path", {
            d: "M6.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.74 1.62"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Spade = [ [ "path", {
            d: "M12 18v4"
        } ], [ "path", {
            d: "M2 14.499a5.5 5.5 0 0 0 9.591 3.675.6.6 0 0 1 .818.001A5.5 5.5 0 0 0 22 14.5c0-2.29-1.5-4-3-5.5l-5.492-5.312a2 2 0 0 0-3-.02L5 8.999c-1.5 1.5-3 3.2-3 5.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sparkle = [ [ "path", {
            d: "M11.017 2.814a1 1 0 0 1 1.966 0l1.051 5.558a2 2 0 0 0 1.594 1.594l5.558 1.051a1 1 0 0 1 0 1.966l-5.558 1.051a2 2 0 0 0-1.594 1.594l-1.051 5.558a1 1 0 0 1-1.966 0l-1.051-5.558a2 2 0 0 0-1.594-1.594l-5.558-1.051a1 1 0 0 1 0-1.966l5.558-1.051a2 2 0 0 0 1.594-1.594z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Space = [ [ "path", {
            d: "M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sparkles = [ [ "path", {
            d: "M11.017 2.814a1 1 0 0 1 1.966 0l1.051 5.558a2 2 0 0 0 1.594 1.594l5.558 1.051a1 1 0 0 1 0 1.966l-5.558 1.051a2 2 0 0 0-1.594 1.594l-1.051 5.558a1 1 0 0 1-1.966 0l-1.051-5.558a2 2 0 0 0-1.594-1.594l-5.558-1.051a1 1 0 0 1 0-1.966l5.558-1.051a2 2 0 0 0 1.594-1.594z"
        } ], [ "path", {
            d: "M20 2v4"
        } ], [ "path", {
            d: "M22 4h-4"
        } ], [ "circle", {
            cx: "4",
            cy: "20",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Speaker = [ [ "rect", {
            width: "16",
            height: "20",
            x: "4",
            y: "2",
            rx: "2"
        } ], [ "path", {
            d: "M12 6h.01"
        } ], [ "circle", {
            cx: "12",
            cy: "14",
            r: "4"
        } ], [ "path", {
            d: "M12 14h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Speech = [ [ "path", {
            d: "M8.8 20v-4.1l1.9.2a2.3 2.3 0 0 0 2.164-2.1V8.3A5.37 5.37 0 0 0 2 8.25c0 2.8.656 3.054 1 4.55a5.77 5.77 0 0 1 .029 2.758L2 20"
        } ], [ "path", {
            d: "M19.8 17.8a7.5 7.5 0 0 0 .003-10.603"
        } ], [ "path", {
            d: "M17 15a3.5 3.5 0 0 0-.025-4.975"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SpellCheck2 = [ [ "path", {
            d: "m6 16 6-12 6 12"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "path", {
            d: "M4 21c1.1 0 1.1-1 2.3-1s1.1 1 2.3 1c1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SpellCheck = [ [ "path", {
            d: "m6 16 6-12 6 12"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "path", {
            d: "m16 20 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SplinePointer = [ [ "path", {
            d: "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z"
        } ], [ "path", {
            d: "M5 17A12 12 0 0 1 17 5"
        } ], [ "circle", {
            cx: "19",
            cy: "5",
            r: "2"
        } ], [ "circle", {
            cx: "5",
            cy: "19",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Spline = [ [ "circle", {
            cx: "19",
            cy: "5",
            r: "2"
        } ], [ "circle", {
            cx: "5",
            cy: "19",
            r: "2"
        } ], [ "path", {
            d: "M5 17A12 12 0 0 1 17 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Split = [ [ "path", {
            d: "M16 3h5v5"
        } ], [ "path", {
            d: "M8 3H3v5"
        } ], [ "path", {
            d: "M12 22v-8.3a4 4 0 0 0-1.172-2.872L3 3"
        } ], [ "path", {
            d: "m15 9 6-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Spool = [ [ "path", {
            d: "M17 13.44 4.442 17.082A2 2 0 0 0 4.982 21H19a2 2 0 0 0 .558-3.921l-1.115-.32A2 2 0 0 1 17 14.837V7.66"
        } ], [ "path", {
            d: "m7 10.56 12.558-3.642A2 2 0 0 0 19.018 3H5a2 2 0 0 0-.558 3.921l1.115.32A2 2 0 0 1 7 9.163v7.178"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Spotlight = [ [ "path", {
            d: "M15.295 19.562 16 22"
        } ], [ "path", {
            d: "m17 16 3.758 2.098"
        } ], [ "path", {
            d: "m19 12.5 3.026-.598"
        } ], [ "path", {
            d: "M7.61 6.3a3 3 0 0 0-3.92 1.3l-1.38 2.79a3 3 0 0 0 1.3 3.91l6.89 3.597a1 1 0 0 0 1.342-.447l3.106-6.211a1 1 0 0 0-.447-1.341z"
        } ], [ "path", {
            d: "M8 9V2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SprayCan = [ [ "path", {
            d: "M3 3h.01"
        } ], [ "path", {
            d: "M7 5h.01"
        } ], [ "path", {
            d: "M11 7h.01"
        } ], [ "path", {
            d: "M3 7h.01"
        } ], [ "path", {
            d: "M7 9h.01"
        } ], [ "path", {
            d: "M3 11h.01"
        } ], [ "rect", {
            width: "4",
            height: "4",
            x: "15",
            y: "5"
        } ], [ "path", {
            d: "m19 9 2 2v10c0 .6-.4 1-1 1h-6c-.6 0-1-.4-1-1V11l2-2"
        } ], [ "path", {
            d: "m13 14 8-2"
        } ], [ "path", {
            d: "m13 19 8-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sprout = [ [ "path", {
            d: "M14 9.536V7a4 4 0 0 1 4-4h1.5a.5.5 0 0 1 .5.5V5a4 4 0 0 1-4 4 4 4 0 0 0-4 4c0 2 1 3 1 5a5 5 0 0 1-1 3"
        } ], [ "path", {
            d: "M4 9a5 5 0 0 1 8 4 5 5 0 0 1-8-4"
        } ], [ "path", {
            d: "M5 21h14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareActivity = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M17 12h-2l-2 5-2-10-2 5H7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowDownLeft = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m16 8-8 8"
        } ], [ "path", {
            d: "M16 16H8V8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowDownRight = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m8 8 8 8"
        } ], [ "path", {
            d: "M16 8v8H8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowDown = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 8v8"
        } ], [ "path", {
            d: "m8 12 4 4 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowLeft = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m12 8-4 4 4 4"
        } ], [ "path", {
            d: "M16 12H8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowOutDownLeft = [ [ "path", {
            d: "M13 21h6a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v6"
        } ], [ "path", {
            d: "m3 21 9-9"
        } ], [ "path", {
            d: "M9 21H3v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowOutUpLeft = [ [ "path", {
            d: "M13 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-6"
        } ], [ "path", {
            d: "m3 3 9 9"
        } ], [ "path", {
            d: "M3 9V3h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowOutDownRight = [ [ "path", {
            d: "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6"
        } ], [ "path", {
            d: "m21 21-9-9"
        } ], [ "path", {
            d: "M21 15v6h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowOutUpRight = [ [ "path", {
            d: "M21 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h6"
        } ], [ "path", {
            d: "m21 3-9 9"
        } ], [ "path", {
            d: "M15 3h6v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowRight = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "path", {
            d: "m12 16 4-4-4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowUpLeft = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M8 16V8h8"
        } ], [ "path", {
            d: "M16 16 8 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowUpRight = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M8 8h8v8"
        } ], [ "path", {
            d: "m8 16 8-8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareArrowUp = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m16 12-4-4-4 4"
        } ], [ "path", {
            d: "M12 16V8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareAsterisk = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 8v8"
        } ], [ "path", {
            d: "m8.5 14 7-4"
        } ], [ "path", {
            d: "m8.5 10 7 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareBottomDashedScissors = [ [ "path", {
            d: "M4 22a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M10 22H8"
        } ], [ "path", {
            d: "M16 22h-2"
        } ], [ "circle", {
            cx: "8",
            cy: "8",
            r: "2"
        } ], [ "path", {
            d: "M9.414 9.414 12 12"
        } ], [ "path", {
            d: "M14.8 14.8 18 18"
        } ], [ "circle", {
            cx: "8",
            cy: "16",
            r: "2"
        } ], [ "path", {
            d: "m18 6-8.586 8.586"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareChartGantt = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M9 8h7"
        } ], [ "path", {
            d: "M8 12h6"
        } ], [ "path", {
            d: "M11 16h5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareCheckBig = [ [ "path", {
            d: "M21 10.656V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h12.344"
        } ], [ "path", {
            d: "m9 11 3 3L22 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareCheck = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m9 12 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareChevronDown = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m16 10-4 4-4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareChevronLeft = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m14 16-4-4 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareChevronRight = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m10 8 4 4-4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareChevronUp = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m8 14 4-4 4 4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareCode = [ [ "path", {
            d: "m10 9-3 3 3 3"
        } ], [ "path", {
            d: "m14 15 3-3-3-3"
        } ], [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareDashedBottomCode = [ [ "path", {
            d: "M10 9.5 8 12l2 2.5"
        } ], [ "path", {
            d: "M14 21h1"
        } ], [ "path", {
            d: "m14 9.5 2 2.5-2 2.5"
        } ], [ "path", {
            d: "M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M9 21h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareDashedBottom = [ [ "path", {
            d: "M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M9 21h1"
        } ], [ "path", {
            d: "M14 21h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareDashedKanban = [ [ "path", {
            d: "M8 7v7"
        } ], [ "path", {
            d: "M12 7v4"
        } ], [ "path", {
            d: "M16 7v9"
        } ], [ "path", {
            d: "M5 3a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M9 3h1"
        } ], [ "path", {
            d: "M14 3h1"
        } ], [ "path", {
            d: "M19 3a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M21 9v1"
        } ], [ "path", {
            d: "M21 14v1"
        } ], [ "path", {
            d: "M21 19a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M14 21h1"
        } ], [ "path", {
            d: "M9 21h1"
        } ], [ "path", {
            d: "M5 21a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M3 14v1"
        } ], [ "path", {
            d: "M3 9v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareDashedMousePointer = [ [ "path", {
            d: "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z"
        } ], [ "path", {
            d: "M5 3a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M19 3a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M5 21a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M9 3h1"
        } ], [ "path", {
            d: "M9 21h2"
        } ], [ "path", {
            d: "M14 3h1"
        } ], [ "path", {
            d: "M3 9v1"
        } ], [ "path", {
            d: "M21 9v2"
        } ], [ "path", {
            d: "M3 14v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareDashedTopSolid = [ [ "path", {
            d: "M14 21h1"
        } ], [ "path", {
            d: "M21 14v1"
        } ], [ "path", {
            d: "M21 19a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M21 9v1"
        } ], [ "path", {
            d: "M3 14v1"
        } ], [ "path", {
            d: "M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M3 9v1"
        } ], [ "path", {
            d: "M5 21a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M9 21h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareDashed = [ [ "path", {
            d: "M5 3a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M19 3a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M21 19a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M5 21a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M9 3h1"
        } ], [ "path", {
            d: "M9 21h1"
        } ], [ "path", {
            d: "M14 3h1"
        } ], [ "path", {
            d: "M14 21h1"
        } ], [ "path", {
            d: "M3 9v1"
        } ], [ "path", {
            d: "M21 9v1"
        } ], [ "path", {
            d: "M3 14v1"
        } ], [ "path", {
            d: "M21 14v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareDot = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareDivide = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "line", {
            x1: "8",
            x2: "16",
            y1: "12",
            y2: "12"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "16",
            y2: "16"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "8",
            y2: "8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareEqual = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M7 10h10"
        } ], [ "path", {
            d: "M7 14h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareFunction = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "M9 17c2 0 2.8-1 2.8-2.8V10c0-2 1-3.3 3.2-3"
        } ], [ "path", {
            d: "M9 11.2h5.7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareKanban = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M8 7v7"
        } ], [ "path", {
            d: "M12 7v4"
        } ], [ "path", {
            d: "M16 7v9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareLibrary = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M7 7v10"
        } ], [ "path", {
            d: "M11 7v10"
        } ], [ "path", {
            d: "m15 7 2 10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareM = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M8 16V8l4 4 4-4v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareMenu = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M7 8h10"
        } ], [ "path", {
            d: "M7 12h10"
        } ], [ "path", {
            d: "M7 16h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareMinus = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M8 12h8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareMousePointer = [ [ "path", {
            d: "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z"
        } ], [ "path", {
            d: "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareParkingOff = [ [ "path", {
            d: "M3.6 3.6A2 2 0 0 1 5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-.59 1.41"
        } ], [ "path", {
            d: "M3 8.7V19a2 2 0 0 0 2 2h10.3"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M13 13a3 3 0 1 0 0-6H9v2"
        } ], [ "path", {
            d: "M9 17v-2.3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareParking = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M9 17V7h4a3 3 0 0 1 0 6H9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquarePause = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "line", {
            x1: "10",
            x2: "10",
            y1: "15",
            y2: "9"
        } ], [ "line", {
            x1: "14",
            x2: "14",
            y1: "15",
            y2: "9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquarePen = [ [ "path", {
            d: "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
        } ], [ "path", {
            d: "M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquarePercent = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "m15 9-6 6"
        } ], [ "path", {
            d: "M9 9h.01"
        } ], [ "path", {
            d: "M15 15h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquarePi = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M7 7h10"
        } ], [ "path", {
            d: "M10 7v10"
        } ], [ "path", {
            d: "M16 17a2 2 0 0 1-2-2V7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquarePilcrow = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M12 12H9.5a2.5 2.5 0 0 1 0-5H17"
        } ], [ "path", {
            d: "M12 7v10"
        } ], [ "path", {
            d: "M16 7v10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquarePlay = [ [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ], [ "path", {
            d: "M9 9.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997A1 1 0 0 1 9 14.996z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquarePlus = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "path", {
            d: "M12 8v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquarePower = [ [ "path", {
            d: "M12 7v4"
        } ], [ "path", {
            d: "M7.998 9.003a5 5 0 1 0 8-.005"
        } ], [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareRadical = [ [ "path", {
            d: "M7 12h2l2 5 2-10h4"
        } ], [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareScissors = [ [ "rect", {
            width: "20",
            height: "20",
            x: "2",
            y: "2",
            rx: "2"
        } ], [ "circle", {
            cx: "8",
            cy: "8",
            r: "2"
        } ], [ "path", {
            d: "M9.414 9.414 12 12"
        } ], [ "path", {
            d: "M14.8 14.8 18 18"
        } ], [ "circle", {
            cx: "8",
            cy: "16",
            r: "2"
        } ], [ "path", {
            d: "m18 6-8.586 8.586"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareRoundCorner = [ [ "path", {
            d: "M21 11a8 8 0 0 0-8-8"
        } ], [ "path", {
            d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareSigma = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M16 8.9V7H8l4 5-4 5h8v-1.9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareSlash = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "line", {
            x1: "9",
            x2: "15",
            y1: "15",
            y2: "9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareSplitHorizontal = [ [ "path", {
            d: "M8 19H5c-1 0-2-1-2-2V7c0-1 1-2 2-2h3"
        } ], [ "path", {
            d: "M16 5h3c1 0 2 1 2 2v10c0 1-1 2-2 2h-3"
        } ], [ "line", {
            x1: "12",
            x2: "12",
            y1: "4",
            y2: "20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareSplitVertical = [ [ "path", {
            d: "M5 8V5c0-1 1-2 2-2h10c1 0 2 1 2 2v3"
        } ], [ "path", {
            d: "M19 16v3c0 1-1 2-2 2H7c-1 0-2-1-2-2v-3"
        } ], [ "line", {
            x1: "4",
            x2: "20",
            y1: "12",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareSquare = [ [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ], [ "rect", {
            x: "8",
            y: "8",
            width: "8",
            height: "8",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareStar = [ [ "path", {
            d: "M11.035 7.69a1 1 0 0 1 1.909.024l.737 1.452a1 1 0 0 0 .737.535l1.634.256a1 1 0 0 1 .588 1.806l-1.172 1.168a1 1 0 0 0-.282.866l.259 1.613a1 1 0 0 1-1.541 1.134l-1.465-.75a1 1 0 0 0-.912 0l-1.465.75a1 1 0 0 1-1.539-1.133l.258-1.613a1 1 0 0 0-.282-.866l-1.156-1.153a1 1 0 0 1 .572-1.822l1.633-.256a1 1 0 0 0 .737-.535z"
        } ], [ "rect", {
            x: "3",
            y: "3",
            width: "18",
            height: "18",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareStack = [ [ "path", {
            d: "M4 10c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2"
        } ], [ "path", {
            d: "M10 16c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2"
        } ], [ "rect", {
            width: "8",
            height: "8",
            x: "14",
            y: "14",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareStop = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "rect", {
            x: "9",
            y: "9",
            width: "6",
            height: "6",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareTerminal = [ [ "path", {
            d: "m7 11 2-2-2-2"
        } ], [ "path", {
            d: "M11 13h4"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareUser = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ], [ "path", {
            d: "M7 21v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareUserRound = [ [ "path", {
            d: "M18 21a6 6 0 0 0-12 0"
        } ], [ "circle", {
            cx: "12",
            cy: "11",
            r: "4"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquareX = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "path", {
            d: "m15 9-6 6"
        } ], [ "path", {
            d: "m9 9 6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Square = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquaresExclude = [ [ "path", {
            d: "M16 12v2a2 2 0 0 1-2 2H9a1 1 0 0 0-1 1v3a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2h0"
        } ], [ "path", {
            d: "M4 16a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v3a1 1 0 0 1-1 1h-5a2 2 0 0 0-2 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquaresIntersect = [ [ "path", {
            d: "M10 22a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M14 2a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M16 22h-2"
        } ], [ "path", {
            d: "M2 10V8"
        } ], [ "path", {
            d: "M2 4a2 2 0 0 1 2-2"
        } ], [ "path", {
            d: "M20 8a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M22 14v2"
        } ], [ "path", {
            d: "M22 20a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M4 16a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M8 10a2 2 0 0 1 2-2h5a1 1 0 0 1 1 1v5a2 2 0 0 1-2 2H9a1 1 0 0 1-1-1z"
        } ], [ "path", {
            d: "M8 2h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquaresSubtract = [ [ "path", {
            d: "M10 22a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M16 22h-2"
        } ], [ "path", {
            d: "M16 4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-5a2 2 0 0 1 2-2h5a1 1 0 0 0 1-1z"
        } ], [ "path", {
            d: "M20 8a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M22 14v2"
        } ], [ "path", {
            d: "M22 20a2 2 0 0 1-2 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquaresUnite = [ [ "path", {
            d: "M4 16a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v3a1 1 0 0 0 1 1h3a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2v-3a1 1 0 0 0-1-1z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SquircleDashed = [ [ "path", {
            d: "M13.77 3.043a34 34 0 0 0-3.54 0"
        } ], [ "path", {
            d: "M13.771 20.956a33 33 0 0 1-3.541.001"
        } ], [ "path", {
            d: "M20.18 17.74c-.51 1.15-1.29 1.93-2.439 2.44"
        } ], [ "path", {
            d: "M20.18 6.259c-.51-1.148-1.291-1.929-2.44-2.438"
        } ], [ "path", {
            d: "M20.957 10.23a33 33 0 0 1 0 3.54"
        } ], [ "path", {
            d: "M3.043 10.23a34 34 0 0 0 .001 3.541"
        } ], [ "path", {
            d: "M6.26 20.179c-1.15-.508-1.93-1.29-2.44-2.438"
        } ], [ "path", {
            d: "M6.26 3.82c-1.149.51-1.93 1.291-2.44 2.44"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Squircle = [ [ "path", {
            d: "M12 3c7.2 0 9 1.8 9 9s-1.8 9-9 9-9-1.8-9-9 1.8-9 9-9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Squirrel = [ [ "path", {
            d: "M15.236 22a3 3 0 0 0-2.2-5"
        } ], [ "path", {
            d: "M16 20a3 3 0 0 1 3-3h1a2 2 0 0 0 2-2v-2a4 4 0 0 0-4-4V4"
        } ], [ "path", {
            d: "M18 13h.01"
        } ], [ "path", {
            d: "M18 6a4 4 0 0 0-4 4 7 7 0 0 0-7 7c0-5 4-5 4-10.5a4.5 4.5 0 1 0-9 0 2.5 2.5 0 0 0 5 0C7 10 3 11 3 17c0 2.8 2.2 5 5 5h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Stamp = [ [ "path", {
            d: "M14 13V8.5C14 7 15 7 15 5a3 3 0 0 0-6 0c0 2 1 2 1 3.5V13"
        } ], [ "path", {
            d: "M20 15.5a2.5 2.5 0 0 0-2.5-2.5h-11A2.5 2.5 0 0 0 4 15.5V17a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1z"
        } ], [ "path", {
            d: "M5 22h14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const StarHalf = [ [ "path", {
            d: "M12 18.338a2.1 2.1 0 0 0-.987.244L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.12 2.12 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.12 2.12 0 0 0 1.597-1.16l2.309-4.679A.53.53 0 0 1 12 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const StarOff = [ [ "path", {
            d: "M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43"
        } ], [ "path", {
            d: "M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Star = [ [ "path", {
            d: "M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const StepBack = [ [ "path", {
            d: "M13.971 4.285A2 2 0 0 1 17 6v12a2 2 0 0 1-3.029 1.715l-9.997-5.998a2 2 0 0 1-.003-3.432z"
        } ], [ "path", {
            d: "M21 20V4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const StepForward = [ [ "path", {
            d: "M10.029 4.285A2 2 0 0 0 7 6v12a2 2 0 0 0 3.029 1.715l9.997-5.998a2 2 0 0 0 .003-3.432z"
        } ], [ "path", {
            d: "M3 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Stethoscope = [ [ "path", {
            d: "M11 2v2"
        } ], [ "path", {
            d: "M5 2v2"
        } ], [ "path", {
            d: "M5 3H4a2 2 0 0 0-2 2v4a6 6 0 0 0 12 0V5a2 2 0 0 0-2-2h-1"
        } ], [ "path", {
            d: "M8 15a6 6 0 0 0 12 0v-3"
        } ], [ "circle", {
            cx: "20",
            cy: "10",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sticker = [ [ "path", {
            d: "M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z"
        } ], [ "path", {
            d: "M14 3v4a2 2 0 0 0 2 2h4"
        } ], [ "path", {
            d: "M8 13h.01"
        } ], [ "path", {
            d: "M16 13h.01"
        } ], [ "path", {
            d: "M10 16s.8 1 2 1c1.3 0 2-1 2-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Store = [ [ "path", {
            d: "M15 21v-5a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v5"
        } ], [ "path", {
            d: "M17.774 10.31a1.12 1.12 0 0 0-1.549 0 2.5 2.5 0 0 1-3.451 0 1.12 1.12 0 0 0-1.548 0 2.5 2.5 0 0 1-3.452 0 1.12 1.12 0 0 0-1.549 0 2.5 2.5 0 0 1-3.77-3.248l2.889-4.184A2 2 0 0 1 7 2h10a2 2 0 0 1 1.653.873l2.895 4.192a2.5 2.5 0 0 1-3.774 3.244"
        } ], [ "path", {
            d: "M4 10.95V19a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8.05"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const StickyNote = [ [ "path", {
            d: "M16 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8Z"
        } ], [ "path", {
            d: "M15 3v4a2 2 0 0 0 2 2h4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const StretchHorizontal = [ [ "rect", {
            width: "20",
            height: "6",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "rect", {
            width: "20",
            height: "6",
            x: "2",
            y: "14",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const StretchVertical = [ [ "rect", {
            width: "6",
            height: "20",
            x: "4",
            y: "2",
            rx: "2"
        } ], [ "rect", {
            width: "6",
            height: "20",
            x: "14",
            y: "2",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Strikethrough = [ [ "path", {
            d: "M16 4H9a3 3 0 0 0-2.83 4"
        } ], [ "path", {
            d: "M14 12a4 4 0 0 1 0 8H6"
        } ], [ "line", {
            x1: "4",
            x2: "20",
            y1: "12",
            y2: "12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Subscript = [ [ "path", {
            d: "m4 5 8 8"
        } ], [ "path", {
            d: "m12 5-8 8"
        } ], [ "path", {
            d: "M20 19h-4c0-1.5.44-2 1.5-2.5S20 15.33 20 14c0-.47-.17-.93-.48-1.29a2.11 2.11 0 0 0-2.62-.44c-.42.24-.74.62-.9 1.07"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SunMedium = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ], [ "path", {
            d: "M12 3v1"
        } ], [ "path", {
            d: "M12 20v1"
        } ], [ "path", {
            d: "M3 12h1"
        } ], [ "path", {
            d: "M20 12h1"
        } ], [ "path", {
            d: "m18.364 5.636-.707.707"
        } ], [ "path", {
            d: "m6.343 17.657-.707.707"
        } ], [ "path", {
            d: "m5.636 5.636.707.707"
        } ], [ "path", {
            d: "m17.657 17.657.707.707"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SunDim = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ], [ "path", {
            d: "M12 4h.01"
        } ], [ "path", {
            d: "M20 12h.01"
        } ], [ "path", {
            d: "M12 20h.01"
        } ], [ "path", {
            d: "M4 12h.01"
        } ], [ "path", {
            d: "M17.657 6.343h.01"
        } ], [ "path", {
            d: "M17.657 17.657h.01"
        } ], [ "path", {
            d: "M6.343 17.657h.01"
        } ], [ "path", {
            d: "M6.343 6.343h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SunSnow = [ [ "path", {
            d: "M10 21v-1"
        } ], [ "path", {
            d: "M10 4V3"
        } ], [ "path", {
            d: "M10 9a3 3 0 0 0 0 6"
        } ], [ "path", {
            d: "m14 20 1.25-2.5L18 18"
        } ], [ "path", {
            d: "m14 4 1.25 2.5L18 6"
        } ], [ "path", {
            d: "m17 21-3-6 1.5-3H22"
        } ], [ "path", {
            d: "m17 3-3 6 1.5 3"
        } ], [ "path", {
            d: "M2 12h1"
        } ], [ "path", {
            d: "m20 10-1.5 2 1.5 2"
        } ], [ "path", {
            d: "m3.64 18.36.7-.7"
        } ], [ "path", {
            d: "m4.34 6.34-.7-.7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SunMoon = [ [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "M14.837 16.385a6 6 0 1 1-7.223-7.222c.624-.147.97.66.715 1.248a4 4 0 0 0 5.26 5.259c.589-.255 1.396.09 1.248.715"
        } ], [ "path", {
            d: "M16 12a4 4 0 0 0-4-4"
        } ], [ "path", {
            d: "m19 5-1.256 1.256"
        } ], [ "path", {
            d: "M20 12h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sun = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ], [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "M12 20v2"
        } ], [ "path", {
            d: "m4.93 4.93 1.41 1.41"
        } ], [ "path", {
            d: "m17.66 17.66 1.41 1.41"
        } ], [ "path", {
            d: "M2 12h2"
        } ], [ "path", {
            d: "M20 12h2"
        } ], [ "path", {
            d: "m6.34 17.66-1.41 1.41"
        } ], [ "path", {
            d: "m19.07 4.93-1.41 1.41"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sunrise = [ [ "path", {
            d: "M12 2v8"
        } ], [ "path", {
            d: "m4.93 10.93 1.41 1.41"
        } ], [ "path", {
            d: "M2 18h2"
        } ], [ "path", {
            d: "M20 18h2"
        } ], [ "path", {
            d: "m19.07 10.93-1.41 1.41"
        } ], [ "path", {
            d: "M22 22H2"
        } ], [ "path", {
            d: "m8 6 4-4 4 4"
        } ], [ "path", {
            d: "M16 18a4 4 0 0 0-8 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Superscript = [ [ "path", {
            d: "m4 19 8-8"
        } ], [ "path", {
            d: "m12 19-8-8"
        } ], [ "path", {
            d: "M20 12h-4c0-1.5.442-2 1.5-2.5S20 8.334 20 7.002c0-.472-.17-.93-.484-1.29a2.105 2.105 0 0 0-2.617-.436c-.42.239-.738.614-.899 1.06"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sunset = [ [ "path", {
            d: "M12 10V2"
        } ], [ "path", {
            d: "m4.93 10.93 1.41 1.41"
        } ], [ "path", {
            d: "M2 18h2"
        } ], [ "path", {
            d: "M20 18h2"
        } ], [ "path", {
            d: "m19.07 10.93-1.41 1.41"
        } ], [ "path", {
            d: "M22 22H2"
        } ], [ "path", {
            d: "m16 6-4 4-4-4"
        } ], [ "path", {
            d: "M16 18a4 4 0 0 0-8 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SwatchBook = [ [ "path", {
            d: "M11 17a4 4 0 0 1-8 0V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2Z"
        } ], [ "path", {
            d: "M16.7 13H19a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H7"
        } ], [ "path", {
            d: "M 7 17h.01"
        } ], [ "path", {
            d: "m11 8 2.3-2.3a2.4 2.4 0 0 1 3.404.004L18.6 7.6a2.4 2.4 0 0 1 .026 3.434L9.9 19.8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SwissFranc = [ [ "path", {
            d: "M10 21V3h8"
        } ], [ "path", {
            d: "M6 16h9"
        } ], [ "path", {
            d: "M10 9.5h7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const SwitchCamera = [ [ "path", {
            d: "M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5"
        } ], [ "path", {
            d: "M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "3"
        } ], [ "path", {
            d: "m18 22-3-3 3-3"
        } ], [ "path", {
            d: "m6 2 3 3-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Sword = [ [ "polyline", {
            points: "14.5 17.5 3 6 3 3 6 3 17.5 14.5"
        } ], [ "line", {
            x1: "13",
            x2: "19",
            y1: "19",
            y2: "13"
        } ], [ "line", {
            x1: "16",
            x2: "20",
            y1: "16",
            y2: "20"
        } ], [ "line", {
            x1: "19",
            x2: "21",
            y1: "21",
            y2: "19"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Syringe = [ [ "path", {
            d: "m18 2 4 4"
        } ], [ "path", {
            d: "m17 7 3-3"
        } ], [ "path", {
            d: "M19 9 8.7 19.3c-1 1-2.5 1-3.4 0l-.6-.6c-1-1-1-2.5 0-3.4L15 5"
        } ], [ "path", {
            d: "m9 11 4 4"
        } ], [ "path", {
            d: "m5 19-3 3"
        } ], [ "path", {
            d: "m14 4 6 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Swords = [ [ "polyline", {
            points: "14.5 17.5 3 6 3 3 6 3 17.5 14.5"
        } ], [ "line", {
            x1: "13",
            x2: "19",
            y1: "19",
            y2: "13"
        } ], [ "line", {
            x1: "16",
            x2: "20",
            y1: "16",
            y2: "20"
        } ], [ "line", {
            x1: "19",
            x2: "21",
            y1: "21",
            y2: "19"
        } ], [ "polyline", {
            points: "14.5 6.5 18 3 21 3 21 6 17.5 9.5"
        } ], [ "line", {
            x1: "5",
            x2: "9",
            y1: "14",
            y2: "18"
        } ], [ "line", {
            x1: "7",
            x2: "4",
            y1: "17",
            y2: "20"
        } ], [ "line", {
            x1: "3",
            x2: "5",
            y1: "19",
            y2: "21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Table2 = [ [ "path", {
            d: "M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TableCellsMerge = [ [ "path", {
            d: "M12 21v-6"
        } ], [ "path", {
            d: "M12 9V3"
        } ], [ "path", {
            d: "M3 15h18"
        } ], [ "path", {
            d: "M3 9h18"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TableCellsSplit = [ [ "path", {
            d: "M12 15V9"
        } ], [ "path", {
            d: "M3 15h18"
        } ], [ "path", {
            d: "M3 9h18"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TableColumnsSplit = [ [ "path", {
            d: "M14 14v2"
        } ], [ "path", {
            d: "M14 20v2"
        } ], [ "path", {
            d: "M14 2v2"
        } ], [ "path", {
            d: "M14 8v2"
        } ], [ "path", {
            d: "M2 15h8"
        } ], [ "path", {
            d: "M2 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2"
        } ], [ "path", {
            d: "M2 9h8"
        } ], [ "path", {
            d: "M22 15h-4"
        } ], [ "path", {
            d: "M22 3h-2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h2"
        } ], [ "path", {
            d: "M22 9h-4"
        } ], [ "path", {
            d: "M5 3v18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TableProperties = [ [ "path", {
            d: "M15 3v18"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M21 9H3"
        } ], [ "path", {
            d: "M21 15H3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TableOfContents = [ [ "path", {
            d: "M16 5H3"
        } ], [ "path", {
            d: "M16 12H3"
        } ], [ "path", {
            d: "M16 19H3"
        } ], [ "path", {
            d: "M21 5h.01"
        } ], [ "path", {
            d: "M21 12h.01"
        } ], [ "path", {
            d: "M21 19h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TableRowsSplit = [ [ "path", {
            d: "M14 10h2"
        } ], [ "path", {
            d: "M15 22v-8"
        } ], [ "path", {
            d: "M15 2v4"
        } ], [ "path", {
            d: "M2 10h2"
        } ], [ "path", {
            d: "M20 10h2"
        } ], [ "path", {
            d: "M3 19h18"
        } ], [ "path", {
            d: "M3 22v-6a2 2 135 0 1 2-2h14a2 2 45 0 1 2 2v6"
        } ], [ "path", {
            d: "M3 2v2a2 2 45 0 0 2 2h14a2 2 135 0 0 2-2V2"
        } ], [ "path", {
            d: "M8 10h2"
        } ], [ "path", {
            d: "M9 22v-8"
        } ], [ "path", {
            d: "M9 2v4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Table = [ [ "path", {
            d: "M12 3v18"
        } ], [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 9h18"
        } ], [ "path", {
            d: "M3 15h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TabletSmartphone = [ [ "rect", {
            width: "10",
            height: "14",
            x: "3",
            y: "8",
            rx: "2"
        } ], [ "path", {
            d: "M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4"
        } ], [ "path", {
            d: "M8 18h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tablet = [ [ "rect", {
            width: "16",
            height: "20",
            x: "4",
            y: "2",
            rx: "2",
            ry: "2"
        } ], [ "line", {
            x1: "12",
            x2: "12.01",
            y1: "18",
            y2: "18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tablets = [ [ "circle", {
            cx: "7",
            cy: "7",
            r: "5"
        } ], [ "circle", {
            cx: "17",
            cy: "17",
            r: "5"
        } ], [ "path", {
            d: "M12 17h10"
        } ], [ "path", {
            d: "m3.46 10.54 7.08-7.08"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tag = [ [ "path", {
            d: "M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"
        } ], [ "circle", {
            cx: "7.5",
            cy: "7.5",
            r: ".5",
            fill: "currentColor"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tags = [ [ "path", {
            d: "M13.172 2a2 2 0 0 1 1.414.586l6.71 6.71a2.4 2.4 0 0 1 0 3.408l-4.592 4.592a2.4 2.4 0 0 1-3.408 0l-6.71-6.71A2 2 0 0 1 6 9.172V3a1 1 0 0 1 1-1z"
        } ], [ "path", {
            d: "M2 7v6.172a2 2 0 0 0 .586 1.414l6.71 6.71a2.4 2.4 0 0 0 3.191.193"
        } ], [ "circle", {
            cx: "10.5",
            cy: "6.5",
            r: ".5",
            fill: "currentColor"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tally1 = [ [ "path", {
            d: "M4 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tally2 = [ [ "path", {
            d: "M4 4v16"
        } ], [ "path", {
            d: "M9 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tally3 = [ [ "path", {
            d: "M4 4v16"
        } ], [ "path", {
            d: "M9 4v16"
        } ], [ "path", {
            d: "M14 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tally4 = [ [ "path", {
            d: "M4 4v16"
        } ], [ "path", {
            d: "M9 4v16"
        } ], [ "path", {
            d: "M14 4v16"
        } ], [ "path", {
            d: "M19 4v16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tally5 = [ [ "path", {
            d: "M4 4v16"
        } ], [ "path", {
            d: "M9 4v16"
        } ], [ "path", {
            d: "M14 4v16"
        } ], [ "path", {
            d: "M19 4v16"
        } ], [ "path", {
            d: "M22 6 2 18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tangent = [ [ "circle", {
            cx: "17",
            cy: "4",
            r: "2"
        } ], [ "path", {
            d: "M15.59 5.41 5.41 15.59"
        } ], [ "circle", {
            cx: "4",
            cy: "17",
            r: "2"
        } ], [ "path", {
            d: "M12 22s-4-9-1.5-11.5S22 12 22 12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Telescope = [ [ "path", {
            d: "m10.065 12.493-6.18 1.318a.934.934 0 0 1-1.108-.702l-.537-2.15a1.07 1.07 0 0 1 .691-1.265l13.504-4.44"
        } ], [ "path", {
            d: "m13.56 11.747 4.332-.924"
        } ], [ "path", {
            d: "m16 21-3.105-6.21"
        } ], [ "path", {
            d: "M16.485 5.94a2 2 0 0 1 1.455-2.425l1.09-.272a1 1 0 0 1 1.212.727l1.515 6.06a1 1 0 0 1-.727 1.213l-1.09.272a2 2 0 0 1-2.425-1.455z"
        } ], [ "path", {
            d: "m6.158 8.633 1.114 4.456"
        } ], [ "path", {
            d: "m8 21 3.105-6.21"
        } ], [ "circle", {
            cx: "12",
            cy: "13",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Target = [ [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "6"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tent = [ [ "path", {
            d: "M3.5 21 14 3"
        } ], [ "path", {
            d: "M20.5 21 10 3"
        } ], [ "path", {
            d: "M15.5 21 12 15l-3.5 6"
        } ], [ "path", {
            d: "M2 21h20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TentTree = [ [ "circle", {
            cx: "4",
            cy: "4",
            r: "2"
        } ], [ "path", {
            d: "m14 5 3-3 3 3"
        } ], [ "path", {
            d: "m14 10 3-3 3 3"
        } ], [ "path", {
            d: "M17 14V2"
        } ], [ "path", {
            d: "M17 14H7l-5 8h20Z"
        } ], [ "path", {
            d: "M8 14v8"
        } ], [ "path", {
            d: "m9 14 5 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TestTubeDiagonal = [ [ "path", {
            d: "M21 7 6.82 21.18a2.83 2.83 0 0 1-3.99-.01a2.83 2.83 0 0 1 0-4L17 3"
        } ], [ "path", {
            d: "m16 2 6 6"
        } ], [ "path", {
            d: "M12 16H4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Terminal = [ [ "path", {
            d: "M12 19h8"
        } ], [ "path", {
            d: "m4 17 6-6-6-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TestTube = [ [ "path", {
            d: "M14.5 2v17.5c0 1.4-1.1 2.5-2.5 2.5c-1.4 0-2.5-1.1-2.5-2.5V2"
        } ], [ "path", {
            d: "M8.5 2h7"
        } ], [ "path", {
            d: "M14.5 16h-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TestTubes = [ [ "path", {
            d: "M9 2v17.5A2.5 2.5 0 0 1 6.5 22A2.5 2.5 0 0 1 4 19.5V2"
        } ], [ "path", {
            d: "M20 2v17.5a2.5 2.5 0 0 1-2.5 2.5a2.5 2.5 0 0 1-2.5-2.5V2"
        } ], [ "path", {
            d: "M3 2h7"
        } ], [ "path", {
            d: "M14 2h7"
        } ], [ "path", {
            d: "M9 16H4"
        } ], [ "path", {
            d: "M20 16h-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextAlignCenter = [ [ "path", {
            d: "M21 5H3"
        } ], [ "path", {
            d: "M17 12H7"
        } ], [ "path", {
            d: "M19 19H5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextAlignEnd = [ [ "path", {
            d: "M21 5H3"
        } ], [ "path", {
            d: "M21 12H9"
        } ], [ "path", {
            d: "M21 19H7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextAlignJustify = [ [ "path", {
            d: "M3 5h18"
        } ], [ "path", {
            d: "M3 12h18"
        } ], [ "path", {
            d: "M3 19h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextAlignStart = [ [ "path", {
            d: "M21 5H3"
        } ], [ "path", {
            d: "M15 12H3"
        } ], [ "path", {
            d: "M17 19H3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextCursorInput = [ [ "path", {
            d: "M12 20h-1a2 2 0 0 1-2-2 2 2 0 0 1-2 2H6"
        } ], [ "path", {
            d: "M13 8h7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-7"
        } ], [ "path", {
            d: "M5 16H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1"
        } ], [ "path", {
            d: "M6 4h1a2 2 0 0 1 2 2 2 2 0 0 1 2-2h1"
        } ], [ "path", {
            d: "M9 6v12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextCursor = [ [ "path", {
            d: "M17 22h-1a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h1"
        } ], [ "path", {
            d: "M7 22h1a4 4 0 0 0 4-4v-1"
        } ], [ "path", {
            d: "M7 2h1a4 4 0 0 1 4 4v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextInitial = [ [ "path", {
            d: "M15 5h6"
        } ], [ "path", {
            d: "M15 12h6"
        } ], [ "path", {
            d: "M3 19h18"
        } ], [ "path", {
            d: "m3 12 3.553-7.724a.5.5 0 0 1 .894 0L11 12"
        } ], [ "path", {
            d: "M3.92 10h6.16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextQuote = [ [ "path", {
            d: "M17 5H3"
        } ], [ "path", {
            d: "M21 12H8"
        } ], [ "path", {
            d: "M21 19H8"
        } ], [ "path", {
            d: "M3 12v7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextSearch = [ [ "path", {
            d: "M21 5H3"
        } ], [ "path", {
            d: "M10 12H3"
        } ], [ "path", {
            d: "M10 19H3"
        } ], [ "circle", {
            cx: "17",
            cy: "15",
            r: "3"
        } ], [ "path", {
            d: "m21 19-1.9-1.9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextSelect = [ [ "path", {
            d: "M14 21h1"
        } ], [ "path", {
            d: "M14 3h1"
        } ], [ "path", {
            d: "M19 3a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M21 14v1"
        } ], [ "path", {
            d: "M21 19a2 2 0 0 1-2 2"
        } ], [ "path", {
            d: "M21 9v1"
        } ], [ "path", {
            d: "M3 14v1"
        } ], [ "path", {
            d: "M3 9v1"
        } ], [ "path", {
            d: "M5 21a2 2 0 0 1-2-2"
        } ], [ "path", {
            d: "M5 3a2 2 0 0 0-2 2"
        } ], [ "path", {
            d: "M7 12h10"
        } ], [ "path", {
            d: "M7 16h6"
        } ], [ "path", {
            d: "M7 8h8"
        } ], [ "path", {
            d: "M9 21h1"
        } ], [ "path", {
            d: "M9 3h1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Theater = [ [ "path", {
            d: "M2 10s3-3 3-8"
        } ], [ "path", {
            d: "M22 10s-3-3-3-8"
        } ], [ "path", {
            d: "M10 2c0 4.4-3.6 8-8 8"
        } ], [ "path", {
            d: "M14 2c0 4.4 3.6 8 8 8"
        } ], [ "path", {
            d: "M2 10s2 2 2 5"
        } ], [ "path", {
            d: "M22 10s-2 2-2 5"
        } ], [ "path", {
            d: "M8 15h8"
        } ], [ "path", {
            d: "M2 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1"
        } ], [ "path", {
            d: "M14 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TextWrap = [ [ "path", {
            d: "m16 16-3 3 3 3"
        } ], [ "path", {
            d: "M3 12h14.5a1 1 0 0 1 0 7H13"
        } ], [ "path", {
            d: "M3 19h6"
        } ], [ "path", {
            d: "M3 5h18"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ThermometerSnowflake = [ [ "path", {
            d: "m10 20-1.25-2.5L6 18"
        } ], [ "path", {
            d: "M10 4 8.75 6.5 6 6"
        } ], [ "path", {
            d: "M10.585 15H10"
        } ], [ "path", {
            d: "M2 12h6.5L10 9"
        } ], [ "path", {
            d: "M20 14.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0z"
        } ], [ "path", {
            d: "m4 10 1.5 2L4 14"
        } ], [ "path", {
            d: "m7 21 3-6-1.5-3"
        } ], [ "path", {
            d: "m7 3 3 6h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ThermometerSun = [ [ "path", {
            d: "M12 9a4 4 0 0 0-2 7.5"
        } ], [ "path", {
            d: "M12 3v2"
        } ], [ "path", {
            d: "m6.6 18.4-1.4 1.4"
        } ], [ "path", {
            d: "M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z"
        } ], [ "path", {
            d: "M4 13H2"
        } ], [ "path", {
            d: "M6.34 7.34 4.93 5.93"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Thermometer = [ [ "path", {
            d: "M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ThumbsDown = [ [ "path", {
            d: "M17 14V2"
        } ], [ "path", {
            d: "M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ThumbsUp = [ [ "path", {
            d: "M7 10v12"
        } ], [ "path", {
            d: "M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TicketCheck = [ [ "path", {
            d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
        } ], [ "path", {
            d: "m9 12 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TicketMinus = [ [ "path", {
            d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
        } ], [ "path", {
            d: "M9 12h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TicketPercent = [ [ "path", {
            d: "M2 9a3 3 0 1 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 1 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
        } ], [ "path", {
            d: "M9 9h.01"
        } ], [ "path", {
            d: "m15 9-6 6"
        } ], [ "path", {
            d: "M15 15h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TicketPlus = [ [ "path", {
            d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
        } ], [ "path", {
            d: "M9 12h6"
        } ], [ "path", {
            d: "M12 9v6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TicketSlash = [ [ "path", {
            d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
        } ], [ "path", {
            d: "m9.5 14.5 5-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TicketX = [ [ "path", {
            d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
        } ], [ "path", {
            d: "m9.5 14.5 5-5"
        } ], [ "path", {
            d: "m9.5 9.5 5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ticket = [ [ "path", {
            d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"
        } ], [ "path", {
            d: "M13 5v2"
        } ], [ "path", {
            d: "M13 17v2"
        } ], [ "path", {
            d: "M13 11v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TicketsPlane = [ [ "path", {
            d: "M10.5 17h1.227a2 2 0 0 0 1.345-.52L18 12"
        } ], [ "path", {
            d: "m12 13.5 3.75.5"
        } ], [ "path", {
            d: "m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8"
        } ], [ "path", {
            d: "M6 10V8"
        } ], [ "path", {
            d: "M6 14v1"
        } ], [ "path", {
            d: "M6 19v2"
        } ], [ "rect", {
            x: "2",
            y: "8",
            width: "20",
            height: "13",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tickets = [ [ "path", {
            d: "m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8"
        } ], [ "path", {
            d: "M6 10V8"
        } ], [ "path", {
            d: "M6 14v1"
        } ], [ "path", {
            d: "M6 19v2"
        } ], [ "rect", {
            x: "2",
            y: "8",
            width: "20",
            height: "13",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TimerOff = [ [ "path", {
            d: "M10 2h4"
        } ], [ "path", {
            d: "M4.6 11a8 8 0 0 0 1.7 8.7 8 8 0 0 0 8.7 1.7"
        } ], [ "path", {
            d: "M7.4 7.4a8 8 0 0 1 10.3 1 8 8 0 0 1 .9 10.2"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M12 12v-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TimerReset = [ [ "path", {
            d: "M10 2h4"
        } ], [ "path", {
            d: "M12 14v-4"
        } ], [ "path", {
            d: "M4 13a8 8 0 0 1 8-7 8 8 0 1 1-5.3 14L4 17.6"
        } ], [ "path", {
            d: "M9 17H4v5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Timer = [ [ "line", {
            x1: "10",
            x2: "14",
            y1: "2",
            y2: "2"
        } ], [ "line", {
            x1: "12",
            x2: "15",
            y1: "14",
            y2: "11"
        } ], [ "circle", {
            cx: "12",
            cy: "14",
            r: "8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ToggleLeft = [ [ "circle", {
            cx: "9",
            cy: "12",
            r: "3"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "5",
            rx: "7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ToggleRight = [ [ "circle", {
            cx: "15",
            cy: "12",
            r: "3"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "5",
            rx: "7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Toilet = [ [ "path", {
            d: "M7 12h13a1 1 0 0 1 1 1 5 5 0 0 1-5 5h-.598a.5.5 0 0 0-.424.765l1.544 2.47a.5.5 0 0 1-.424.765H5.402a.5.5 0 0 1-.424-.765L7 18"
        } ], [ "path", {
            d: "M8 18a5 5 0 0 1-5-5V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ToolCase = [ [ "path", {
            d: "M10 15h4"
        } ], [ "path", {
            d: "m14.817 10.995-.971-1.45 1.034-1.232a2 2 0 0 0-2.025-3.238l-1.82.364L9.91 3.885a2 2 0 0 0-3.625.748L6.141 6.55l-1.725.426a2 2 0 0 0-.19 3.756l.657.27"
        } ], [ "path", {
            d: "m18.822 10.995 2.26-5.38a1 1 0 0 0-.557-1.318L16.954 2.9a1 1 0 0 0-1.281.533l-.924 2.122"
        } ], [ "path", {
            d: "M4 12.006A1 1 0 0 1 4.994 11H19a1 1 0 0 1 1 1v7a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tornado = [ [ "path", {
            d: "M21 4H3"
        } ], [ "path", {
            d: "M18 8H6"
        } ], [ "path", {
            d: "M19 12H9"
        } ], [ "path", {
            d: "M16 16h-6"
        } ], [ "path", {
            d: "M11 20H9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Torus = [ [ "ellipse", {
            cx: "12",
            cy: "11",
            rx: "3",
            ry: "2"
        } ], [ "ellipse", {
            cx: "12",
            cy: "12.5",
            rx: "10",
            ry: "8.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TouchpadOff = [ [ "path", {
            d: "M12 20v-6"
        } ], [ "path", {
            d: "M19.656 14H22"
        } ], [ "path", {
            d: "M2 14h12"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M20 20H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2"
        } ], [ "path", {
            d: "M9.656 4H20a2 2 0 0 1 2 2v10.344"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Touchpad = [ [ "rect", {
            width: "20",
            height: "16",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M2 14h20"
        } ], [ "path", {
            d: "M12 20v-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TowerControl = [ [ "path", {
            d: "M18.2 12.27 20 6H4l1.8 6.27a1 1 0 0 0 .95.73h10.5a1 1 0 0 0 .96-.73Z"
        } ], [ "path", {
            d: "M8 13v9"
        } ], [ "path", {
            d: "M16 22v-9"
        } ], [ "path", {
            d: "m9 6 1 7"
        } ], [ "path", {
            d: "m15 6-1 7"
        } ], [ "path", {
            d: "M12 6V2"
        } ], [ "path", {
            d: "M13 2h-2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ToyBrick = [ [ "rect", {
            width: "18",
            height: "12",
            x: "3",
            y: "8",
            rx: "1"
        } ], [ "path", {
            d: "M10 8V5c0-.6-.4-1-1-1H6a1 1 0 0 0-1 1v3"
        } ], [ "path", {
            d: "M19 8V5c0-.6-.4-1-1-1h-3a1 1 0 0 0-1 1v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tractor = [ [ "path", {
            d: "m10 11 11 .9a1 1 0 0 1 .8 1.1l-.665 4.158a1 1 0 0 1-.988.842H20"
        } ], [ "path", {
            d: "M16 18h-5"
        } ], [ "path", {
            d: "M18 5a1 1 0 0 0-1 1v5.573"
        } ], [ "path", {
            d: "M3 4h8.129a1 1 0 0 1 .99.863L13 11.246"
        } ], [ "path", {
            d: "M4 11V4"
        } ], [ "path", {
            d: "M7 15h.01"
        } ], [ "path", {
            d: "M8 10.1V4"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "2"
        } ], [ "circle", {
            cx: "7",
            cy: "15",
            r: "5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TrafficCone = [ [ "path", {
            d: "M16.05 10.966a5 2.5 0 0 1-8.1 0"
        } ], [ "path", {
            d: "m16.923 14.049 4.48 2.04a1 1 0 0 1 .001 1.831l-8.574 3.9a2 2 0 0 1-1.66 0l-8.574-3.91a1 1 0 0 1 0-1.83l4.484-2.04"
        } ], [ "path", {
            d: "M16.949 14.14a5 2.5 0 1 1-9.9 0L10.063 3.5a2 2 0 0 1 3.874 0z"
        } ], [ "path", {
            d: "M9.194 6.57a5 2.5 0 0 0 5.61 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TrainFrontTunnel = [ [ "path", {
            d: "M2 22V12a10 10 0 1 1 20 0v10"
        } ], [ "path", {
            d: "M15 6.8v1.4a3 2.8 0 1 1-6 0V6.8"
        } ], [ "path", {
            d: "M10 15h.01"
        } ], [ "path", {
            d: "M14 15h.01"
        } ], [ "path", {
            d: "M10 19a4 4 0 0 1-4-4v-3a6 6 0 1 1 12 0v3a4 4 0 0 1-4 4Z"
        } ], [ "path", {
            d: "m9 19-2 3"
        } ], [ "path", {
            d: "m15 19 2 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TrainFront = [ [ "path", {
            d: "M8 3.1V7a4 4 0 0 0 8 0V3.1"
        } ], [ "path", {
            d: "m9 15-1-1"
        } ], [ "path", {
            d: "m15 15 1-1"
        } ], [ "path", {
            d: "M9 19c-2.8 0-5-2.2-5-5v-4a8 8 0 0 1 16 0v4c0 2.8-2.2 5-5 5Z"
        } ], [ "path", {
            d: "m8 19-2 3"
        } ], [ "path", {
            d: "m16 19 2 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TrainTrack = [ [ "path", {
            d: "M2 17 17 2"
        } ], [ "path", {
            d: "m2 14 8 8"
        } ], [ "path", {
            d: "m5 11 8 8"
        } ], [ "path", {
            d: "m8 8 8 8"
        } ], [ "path", {
            d: "m11 5 8 8"
        } ], [ "path", {
            d: "m14 2 8 8"
        } ], [ "path", {
            d: "M7 22 22 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TramFront = [ [ "rect", {
            width: "16",
            height: "16",
            x: "4",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M4 11h16"
        } ], [ "path", {
            d: "M12 3v8"
        } ], [ "path", {
            d: "m8 19-2 3"
        } ], [ "path", {
            d: "m18 22-2-3"
        } ], [ "path", {
            d: "M8 15h.01"
        } ], [ "path", {
            d: "M16 15h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Transgender = [ [ "path", {
            d: "M12 16v6"
        } ], [ "path", {
            d: "M14 20h-4"
        } ], [ "path", {
            d: "M18 2h4v4"
        } ], [ "path", {
            d: "m2 2 7.17 7.17"
        } ], [ "path", {
            d: "M2 5.355V2h3.357"
        } ], [ "path", {
            d: "m22 2-7.17 7.17"
        } ], [ "path", {
            d: "M8 5 5 8"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Trash2 = [ [ "path", {
            d: "M10 11v6"
        } ], [ "path", {
            d: "M14 11v6"
        } ], [ "path", {
            d: "M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6"
        } ], [ "path", {
            d: "M3 6h18"
        } ], [ "path", {
            d: "M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Trash = [ [ "path", {
            d: "M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6"
        } ], [ "path", {
            d: "M3 6h18"
        } ], [ "path", {
            d: "M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TreeDeciduous = [ [ "path", {
            d: "M8 19a4 4 0 0 1-2.24-7.32A3.5 3.5 0 0 1 9 6.03V6a3 3 0 1 1 6 0v.04a3.5 3.5 0 0 1 3.24 5.65A4 4 0 0 1 16 19Z"
        } ], [ "path", {
            d: "M12 19v3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TreePalm = [ [ "path", {
            d: "M13 8c0-2.76-2.46-5-5.5-5S2 5.24 2 8h2l1-1 1 1h4"
        } ], [ "path", {
            d: "M13 7.14A5.82 5.82 0 0 1 16.5 6c3.04 0 5.5 2.24 5.5 5h-3l-1-1-1 1h-3"
        } ], [ "path", {
            d: "M5.89 9.71c-2.15 2.15-2.3 5.47-.35 7.43l4.24-4.25.7-.7.71-.71 2.12-2.12c-1.95-1.96-5.27-1.8-7.42.35"
        } ], [ "path", {
            d: "M11 15.5c.5 2.5-.17 4.5-1 6.5h4c2-5.5-.5-12-1-14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TreePine = [ [ "path", {
            d: "m17 14 3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7H17Z"
        } ], [ "path", {
            d: "M12 22v-3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Trees = [ [ "path", {
            d: "M10 10v.2A3 3 0 0 1 8.9 16H5a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z"
        } ], [ "path", {
            d: "M7 16v6"
        } ], [ "path", {
            d: "M13 19v3"
        } ], [ "path", {
            d: "M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Trello = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2",
            ry: "2"
        } ], [ "rect", {
            width: "3",
            height: "9",
            x: "7",
            y: "7"
        } ], [ "rect", {
            width: "3",
            height: "5",
            x: "14",
            y: "7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TrendingDown = [ [ "path", {
            d: "M16 17h6v-6"
        } ], [ "path", {
            d: "m22 17-8.5-8.5-5 5L2 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TrendingUpDown = [ [ "path", {
            d: "M14.828 14.828 21 21"
        } ], [ "path", {
            d: "M21 16v5h-5"
        } ], [ "path", {
            d: "m21 3-9 9-4-4-6 6"
        } ], [ "path", {
            d: "M21 8V3h-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TrendingUp = [ [ "path", {
            d: "M16 7h6v6"
        } ], [ "path", {
            d: "m22 7-8.5 8.5-5-5L2 17"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TriangleAlert = [ [ "path", {
            d: "m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3"
        } ], [ "path", {
            d: "M12 9v4"
        } ], [ "path", {
            d: "M12 17h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TriangleDashed = [ [ "path", {
            d: "M10.17 4.193a2 2 0 0 1 3.666.013"
        } ], [ "path", {
            d: "M14 21h2"
        } ], [ "path", {
            d: "m15.874 7.743 1 1.732"
        } ], [ "path", {
            d: "m18.849 12.952 1 1.732"
        } ], [ "path", {
            d: "M21.824 18.18a2 2 0 0 1-1.835 2.824"
        } ], [ "path", {
            d: "M4.024 21a2 2 0 0 1-1.839-2.839"
        } ], [ "path", {
            d: "m5.136 12.952-1 1.732"
        } ], [ "path", {
            d: "M8 21h2"
        } ], [ "path", {
            d: "m8.102 7.743-1 1.732"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TriangleRight = [ [ "path", {
            d: "M22 18a2 2 0 0 1-2 2H3c-1.1 0-1.3-.6-.4-1.3L20.4 4.3c.9-.7 1.6-.4 1.6.7Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Trophy = [ [ "path", {
            d: "M10 14.66v1.626a2 2 0 0 1-.976 1.696A5 5 0 0 0 7 21.978"
        } ], [ "path", {
            d: "M14 14.66v1.626a2 2 0 0 0 .976 1.696A5 5 0 0 1 17 21.978"
        } ], [ "path", {
            d: "M18 9h1.5a1 1 0 0 0 0-5H18"
        } ], [ "path", {
            d: "M4 22h16"
        } ], [ "path", {
            d: "M6 9a6 6 0 0 0 12 0V3a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1z"
        } ], [ "path", {
            d: "M6 9H4.5a1 1 0 0 1 0-5H6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Triangle = [ [ "path", {
            d: "M13.73 4a2 2 0 0 0-3.46 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TruckElectric = [ [ "path", {
            d: "M14 19V7a2 2 0 0 0-2-2H9"
        } ], [ "path", {
            d: "M15 19H9"
        } ], [ "path", {
            d: "M19 19h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.62L18.3 9.38a1 1 0 0 0-.78-.38H14"
        } ], [ "path", {
            d: "M2 13v5a1 1 0 0 0 1 1h2"
        } ], [ "path", {
            d: "M4 3 2.15 5.15a.495.495 0 0 0 .35.86h2.15a.47.47 0 0 1 .35.86L3 9.02"
        } ], [ "circle", {
            cx: "17",
            cy: "19",
            r: "2"
        } ], [ "circle", {
            cx: "7",
            cy: "19",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Truck = [ [ "path", {
            d: "M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2"
        } ], [ "path", {
            d: "M15 18H9"
        } ], [ "path", {
            d: "M19 18h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.624l-3.48-4.35A1 1 0 0 0 17.52 8H14"
        } ], [ "circle", {
            cx: "17",
            cy: "18",
            r: "2"
        } ], [ "circle", {
            cx: "7",
            cy: "18",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TurkishLira = [ [ "path", {
            d: "M15 4 5 9"
        } ], [ "path", {
            d: "m15 8.5-10 5"
        } ], [ "path", {
            d: "M18 12a9 9 0 0 1-9 9V3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Turntable = [ [ "path", {
            d: "M10 12.01h.01"
        } ], [ "path", {
            d: "M18 8v4a8 8 0 0 1-1.07 4"
        } ], [ "circle", {
            cx: "10",
            cy: "12",
            r: "4"
        } ], [ "rect", {
            x: "2",
            y: "4",
            width: "20",
            height: "16",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Turtle = [ [ "path", {
            d: "m12 10 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a8 8 0 1 0-16 0v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3l2-4h4Z"
        } ], [ "path", {
            d: "M4.82 7.9 8 10"
        } ], [ "path", {
            d: "M15.18 7.9 12 10"
        } ], [ "path", {
            d: "M16.93 10H20a2 2 0 0 1 0 4H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TvMinimal = [ [ "path", {
            d: "M7 21h10"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "3",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TvMinimalPlay = [ [ "path", {
            d: "M15.033 9.44a.647.647 0 0 1 0 1.12l-4.065 2.352a.645.645 0 0 1-.968-.56V7.648a.645.645 0 0 1 .967-.56z"
        } ], [ "path", {
            d: "M7 21h10"
        } ], [ "rect", {
            width: "20",
            height: "14",
            x: "2",
            y: "3",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Tv = [ [ "path", {
            d: "m17 2-5 5-5-5"
        } ], [ "rect", {
            width: "20",
            height: "15",
            x: "2",
            y: "7",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Twitch = [ [ "path", {
            d: "M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Twitter = [ [ "path", {
            d: "M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const TypeOutline = [ [ "path", {
            d: "M14 16.5a.5.5 0 0 0 .5.5h.5a2 2 0 0 1 0 4H9a2 2 0 0 1 0-4h.5a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V8a2 2 0 0 1-4 0V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v3a2 2 0 0 1-4 0v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Type = [ [ "path", {
            d: "M12 4v16"
        } ], [ "path", {
            d: "M4 7V5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2"
        } ], [ "path", {
            d: "M9 20h6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UmbrellaOff = [ [ "path", {
            d: "M12 13v7a2 2 0 0 0 4 0"
        } ], [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "M18.656 13h2.336a1 1 0 0 0 .97-1.274 10.284 10.284 0 0 0-12.07-7.51"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "M5.961 5.957a10.28 10.28 0 0 0-3.922 5.769A1 1 0 0 0 3 13h10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Umbrella = [ [ "path", {
            d: "M12 13v7a2 2 0 0 0 4 0"
        } ], [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "M20.992 13a1 1 0 0 0 .97-1.274 10.284 10.284 0 0 0-19.923 0A1 1 0 0 0 3 13z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Underline = [ [ "path", {
            d: "M6 4v6a6 6 0 0 0 12 0V4"
        } ], [ "line", {
            x1: "4",
            x2: "20",
            y1: "20",
            y2: "20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Undo2 = [ [ "path", {
            d: "M9 14 4 9l5-5"
        } ], [ "path", {
            d: "M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UndoDot = [ [ "path", {
            d: "M21 17a9 9 0 0 0-15-6.7L3 13"
        } ], [ "path", {
            d: "M3 7v6h6"
        } ], [ "circle", {
            cx: "12",
            cy: "17",
            r: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Undo = [ [ "path", {
            d: "M3 7v6h6"
        } ], [ "path", {
            d: "M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UnfoldHorizontal = [ [ "path", {
            d: "M16 12h6"
        } ], [ "path", {
            d: "M8 12H2"
        } ], [ "path", {
            d: "M12 2v2"
        } ], [ "path", {
            d: "M12 8v2"
        } ], [ "path", {
            d: "M12 14v2"
        } ], [ "path", {
            d: "M12 20v2"
        } ], [ "path", {
            d: "m19 15 3-3-3-3"
        } ], [ "path", {
            d: "m5 9-3 3 3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UnfoldVertical = [ [ "path", {
            d: "M12 22v-6"
        } ], [ "path", {
            d: "M12 8V2"
        } ], [ "path", {
            d: "M4 12H2"
        } ], [ "path", {
            d: "M10 12H8"
        } ], [ "path", {
            d: "M16 12h-2"
        } ], [ "path", {
            d: "M22 12h-2"
        } ], [ "path", {
            d: "m15 19-3 3-3-3"
        } ], [ "path", {
            d: "m15 5-3-3-3 3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Ungroup = [ [ "rect", {
            width: "8",
            height: "6",
            x: "5",
            y: "4",
            rx: "1"
        } ], [ "rect", {
            width: "8",
            height: "6",
            x: "11",
            y: "14",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const University = [ [ "path", {
            d: "M14 21v-3a2 2 0 0 0-4 0v3"
        } ], [ "path", {
            d: "M18 12h.01"
        } ], [ "path", {
            d: "M18 16h.01"
        } ], [ "path", {
            d: "M22 7a1 1 0 0 0-1-1h-2a2 2 0 0 1-1.143-.359L13.143 2.36a2 2 0 0 0-2.286-.001L6.143 5.64A2 2 0 0 1 5 6H3a1 1 0 0 0-1 1v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2z"
        } ], [ "path", {
            d: "M6 12h.01"
        } ], [ "path", {
            d: "M6 16h.01"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Unlink2 = [ [ "path", {
            d: "M15 7h2a5 5 0 0 1 0 10h-2m-6 0H7A5 5 0 0 1 7 7h2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Unlink = [ [ "path", {
            d: "m18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71"
        } ], [ "path", {
            d: "m5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71"
        } ], [ "line", {
            x1: "8",
            x2: "8",
            y1: "2",
            y2: "5"
        } ], [ "line", {
            x1: "2",
            x2: "5",
            y1: "8",
            y2: "8"
        } ], [ "line", {
            x1: "16",
            x2: "16",
            y1: "19",
            y2: "22"
        } ], [ "line", {
            x1: "19",
            x2: "22",
            y1: "16",
            y2: "16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Unplug = [ [ "path", {
            d: "m19 5 3-3"
        } ], [ "path", {
            d: "m2 22 3-3"
        } ], [ "path", {
            d: "M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z"
        } ], [ "path", {
            d: "M7.5 13.5 10 11"
        } ], [ "path", {
            d: "M10.5 16.5 13 14"
        } ], [ "path", {
            d: "m12 6 6 6 2.3-2.3a2.4 2.4 0 0 0 0-3.4l-2.6-2.6a2.4 2.4 0 0 0-3.4 0Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Upload = [ [ "path", {
            d: "M12 3v12"
        } ], [ "path", {
            d: "m17 8-5-5-5 5"
        } ], [ "path", {
            d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Usb = [ [ "circle", {
            cx: "10",
            cy: "7",
            r: "1"
        } ], [ "circle", {
            cx: "4",
            cy: "20",
            r: "1"
        } ], [ "path", {
            d: "M4.7 19.3 19 5"
        } ], [ "path", {
            d: "m21 3-3 1 2 2Z"
        } ], [ "path", {
            d: "M9.26 7.68 5 12l2 5"
        } ], [ "path", {
            d: "m10 14 5 2 3.5-3.5"
        } ], [ "path", {
            d: "m18 12 1-1 1 1-1 1Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserCheck = [ [ "path", {
            d: "m16 11 2 2 4-4"
        } ], [ "path", {
            d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
        } ], [ "circle", {
            cx: "9",
            cy: "7",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserCog = [ [ "path", {
            d: "M10 15H6a4 4 0 0 0-4 4v2"
        } ], [ "path", {
            d: "m14.305 16.53.923-.382"
        } ], [ "path", {
            d: "m15.228 13.852-.923-.383"
        } ], [ "path", {
            d: "m16.852 12.228-.383-.923"
        } ], [ "path", {
            d: "m16.852 17.772-.383.924"
        } ], [ "path", {
            d: "m19.148 12.228.383-.923"
        } ], [ "path", {
            d: "m19.53 18.696-.382-.924"
        } ], [ "path", {
            d: "m20.772 13.852.924-.383"
        } ], [ "path", {
            d: "m20.772 16.148.924.383"
        } ], [ "circle", {
            cx: "18",
            cy: "15",
            r: "3"
        } ], [ "circle", {
            cx: "9",
            cy: "7",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserLock = [ [ "circle", {
            cx: "10",
            cy: "7",
            r: "4"
        } ], [ "path", {
            d: "M10.3 15H7a4 4 0 0 0-4 4v2"
        } ], [ "path", {
            d: "M15 15.5V14a2 2 0 0 1 4 0v1.5"
        } ], [ "rect", {
            width: "8",
            height: "5",
            x: "13",
            y: "16",
            rx: ".899"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserMinus = [ [ "path", {
            d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
        } ], [ "circle", {
            cx: "9",
            cy: "7",
            r: "4"
        } ], [ "line", {
            x1: "22",
            x2: "16",
            y1: "11",
            y2: "11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserPen = [ [ "path", {
            d: "M11.5 15H7a4 4 0 0 0-4 4v2"
        } ], [ "path", {
            d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ], [ "circle", {
            cx: "10",
            cy: "7",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserPlus = [ [ "path", {
            d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
        } ], [ "circle", {
            cx: "9",
            cy: "7",
            r: "4"
        } ], [ "line", {
            x1: "19",
            x2: "19",
            y1: "8",
            y2: "14"
        } ], [ "line", {
            x1: "22",
            x2: "16",
            y1: "11",
            y2: "11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserRoundCheck = [ [ "path", {
            d: "M2 21a8 8 0 0 1 13.292-6"
        } ], [ "circle", {
            cx: "10",
            cy: "8",
            r: "5"
        } ], [ "path", {
            d: "m16 19 2 2 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserRoundCog = [ [ "path", {
            d: "m14.305 19.53.923-.382"
        } ], [ "path", {
            d: "m15.228 16.852-.923-.383"
        } ], [ "path", {
            d: "m16.852 15.228-.383-.923"
        } ], [ "path", {
            d: "m16.852 20.772-.383.924"
        } ], [ "path", {
            d: "m19.148 15.228.383-.923"
        } ], [ "path", {
            d: "m19.53 21.696-.382-.924"
        } ], [ "path", {
            d: "M2 21a8 8 0 0 1 10.434-7.62"
        } ], [ "path", {
            d: "m20.772 16.852.924-.383"
        } ], [ "path", {
            d: "m20.772 19.148.924.383"
        } ], [ "circle", {
            cx: "10",
            cy: "8",
            r: "5"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserRoundMinus = [ [ "path", {
            d: "M2 21a8 8 0 0 1 13.292-6"
        } ], [ "circle", {
            cx: "10",
            cy: "8",
            r: "5"
        } ], [ "path", {
            d: "M22 19h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserRoundPen = [ [ "path", {
            d: "M2 21a8 8 0 0 1 10.821-7.487"
        } ], [ "path", {
            d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ], [ "circle", {
            cx: "10",
            cy: "8",
            r: "5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserRoundPlus = [ [ "path", {
            d: "M2 21a8 8 0 0 1 13.292-6"
        } ], [ "circle", {
            cx: "10",
            cy: "8",
            r: "5"
        } ], [ "path", {
            d: "M19 16v6"
        } ], [ "path", {
            d: "M22 19h-6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserRoundSearch = [ [ "circle", {
            cx: "10",
            cy: "8",
            r: "5"
        } ], [ "path", {
            d: "M2 21a8 8 0 0 1 10.434-7.62"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ], [ "path", {
            d: "m22 22-1.9-1.9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserRoundX = [ [ "path", {
            d: "M2 21a8 8 0 0 1 11.873-7"
        } ], [ "circle", {
            cx: "10",
            cy: "8",
            r: "5"
        } ], [ "path", {
            d: "m17 17 5 5"
        } ], [ "path", {
            d: "m22 17-5 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserRound = [ [ "circle", {
            cx: "12",
            cy: "8",
            r: "5"
        } ], [ "path", {
            d: "M20 21a8 8 0 0 0-16 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserSearch = [ [ "circle", {
            cx: "10",
            cy: "7",
            r: "4"
        } ], [ "path", {
            d: "M10.3 15H7a4 4 0 0 0-4 4v2"
        } ], [ "circle", {
            cx: "17",
            cy: "17",
            r: "3"
        } ], [ "path", {
            d: "m21 21-1.9-1.9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserStar = [ [ "path", {
            d: "M16.051 12.616a1 1 0 0 1 1.909.024l.737 1.452a1 1 0 0 0 .737.535l1.634.256a1 1 0 0 1 .588 1.806l-1.172 1.168a1 1 0 0 0-.282.866l.259 1.613a1 1 0 0 1-1.541 1.134l-1.465-.75a1 1 0 0 0-.912 0l-1.465.75a1 1 0 0 1-1.539-1.133l.258-1.613a1 1 0 0 0-.282-.866l-1.156-1.153a1 1 0 0 1 .572-1.822l1.633-.256a1 1 0 0 0 .737-.535z"
        } ], [ "path", {
            d: "M8 15H7a4 4 0 0 0-4 4v2"
        } ], [ "circle", {
            cx: "10",
            cy: "7",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UserX = [ [ "path", {
            d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
        } ], [ "circle", {
            cx: "9",
            cy: "7",
            r: "4"
        } ], [ "line", {
            x1: "17",
            x2: "22",
            y1: "8",
            y2: "13"
        } ], [ "line", {
            x1: "22",
            x2: "17",
            y1: "8",
            y2: "13"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const User = [ [ "path", {
            d: "M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"
        } ], [ "circle", {
            cx: "12",
            cy: "7",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UsersRound = [ [ "path", {
            d: "M18 21a8 8 0 0 0-16 0"
        } ], [ "circle", {
            cx: "10",
            cy: "8",
            r: "5"
        } ], [ "path", {
            d: "M22 20c0-3.37-2-6.5-4-8a5 5 0 0 0-.45-8.3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Users = [ [ "path", {
            d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"
        } ], [ "path", {
            d: "M16 3.128a4 4 0 0 1 0 7.744"
        } ], [ "path", {
            d: "M22 21v-2a4 4 0 0 0-3-3.87"
        } ], [ "circle", {
            cx: "9",
            cy: "7",
            r: "4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UtensilsCrossed = [ [ "path", {
            d: "m16 2-2.3 2.3a3 3 0 0 0 0 4.2l1.8 1.8a3 3 0 0 0 4.2 0L22 8"
        } ], [ "path", {
            d: "M15 15 3.3 3.3a4.2 4.2 0 0 0 0 6l7.3 7.3c.7.7 2 .7 2.8 0L15 15Zm0 0 7 7"
        } ], [ "path", {
            d: "m2.1 21.8 6.4-6.3"
        } ], [ "path", {
            d: "m19 5-7 7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Utensils = [ [ "path", {
            d: "M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2"
        } ], [ "path", {
            d: "M7 2v20"
        } ], [ "path", {
            d: "M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const UtilityPole = [ [ "path", {
            d: "M12 2v20"
        } ], [ "path", {
            d: "M2 5h20"
        } ], [ "path", {
            d: "M3 3v2"
        } ], [ "path", {
            d: "M7 3v2"
        } ], [ "path", {
            d: "M17 3v2"
        } ], [ "path", {
            d: "M21 3v2"
        } ], [ "path", {
            d: "m19 5-7 7-7-7"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Variable = [ [ "path", {
            d: "M8 21s-4-3-4-9 4-9 4-9"
        } ], [ "path", {
            d: "M16 3s4 3 4 9-4 9-4 9"
        } ], [ "line", {
            x1: "15",
            x2: "9",
            y1: "9",
            y2: "15"
        } ], [ "line", {
            x1: "9",
            x2: "15",
            y1: "9",
            y2: "15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Vault = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "circle", {
            cx: "7.5",
            cy: "7.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "path", {
            d: "m7.9 7.9 2.7 2.7"
        } ], [ "circle", {
            cx: "16.5",
            cy: "7.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "path", {
            d: "m13.4 10.6 2.7-2.7"
        } ], [ "circle", {
            cx: "7.5",
            cy: "16.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "path", {
            d: "m7.9 16.1 2.7-2.7"
        } ], [ "circle", {
            cx: "16.5",
            cy: "16.5",
            r: ".5",
            fill: "currentColor"
        } ], [ "path", {
            d: "m13.4 13.4 2.7 2.7"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const VectorSquare = [ [ "path", {
            d: "M19.5 7a24 24 0 0 1 0 10"
        } ], [ "path", {
            d: "M4.5 7a24 24 0 0 0 0 10"
        } ], [ "path", {
            d: "M7 19.5a24 24 0 0 0 10 0"
        } ], [ "path", {
            d: "M7 4.5a24 24 0 0 1 10 0"
        } ], [ "rect", {
            x: "17",
            y: "17",
            width: "5",
            height: "5",
            rx: "1"
        } ], [ "rect", {
            x: "17",
            y: "2",
            width: "5",
            height: "5",
            rx: "1"
        } ], [ "rect", {
            x: "2",
            y: "17",
            width: "5",
            height: "5",
            rx: "1"
        } ], [ "rect", {
            x: "2",
            y: "2",
            width: "5",
            height: "5",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Vegan = [ [ "path", {
            d: "M16 8q6 0 6-6-6 0-6 6"
        } ], [ "path", {
            d: "M17.41 3.59a10 10 0 1 0 3 3"
        } ], [ "path", {
            d: "M2 2a26.6 26.6 0 0 1 10 20c.9-6.82 1.5-9.5 4-14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const VenetianMask = [ [ "path", {
            d: "M18 11c-1.5 0-2.5.5-3 2"
        } ], [ "path", {
            d: "M4 6a2 2 0 0 0-2 2v4a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V8a2 2 0 0 0-2-2h-3a8 8 0 0 0-5 2 8 8 0 0 0-5-2z"
        } ], [ "path", {
            d: "M6 11c1.5 0 2.5.5 3 2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const VenusAndMars = [ [ "path", {
            d: "M10 20h4"
        } ], [ "path", {
            d: "M12 16v6"
        } ], [ "path", {
            d: "M17 2h4v4"
        } ], [ "path", {
            d: "m21 2-5.46 5.46"
        } ], [ "circle", {
            cx: "12",
            cy: "11",
            r: "5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Venus = [ [ "path", {
            d: "M12 15v7"
        } ], [ "path", {
            d: "M9 19h6"
        } ], [ "circle", {
            cx: "12",
            cy: "9",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const VibrateOff = [ [ "path", {
            d: "m2 8 2 2-2 2 2 2-2 2"
        } ], [ "path", {
            d: "m22 8-2 2 2 2-2 2 2 2"
        } ], [ "path", {
            d: "M8 8v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2"
        } ], [ "path", {
            d: "M16 10.34V6c0-.55-.45-1-1-1h-4.34"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Vibrate = [ [ "path", {
            d: "m2 8 2 2-2 2 2 2-2 2"
        } ], [ "path", {
            d: "m22 8-2 2 2 2-2 2 2 2"
        } ], [ "rect", {
            width: "8",
            height: "14",
            x: "8",
            y: "5",
            rx: "1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const VideoOff = [ [ "path", {
            d: "M10.66 6H14a2 2 0 0 1 2 2v2.5l5.248-3.062A.5.5 0 0 1 22 7.87v8.196"
        } ], [ "path", {
            d: "M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Video = [ [ "path", {
            d: "m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5"
        } ], [ "rect", {
            x: "2",
            y: "6",
            width: "14",
            height: "12",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Videotape = [ [ "rect", {
            width: "20",
            height: "16",
            x: "2",
            y: "4",
            rx: "2"
        } ], [ "path", {
            d: "M2 8h20"
        } ], [ "circle", {
            cx: "8",
            cy: "14",
            r: "2"
        } ], [ "path", {
            d: "M8 12h8"
        } ], [ "circle", {
            cx: "16",
            cy: "14",
            r: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const View = [ [ "path", {
            d: "M21 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2"
        } ], [ "path", {
            d: "M21 7V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "1"
        } ], [ "path", {
            d: "M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Voicemail = [ [ "circle", {
            cx: "6",
            cy: "12",
            r: "4"
        } ], [ "circle", {
            cx: "18",
            cy: "12",
            r: "4"
        } ], [ "line", {
            x1: "6",
            x2: "18",
            y1: "16",
            y2: "16"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Volleyball = [ [ "path", {
            d: "M11.1 7.1a16.55 16.55 0 0 1 10.9 4"
        } ], [ "path", {
            d: "M12 12a12.6 12.6 0 0 1-8.7 5"
        } ], [ "path", {
            d: "M16.8 13.6a16.55 16.55 0 0 1-9 7.5"
        } ], [ "path", {
            d: "M20.7 17a12.8 12.8 0 0 0-8.7-5 13.3 13.3 0 0 1 0-10"
        } ], [ "path", {
            d: "M6.3 3.8a16.55 16.55 0 0 0 1.9 11.5"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "10"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Volume1 = [ [ "path", {
            d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"
        } ], [ "path", {
            d: "M16 9a5 5 0 0 1 0 6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Volume2 = [ [ "path", {
            d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"
        } ], [ "path", {
            d: "M16 9a5 5 0 0 1 0 6"
        } ], [ "path", {
            d: "M19.364 18.364a9 9 0 0 0 0-12.728"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const VolumeX = [ [ "path", {
            d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"
        } ], [ "line", {
            x1: "22",
            x2: "16",
            y1: "9",
            y2: "15"
        } ], [ "line", {
            x1: "16",
            x2: "22",
            y1: "9",
            y2: "15"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const VolumeOff = [ [ "path", {
            d: "M16 9a5 5 0 0 1 .95 2.293"
        } ], [ "path", {
            d: "M19.364 5.636a9 9 0 0 1 1.889 9.96"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ], [ "path", {
            d: "m7 7-.587.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298V11"
        } ], [ "path", {
            d: "M9.828 4.172A.686.686 0 0 1 11 4.657v.686"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Volume = [ [ "path", {
            d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Vote = [ [ "path", {
            d: "m9 12 2 2 4-4"
        } ], [ "path", {
            d: "M5 7c0-1.1.9-2 2-2h10a2 2 0 0 1 2 2v12H5V7Z"
        } ], [ "path", {
            d: "M22 19H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WalletCards = [ [ "rect", {
            width: "18",
            height: "18",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M3 9a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2"
        } ], [ "path", {
            d: "M3 11h3c.8 0 1.6.3 2.1.9l1.1.9c1.6 1.6 4.1 1.6 5.7 0l1.1-.9c.5-.5 1.3-.9 2.1-.9H21"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WalletMinimal = [ [ "path", {
            d: "M17 14h.01"
        } ], [ "path", {
            d: "M7 7h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Wallet = [ [ "path", {
            d: "M19 7V4a1 1 0 0 0-1-1H5a2 2 0 0 0 0 4h15a1 1 0 0 1 1 1v4h-3a2 2 0 0 0 0 4h3a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1"
        } ], [ "path", {
            d: "M3 5v14a2 2 0 0 0 2 2h15a1 1 0 0 0 1-1v-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Wallpaper = [ [ "path", {
            d: "M12 17v4"
        } ], [ "path", {
            d: "M8 21h8"
        } ], [ "path", {
            d: "m9 17 6.1-6.1a2 2 0 0 1 2.81.01L22 15"
        } ], [ "circle", {
            cx: "8",
            cy: "9",
            r: "2"
        } ], [ "rect", {
            x: "2",
            y: "3",
            width: "20",
            height: "14",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WandSparkles = [ [ "path", {
            d: "m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72"
        } ], [ "path", {
            d: "m14 7 3 3"
        } ], [ "path", {
            d: "M5 6v4"
        } ], [ "path", {
            d: "M19 14v4"
        } ], [ "path", {
            d: "M10 2v2"
        } ], [ "path", {
            d: "M7 8H3"
        } ], [ "path", {
            d: "M21 16h-4"
        } ], [ "path", {
            d: "M11 3H9"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Wand = [ [ "path", {
            d: "M15 4V2"
        } ], [ "path", {
            d: "M15 16v-2"
        } ], [ "path", {
            d: "M8 9h2"
        } ], [ "path", {
            d: "M20 9h2"
        } ], [ "path", {
            d: "M17.8 11.8 19 13"
        } ], [ "path", {
            d: "M15 9h.01"
        } ], [ "path", {
            d: "M17.8 6.2 19 5"
        } ], [ "path", {
            d: "m3 21 9-9"
        } ], [ "path", {
            d: "M12.2 6.2 11 5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Warehouse = [ [ "path", {
            d: "M18 21V10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v11"
        } ], [ "path", {
            d: "M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 1.132-1.803l7.95-3.974a2 2 0 0 1 1.837 0l7.948 3.974A2 2 0 0 1 22 8z"
        } ], [ "path", {
            d: "M6 13h12"
        } ], [ "path", {
            d: "M6 17h12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WashingMachine = [ [ "path", {
            d: "M3 6h3"
        } ], [ "path", {
            d: "M17 6h.01"
        } ], [ "rect", {
            width: "18",
            height: "20",
            x: "3",
            y: "2",
            rx: "2"
        } ], [ "circle", {
            cx: "12",
            cy: "13",
            r: "5"
        } ], [ "path", {
            d: "M12 18a2.5 2.5 0 0 0 0-5 2.5 2.5 0 0 1 0-5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Watch = [ [ "path", {
            d: "M12 10v2.2l1.6 1"
        } ], [ "path", {
            d: "m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05"
        } ], [ "path", {
            d: "m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05"
        } ], [ "circle", {
            cx: "12",
            cy: "12",
            r: "6"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WavesLadder = [ [ "path", {
            d: "M19 5a2 2 0 0 0-2 2v11"
        } ], [ "path", {
            d: "M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
        } ], [ "path", {
            d: "M7 13h10"
        } ], [ "path", {
            d: "M7 9h10"
        } ], [ "path", {
            d: "M9 5a2 2 0 0 0-2 2v11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Waves = [ [ "path", {
            d: "M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
        } ], [ "path", {
            d: "M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
        } ], [ "path", {
            d: "M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Waypoints = [ [ "circle", {
            cx: "12",
            cy: "4.5",
            r: "2.5"
        } ], [ "path", {
            d: "m10.2 6.3-3.9 3.9"
        } ], [ "circle", {
            cx: "4.5",
            cy: "12",
            r: "2.5"
        } ], [ "path", {
            d: "M7 12h10"
        } ], [ "circle", {
            cx: "19.5",
            cy: "12",
            r: "2.5"
        } ], [ "path", {
            d: "m13.8 17.7 3.9-3.9"
        } ], [ "circle", {
            cx: "12",
            cy: "19.5",
            r: "2.5"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Webcam = [ [ "circle", {
            cx: "12",
            cy: "10",
            r: "8"
        } ], [ "circle", {
            cx: "12",
            cy: "10",
            r: "3"
        } ], [ "path", {
            d: "M7 22h10"
        } ], [ "path", {
            d: "M12 22v-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WebhookOff = [ [ "path", {
            d: "M17 17h-5c-1.09-.02-1.94.92-2.5 1.9A3 3 0 1 1 2.57 15"
        } ], [ "path", {
            d: "M9 3.4a4 4 0 0 1 6.52.66"
        } ], [ "path", {
            d: "m6 17 3.1-5.8a2.5 2.5 0 0 0 .057-2.05"
        } ], [ "path", {
            d: "M20.3 20.3a4 4 0 0 1-2.3.7"
        } ], [ "path", {
            d: "M18.6 13a4 4 0 0 1 3.357 3.414"
        } ], [ "path", {
            d: "m12 6 .6 1"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Webhook = [ [ "path", {
            d: "M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2"
        } ], [ "path", {
            d: "m6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06"
        } ], [ "path", {
            d: "m12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Weight = [ [ "circle", {
            cx: "12",
            cy: "5",
            r: "3"
        } ], [ "path", {
            d: "M6.5 8a2 2 0 0 0-1.905 1.46L2.1 18.5A2 2 0 0 0 4 21h16a2 2 0 0 0 1.925-2.54L19.4 9.5A2 2 0 0 0 17.48 8Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WheatOff = [ [ "path", {
            d: "m2 22 10-10"
        } ], [ "path", {
            d: "m16 8-1.17 1.17"
        } ], [ "path", {
            d: "M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z"
        } ], [ "path", {
            d: "m8 8-.53.53a3.5 3.5 0 0 0 0 4.94L9 15l1.53-1.53c.55-.55.88-1.25.98-1.97"
        } ], [ "path", {
            d: "M10.91 5.26c.15-.26.34-.51.56-.73L13 3l1.53 1.53a3.5 3.5 0 0 1 .28 4.62"
        } ], [ "path", {
            d: "M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z"
        } ], [ "path", {
            d: "M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z"
        } ], [ "path", {
            d: "m16 16-.53.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.49 3.49 0 0 1 1.97-.98"
        } ], [ "path", {
            d: "M18.74 13.09c.26-.15.51-.34.73-.56L21 11l-1.53-1.53a3.5 3.5 0 0 0-4.62-.28"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Wheat = [ [ "path", {
            d: "M2 22 16 8"
        } ], [ "path", {
            d: "M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z"
        } ], [ "path", {
            d: "M7.47 8.53 9 7l1.53 1.53a3.5 3.5 0 0 1 0 4.94L9 15l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z"
        } ], [ "path", {
            d: "M11.47 4.53 13 3l1.53 1.53a3.5 3.5 0 0 1 0 4.94L13 11l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z"
        } ], [ "path", {
            d: "M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z"
        } ], [ "path", {
            d: "M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z"
        } ], [ "path", {
            d: "M15.47 13.47 17 15l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z"
        } ], [ "path", {
            d: "M19.47 9.47 21 11l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L13 11l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WholeWord = [ [ "circle", {
            cx: "7",
            cy: "12",
            r: "3"
        } ], [ "path", {
            d: "M10 9v6"
        } ], [ "circle", {
            cx: "17",
            cy: "12",
            r: "3"
        } ], [ "path", {
            d: "M14 7v8"
        } ], [ "path", {
            d: "M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WifiCog = [ [ "path", {
            d: "m14.305 19.53.923-.382"
        } ], [ "path", {
            d: "m15.228 16.852-.923-.383"
        } ], [ "path", {
            d: "m16.852 15.228-.383-.923"
        } ], [ "path", {
            d: "m16.852 20.772-.383.924"
        } ], [ "path", {
            d: "m19.148 15.228.383-.923"
        } ], [ "path", {
            d: "m19.53 21.696-.382-.924"
        } ], [ "path", {
            d: "M2 7.82a15 15 0 0 1 20 0"
        } ], [ "path", {
            d: "m20.772 16.852.924-.383"
        } ], [ "path", {
            d: "m20.772 19.148.924.383"
        } ], [ "path", {
            d: "M5 11.858a10 10 0 0 1 11.5-1.785"
        } ], [ "path", {
            d: "M8.5 15.429a5 5 0 0 1 2.413-1.31"
        } ], [ "circle", {
            cx: "18",
            cy: "18",
            r: "3"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WifiHigh = [ [ "path", {
            d: "M12 20h.01"
        } ], [ "path", {
            d: "M5 12.859a10 10 0 0 1 14 0"
        } ], [ "path", {
            d: "M8.5 16.429a5 5 0 0 1 7 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WifiLow = [ [ "path", {
            d: "M12 20h.01"
        } ], [ "path", {
            d: "M8.5 16.429a5 5 0 0 1 7 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WifiOff = [ [ "path", {
            d: "M12 20h.01"
        } ], [ "path", {
            d: "M8.5 16.429a5 5 0 0 1 7 0"
        } ], [ "path", {
            d: "M5 12.859a10 10 0 0 1 5.17-2.69"
        } ], [ "path", {
            d: "M19 12.859a10 10 0 0 0-2.007-1.523"
        } ], [ "path", {
            d: "M2 8.82a15 15 0 0 1 4.177-2.643"
        } ], [ "path", {
            d: "M22 8.82a15 15 0 0 0-11.288-3.764"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WifiPen = [ [ "path", {
            d: "M2 8.82a15 15 0 0 1 20 0"
        } ], [ "path", {
            d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z"
        } ], [ "path", {
            d: "M5 12.859a10 10 0 0 1 10.5-2.222"
        } ], [ "path", {
            d: "M8.5 16.429a5 5 0 0 1 3-1.406"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WifiSync = [ [ "path", {
            d: "M11.965 10.105v4L13.5 12.5a5 5 0 0 1 8 1.5"
        } ], [ "path", {
            d: "M11.965 14.105h4"
        } ], [ "path", {
            d: "M17.965 18.105h4L20.43 19.71a5 5 0 0 1-8-1.5"
        } ], [ "path", {
            d: "M2 8.82a15 15 0 0 1 20 0"
        } ], [ "path", {
            d: "M21.965 22.105v-4"
        } ], [ "path", {
            d: "M5 12.86a10 10 0 0 1 3-2.032"
        } ], [ "path", {
            d: "M8.5 16.429h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WifiZero = [ [ "path", {
            d: "M12 20h.01"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Wifi = [ [ "path", {
            d: "M12 20h.01"
        } ], [ "path", {
            d: "M2 8.82a15 15 0 0 1 20 0"
        } ], [ "path", {
            d: "M5 12.859a10 10 0 0 1 14 0"
        } ], [ "path", {
            d: "M8.5 16.429a5 5 0 0 1 7 0"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WindArrowDown = [ [ "path", {
            d: "M10 2v8"
        } ], [ "path", {
            d: "M12.8 21.6A2 2 0 1 0 14 18H2"
        } ], [ "path", {
            d: "M17.5 10a2.5 2.5 0 1 1 2 4H2"
        } ], [ "path", {
            d: "m6 6 4 4 4-4"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Wind = [ [ "path", {
            d: "M12.8 19.6A2 2 0 1 0 14 16H2"
        } ], [ "path", {
            d: "M17.5 8a2.5 2.5 0 1 1 2 4H2"
        } ], [ "path", {
            d: "M9.8 4.4A2 2 0 1 1 11 8H2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const WineOff = [ [ "path", {
            d: "M8 22h8"
        } ], [ "path", {
            d: "M7 10h3m7 0h-1.343"
        } ], [ "path", {
            d: "M12 15v7"
        } ], [ "path", {
            d: "M7.307 7.307A12.33 12.33 0 0 0 7 10a5 5 0 0 0 7.391 4.391M8.638 2.981C8.75 2.668 8.872 2.34 9 2h6c1.5 4 2 6 2 8 0 .407-.05.809-.145 1.198"
        } ], [ "line", {
            x1: "2",
            x2: "22",
            y1: "2",
            y2: "22"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Wine = [ [ "path", {
            d: "M8 22h8"
        } ], [ "path", {
            d: "M7 10h10"
        } ], [ "path", {
            d: "M12 15v7"
        } ], [ "path", {
            d: "M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Workflow = [ [ "rect", {
            width: "8",
            height: "8",
            x: "3",
            y: "3",
            rx: "2"
        } ], [ "path", {
            d: "M7 11v4a2 2 0 0 0 2 2h4"
        } ], [ "rect", {
            width: "8",
            height: "8",
            x: "13",
            y: "13",
            rx: "2"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Worm = [ [ "path", {
            d: "m19 12-1.5 3"
        } ], [ "path", {
            d: "M19.63 18.81 22 20"
        } ], [ "path", {
            d: "M6.47 8.23a1.68 1.68 0 0 1 2.44 1.93l-.64 2.08a6.76 6.76 0 0 0 10.16 7.67l.42-.27a1 1 0 1 0-2.73-4.21l-.42.27a1.76 1.76 0 0 1-2.63-1.99l.64-2.08A6.66 6.66 0 0 0 3.94 3.9l-.7.4a1 1 0 1 0 2.55 4.34z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const X = [ [ "path", {
            d: "M18 6 6 18"
        } ], [ "path", {
            d: "m6 6 12 12"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Wrench = [ [ "path", {
            d: "M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.106-3.105c.32-.322.863-.22.983.218a6 6 0 0 1-8.259 7.057l-7.91 7.91a1 1 0 0 1-2.999-3l7.91-7.91a6 6 0 0 1 7.057-8.259c.438.12.54.662.219.984z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Youtube = [ [ "path", {
            d: "M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17"
        } ], [ "path", {
            d: "m10 15 5-3-5-3z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ZapOff = [ [ "path", {
            d: "M10.513 4.856 13.12 2.17a.5.5 0 0 1 .86.46l-1.377 4.317"
        } ], [ "path", {
            d: "M15.656 10H20a1 1 0 0 1 .78 1.63l-1.72 1.773"
        } ], [ "path", {
            d: "M16.273 16.273 10.88 21.83a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14H4a1 1 0 0 1-.78-1.63l4.507-4.643"
        } ], [ "path", {
            d: "m2 2 20 20"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const Zap = [ [ "path", {
            d: "M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ZoomIn = [ [ "circle", {
            cx: "11",
            cy: "11",
            r: "8"
        } ], [ "line", {
            x1: "21",
            x2: "16.65",
            y1: "21",
            y2: "16.65"
        } ], [ "line", {
            x1: "11",
            x2: "11",
            y1: "8",
            y2: "14"
        } ], [ "line", {
            x1: "8",
            x2: "14",
            y1: "11",
            y2: "11"
        } ] ];
        /**
 * @license lucide v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
        const ZoomOut = [ [ "circle", {
            cx: "11",
            cy: "11",
            r: "8"
        } ], [ "line", {
            x1: "21",
            x2: "16.65",
            y1: "21",
            y2: "16.65"
        } ], [ "line", {
            x1: "8",
            x2: "14",
            y1: "11",
            y2: "11"
        } ] ];
        let gotoBlock = (targetBlock, noHeader = false, speed = 500, offsetTop = 0) => {
            const targetBlockElement = document.querySelector(targetBlock);
            if (targetBlockElement) {
                let headerItem = "";
                let headerItemHeight = 0;
                if (noHeader) {
                    headerItem = "header.header";
                    const headerElement = document.querySelector(headerItem);
                    if (!headerElement.classList.contains("_header-scroll")) {
                        headerElement.style.cssText = `transition-duration: 0s;`;
                        headerElement.classList.add("_header-scroll");
                        headerItemHeight = headerElement.offsetHeight;
                        headerElement.classList.remove("_header-scroll");
                        setTimeout(() => {
                            headerElement.style.cssText = ``;
                        }, 0);
                    } else headerItemHeight = headerElement.offsetHeight;
                }
                let options = {
                    speedAsDuration: true,
                    speed,
                    header: headerItem,
                    offset: offsetTop,
                    easing: "easeOutQuad"
                };
                document.documentElement.classList.contains("menu-open") ? menuClose() : null;
                if (typeof SmoothScroll !== "undefined") (new SmoothScroll).animateScroll(targetBlockElement, "", options); else {
                    let targetBlockElementPosition = targetBlockElement.getBoundingClientRect().top + scrollY;
                    targetBlockElementPosition = headerItemHeight ? targetBlockElementPosition - headerItemHeight : targetBlockElementPosition;
                    targetBlockElementPosition = offsetTop ? targetBlockElementPosition - offsetTop : targetBlockElementPosition;
                    window.scrollTo({
                        top: targetBlockElementPosition,
                        behavior: "smooth"
                    });
                }
                FLS(`[gotoBlock]: Юхуу...їдемо до ${targetBlock}`);
            } else FLS(`[gotoBlock]: Йой... Такого блоку немає на сторінці: ${targetBlock}`);
        };
        let formValidate = {
            getErrors(form) {
                let error = 0;
                let formRequiredItems = form.querySelectorAll("*[data-required]");
                if (formRequiredItems.length) formRequiredItems.forEach(formRequiredItem => {
                    if ((formRequiredItem.offsetParent !== null || formRequiredItem.tagName === "SELECT") && !formRequiredItem.disabled) error += this.validateInput(formRequiredItem);
                });
                return error;
            },
            validateInput(formRequiredItem) {
                let error = 0;
                if (formRequiredItem.dataset.required === "email") {
                    formRequiredItem.value = formRequiredItem.value.replace(" ", "");
                    if (this.emailTest(formRequiredItem)) {
                        this.addError(formRequiredItem);
                        this.removeSuccess(formRequiredItem);
                        error++;
                    } else {
                        this.removeError(formRequiredItem);
                        this.addSuccess(formRequiredItem);
                    }
                } else if (formRequiredItem.type === "checkbox" && !formRequiredItem.checked) {
                    this.addError(formRequiredItem);
                    this.removeSuccess(formRequiredItem);
                    error++;
                } else if (!formRequiredItem.value.trim()) {
                    this.addError(formRequiredItem);
                    this.removeSuccess(formRequiredItem);
                    error++;
                } else {
                    this.removeError(formRequiredItem);
                    this.addSuccess(formRequiredItem);
                }
                return error;
            },
            addError(formRequiredItem) {
                formRequiredItem.classList.add("_form-error");
                formRequiredItem.parentElement.classList.add("_form-error");
                let inputError = formRequiredItem.parentElement.querySelector(".form__error");
                if (inputError) formRequiredItem.parentElement.removeChild(inputError);
                if (formRequiredItem.dataset.error) formRequiredItem.parentElement.insertAdjacentHTML("beforeend", `<div class="form__error">${formRequiredItem.dataset.error}</div>`);
            },
            removeError(formRequiredItem) {
                formRequiredItem.classList.remove("_form-error");
                formRequiredItem.parentElement.classList.remove("_form-error");
                if (formRequiredItem.parentElement.querySelector(".form__error")) formRequiredItem.parentElement.removeChild(formRequiredItem.parentElement.querySelector(".form__error"));
            },
            addSuccess(formRequiredItem) {
                formRequiredItem.classList.add("_form-success");
                formRequiredItem.parentElement.classList.add("_form-success");
            },
            removeSuccess(formRequiredItem) {
                formRequiredItem.classList.remove("_form-success");
                formRequiredItem.parentElement.classList.remove("_form-success");
            },
            formClean(form) {
                form.reset();
                setTimeout(() => {
                    let inputs = form.querySelectorAll("input,textarea");
                    for (let index = 0; index < inputs.length; index++) {
                        const el = inputs[index];
                        el.parentElement.classList.remove("_form-focus");
                        el.classList.remove("_form-focus");
                        formValidate.removeError(el);
                    }
                    let checkboxes = form.querySelectorAll(".checkbox__input");
                    if (checkboxes.length > 0) for (let index = 0; index < checkboxes.length; index++) {
                        const checkbox = checkboxes[index];
                        checkbox.checked = false;
                    }
                    if (flsModules.select) {
                        let selects = form.querySelectorAll("div.select");
                        if (selects.length) for (let index = 0; index < selects.length; index++) {
                            const select = selects[index].querySelector("select");
                            flsModules.select.selectBuild(select);
                        }
                    }
                }, 0);
            },
            emailTest(formRequiredItem) {
                return !/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,8})+$/.test(formRequiredItem.value);
            }
        };
        function formSubmit() {
            const forms = document.forms;
            if (forms.length) for (const form of forms) {
                form.addEventListener("submit", function(e) {
                    const form = e.target;
                    formSubmitAction(form, e);
                });
                form.addEventListener("reset", function(e) {
                    const form = e.target;
                    formValidate.formClean(form);
                });
            }
            async function formSubmitAction(form, e) {
                const error = !form.hasAttribute("data-no-validate") ? formValidate.getErrors(form) : 0;
                if (error === 0) {
                    const ajax = form.hasAttribute("data-ajax");
                    if (ajax) {
                        e.preventDefault();
                        const formAction = form.getAttribute("action") ? form.getAttribute("action").trim() : "#";
                        const formMethod = form.getAttribute("method") ? form.getAttribute("method").trim() : "GET";
                        const formData = new FormData(form);
                        form.classList.add("_sending");
                        const response = await fetch(formAction, {
                            method: formMethod,
                            body: formData
                        });
                        if (response.ok) {
                            let responseResult = await response.json();
                            form.classList.remove("_sending");
                            formSent(form, responseResult);
                        } else {
                            alert("Помилка");
                            form.classList.remove("_sending");
                        }
                    } else if (form.hasAttribute("data-dev")) {
                        e.preventDefault();
                        formSent(form);
                    }
                } else {
                    e.preventDefault();
                    if (form.querySelector("._form-error") && form.hasAttribute("data-goto-error")) {
                        const formGoToErrorClass = form.dataset.gotoError ? form.dataset.gotoError : "._form-error";
                        gotoBlock(formGoToErrorClass, true, 1e3);
                    }
                }
            }
            function formSent(form, responseResult = ``) {
                document.dispatchEvent(new CustomEvent("formSent", {
                    detail: {
                        form
                    }
                }));
                setTimeout(() => {
                    if (flsModules.popup) {
                        const popup = form.dataset.popupMessage;
                        popup ? flsModules.popup.open(popup) : null;
                    }
                }, 0);
                formValidate.formClean(form);
                formLogging(`Форму відправлено!`);
            }
            function formLogging(message) {
                FLS(`[Форми]: ${message}`);
            }
        }
        class SelectConstructor {
            constructor(props, data = null) {
                let defaultConfig = {
                    init: true,
                    logging: true,
                    speed: 150
                };
                this.config = Object.assign(defaultConfig, props);
                this.selectClasses = {
                    classSelect: "select",
                    classSelectBody: "select__body",
                    classSelectTitle: "select__title",
                    classSelectValue: "select__value",
                    classSelectLabel: "select__label",
                    classSelectInput: "select__input",
                    classSelectText: "select__text",
                    classSelectLink: "select__link",
                    classSelectOptions: "select__options",
                    classSelectOptionsScroll: "select__scroll",
                    classSelectOption: "select__option",
                    classSelectContent: "select__content",
                    classSelectRow: "select__row",
                    classSelectData: "select__asset",
                    classSelectDisabled: "_select-disabled",
                    classSelectTag: "_select-tag",
                    classSelectOpen: "_select-open",
                    classSelectActive: "_select-active",
                    classSelectFocus: "_select-focus",
                    classSelectMultiple: "_select-multiple",
                    classSelectCheckBox: "_select-checkbox",
                    classSelectOptionSelected: "_select-selected",
                    classSelectPseudoLabel: "_select-pseudo-label"
                };
                this._this = this;
                if (this.config.init) {
                    const selectItems = data ? document.querySelectorAll(data) : document.querySelectorAll("select");
                    if (selectItems.length) {
                        this.selectsInit(selectItems);
                        this.setLogging(`Прокинувся, построїв селектов: (${selectItems.length})`);
                    } else this.setLogging("Сплю, немає жодного select");
                }
            }
            getSelectClass(className) {
                return `.${className}`;
            }
            getSelectElement(selectItem, className) {
                return {
                    originalSelect: selectItem.querySelector("select"),
                    selectElement: selectItem.querySelector(this.getSelectClass(className))
                };
            }
            selectsInit(selectItems) {
                selectItems.forEach((originalSelect, index) => {
                    this.selectInit(originalSelect, index + 1);
                });
                document.addEventListener("click", function(e) {
                    this.selectsActions(e);
                }.bind(this));
                document.addEventListener("keydown", function(e) {
                    this.selectsActions(e);
                }.bind(this));
                document.addEventListener("focusin", function(e) {
                    this.selectsActions(e);
                }.bind(this));
                document.addEventListener("focusout", function(e) {
                    this.selectsActions(e);
                }.bind(this));
            }
            selectInit(originalSelect, index) {
                const _this = this;
                let selectItem = document.createElement("div");
                selectItem.classList.add(this.selectClasses.classSelect);
                originalSelect.parentNode.insertBefore(selectItem, originalSelect);
                selectItem.appendChild(originalSelect);
                originalSelect.hidden = true;
                index ? originalSelect.dataset.id = index : null;
                if (this.getSelectPlaceholder(originalSelect)) {
                    originalSelect.dataset.placeholder = this.getSelectPlaceholder(originalSelect).value;
                    if (this.getSelectPlaceholder(originalSelect).label.show) {
                        const selectItemTitle = this.getSelectElement(selectItem, this.selectClasses.classSelectTitle).selectElement;
                        selectItemTitle.insertAdjacentHTML("afterbegin", `<span class="${this.selectClasses.classSelectLabel}">${this.getSelectPlaceholder(originalSelect).label.text ? this.getSelectPlaceholder(originalSelect).label.text : this.getSelectPlaceholder(originalSelect).value}</span>`);
                    }
                }
                selectItem.insertAdjacentHTML("beforeend", `<div class="${this.selectClasses.classSelectBody}"><div hidden class="${this.selectClasses.classSelectOptions}"></div></div>`);
                this.selectBuild(originalSelect);
                originalSelect.dataset.speed = originalSelect.dataset.speed ? originalSelect.dataset.speed : this.config.speed;
                this.config.speed = +originalSelect.dataset.speed;
                originalSelect.addEventListener("change", function(e) {
                    _this.selectChange(e);
                });
            }
            selectBuild(originalSelect) {
                const selectItem = originalSelect.parentElement;
                selectItem.dataset.id = originalSelect.dataset.id;
                originalSelect.dataset.classModif ? selectItem.classList.add(`select_${originalSelect.dataset.classModif}`) : null;
                originalSelect.multiple ? selectItem.classList.add(this.selectClasses.classSelectMultiple) : selectItem.classList.remove(this.selectClasses.classSelectMultiple);
                originalSelect.hasAttribute("data-checkbox") && originalSelect.multiple ? selectItem.classList.add(this.selectClasses.classSelectCheckBox) : selectItem.classList.remove(this.selectClasses.classSelectCheckBox);
                this.setSelectTitleValue(selectItem, originalSelect);
                this.setOptions(selectItem, originalSelect);
                originalSelect.hasAttribute("data-search") ? this.searchActions(selectItem) : null;
                originalSelect.hasAttribute("data-open") ? this.selectAction(selectItem) : null;
                this.selectDisabled(selectItem, originalSelect);
            }
            selectsActions(e) {
                const targetElement = e.target;
                const targetType = e.type;
                if (targetElement.closest(this.getSelectClass(this.selectClasses.classSelect)) || targetElement.closest(this.getSelectClass(this.selectClasses.classSelectTag))) {
                    const selectItem = targetElement.closest(".select") ? targetElement.closest(".select") : document.querySelector(`.${this.selectClasses.classSelect}[data-id="${targetElement.closest(this.getSelectClass(this.selectClasses.classSelectTag)).dataset.selectId}"]`);
                    const originalSelect = this.getSelectElement(selectItem).originalSelect;
                    if (targetType === "click") {
                        if (!originalSelect.disabled) if (targetElement.closest(this.getSelectClass(this.selectClasses.classSelectTag))) {
                            const targetTag = targetElement.closest(this.getSelectClass(this.selectClasses.classSelectTag));
                            const optionItem = document.querySelector(`.${this.selectClasses.classSelect}[data-id="${targetTag.dataset.selectId}"] .select__option[data-value="${targetTag.dataset.value}"]`);
                            this.optionAction(selectItem, originalSelect, optionItem);
                        } else if (targetElement.closest(this.getSelectClass(this.selectClasses.classSelectTitle))) this.selectAction(selectItem); else if (targetElement.closest(this.getSelectClass(this.selectClasses.classSelectOption))) {
                            const optionItem = targetElement.closest(this.getSelectClass(this.selectClasses.classSelectOption));
                            this.optionAction(selectItem, originalSelect, optionItem);
                        }
                    } else if (targetType === "focusin" || targetType === "focusout") {
                        if (targetElement.closest(this.getSelectClass(this.selectClasses.classSelect))) targetType === "focusin" ? selectItem.classList.add(this.selectClasses.classSelectFocus) : selectItem.classList.remove(this.selectClasses.classSelectFocus);
                    } else if (targetType === "keydown" && e.code === "Escape") this.selectsСlose();
                } else this.selectsСlose();
            }
            selectsСlose(selectOneGroup) {
                const selectsGroup = selectOneGroup ? selectOneGroup : document;
                const selectActiveItems = selectsGroup.querySelectorAll(`${this.getSelectClass(this.selectClasses.classSelect)}${this.getSelectClass(this.selectClasses.classSelectOpen)}`);
                if (selectActiveItems.length) selectActiveItems.forEach(selectActiveItem => {
                    this.selectСlose(selectActiveItem);
                });
            }
            selectСlose(selectItem) {
                const originalSelect = this.getSelectElement(selectItem).originalSelect;
                const selectOptions = this.getSelectElement(selectItem, this.selectClasses.classSelectOptions).selectElement;
                if (!selectOptions.classList.contains("_slide")) {
                    selectItem.classList.remove(this.selectClasses.classSelectOpen);
                    _slideUp(selectOptions, originalSelect.dataset.speed);
                    setTimeout(() => {
                        selectItem.style.zIndex = "";
                    }, originalSelect.dataset.speed);
                }
            }
            selectAction(selectItem) {
                const originalSelect = this.getSelectElement(selectItem).originalSelect;
                const selectOptions = this.getSelectElement(selectItem, this.selectClasses.classSelectOptions).selectElement;
                const selectOpenzIndex = originalSelect.dataset.zIndex ? originalSelect.dataset.zIndex : 3;
                this.setOptionsPosition(selectItem);
                if (originalSelect.closest("[data-one-select]")) {
                    const selectOneGroup = originalSelect.closest("[data-one-select]");
                    this.selectsСlose(selectOneGroup);
                }
                setTimeout(() => {
                    if (!selectOptions.classList.contains("_slide")) {
                        selectItem.classList.toggle(this.selectClasses.classSelectOpen);
                        _slideToggle(selectOptions, originalSelect.dataset.speed);
                        if (selectItem.classList.contains(this.selectClasses.classSelectOpen)) selectItem.style.zIndex = selectOpenzIndex; else setTimeout(() => {
                            selectItem.style.zIndex = "";
                        }, originalSelect.dataset.speed);
                    }
                }, 0);
            }
            setSelectTitleValue(selectItem, originalSelect) {
                const selectItemBody = this.getSelectElement(selectItem, this.selectClasses.classSelectBody).selectElement;
                const selectItemTitle = this.getSelectElement(selectItem, this.selectClasses.classSelectTitle).selectElement;
                if (selectItemTitle) selectItemTitle.remove();
                selectItemBody.insertAdjacentHTML("afterbegin", this.getSelectTitleValue(selectItem, originalSelect));
                originalSelect.hasAttribute("data-search") ? this.searchActions(selectItem) : null;
            }
            getSelectTitleValue(selectItem, originalSelect) {
                let selectTitleValue = this.getSelectedOptionsData(originalSelect, 2).html;
                if (originalSelect.multiple && originalSelect.hasAttribute("data-tags")) {
                    selectTitleValue = this.getSelectedOptionsData(originalSelect).elements.map(option => `<span role="button" data-select-id="${selectItem.dataset.id}" data-value="${option.value}" class="_select-tag">${this.getSelectElementContent(option)}</span>`).join("");
                    if (originalSelect.dataset.tags && document.querySelector(originalSelect.dataset.tags)) {
                        document.querySelector(originalSelect.dataset.tags).innerHTML = selectTitleValue;
                        if (originalSelect.hasAttribute("data-search")) selectTitleValue = false;
                    }
                }
                selectTitleValue = selectTitleValue.length ? selectTitleValue : originalSelect.dataset.placeholder ? originalSelect.dataset.placeholder : "";
                let pseudoAttribute = "";
                let pseudoAttributeClass = "";
                if (originalSelect.hasAttribute("data-pseudo-label")) {
                    pseudoAttribute = originalSelect.dataset.pseudoLabel ? ` data-pseudo-label="${originalSelect.dataset.pseudoLabel}"` : ` data-pseudo-label="Заповніть атрибут"`;
                    pseudoAttributeClass = ` ${this.selectClasses.classSelectPseudoLabel}`;
                }
                this.getSelectedOptionsData(originalSelect).values.length ? selectItem.classList.add(this.selectClasses.classSelectActive) : selectItem.classList.remove(this.selectClasses.classSelectActive);
                if (originalSelect.hasAttribute("data-search")) return `<div class="${this.selectClasses.classSelectTitle}"><span${pseudoAttribute} class="${this.selectClasses.classSelectValue}"><input autocomplete="off" type="text" placeholder="${selectTitleValue}" data-placeholder="${selectTitleValue}" class="${this.selectClasses.classSelectInput}"></span></div>`; else {
                    const customClass = this.getSelectedOptionsData(originalSelect).elements.length && this.getSelectedOptionsData(originalSelect).elements[0].dataset.class ? ` ${this.getSelectedOptionsData(originalSelect).elements[0].dataset.class}` : "";
                    return `<button type="button" class="${this.selectClasses.classSelectTitle}"><span${pseudoAttribute} class="${this.selectClasses.classSelectValue}${pseudoAttributeClass}"><span class="${this.selectClasses.classSelectContent}${customClass}">${selectTitleValue}</span></span></button>`;
                }
            }
            getSelectElementContent(selectOption) {
                const selectOptionData = selectOption.dataset.asset ? `${selectOption.dataset.asset}` : "";
                const selectOptionDataHTML = selectOptionData.indexOf("img") >= 0 ? `<img src="${selectOptionData}" alt="">` : selectOptionData;
                let selectOptionContentHTML = ``;
                selectOptionContentHTML += selectOptionData ? `<span class="${this.selectClasses.classSelectRow}">` : "";
                selectOptionContentHTML += selectOptionData ? `<span class="${this.selectClasses.classSelectData}">` : "";
                selectOptionContentHTML += selectOptionData ? selectOptionDataHTML : "";
                selectOptionContentHTML += selectOptionData ? `</span>` : "";
                selectOptionContentHTML += selectOptionData ? `<span class="${this.selectClasses.classSelectText}">` : "";
                selectOptionContentHTML += selectOption.textContent;
                selectOptionContentHTML += selectOptionData ? `</span>` : "";
                selectOptionContentHTML += selectOptionData ? `</span>` : "";
                return selectOptionContentHTML;
            }
            getSelectPlaceholder(originalSelect) {
                const selectPlaceholder = Array.from(originalSelect.options).find(option => !option.value);
                if (selectPlaceholder) return {
                    value: selectPlaceholder.textContent,
                    show: selectPlaceholder.hasAttribute("data-show"),
                    label: {
                        show: selectPlaceholder.hasAttribute("data-label"),
                        text: selectPlaceholder.dataset.label
                    }
                };
            }
            getSelectedOptionsData(originalSelect, type) {
                let selectedOptions = [];
                if (originalSelect.multiple) selectedOptions = Array.from(originalSelect.options).filter(option => option.value).filter(option => option.selected); else selectedOptions.push(originalSelect.options[originalSelect.selectedIndex]);
                return {
                    elements: selectedOptions.map(option => option),
                    values: selectedOptions.filter(option => option.value).map(option => option.value),
                    html: selectedOptions.map(option => this.getSelectElementContent(option))
                };
            }
            getOptions(originalSelect) {
                const selectOptionsScroll = originalSelect.hasAttribute("data-scroll") ? `data-simplebar` : "";
                const customMaxHeightValue = +originalSelect.dataset.scroll ? +originalSelect.dataset.scroll : null;
                let selectOptions = Array.from(originalSelect.options);
                if (selectOptions.length > 0) {
                    let selectOptionsHTML = ``;
                    if (this.getSelectPlaceholder(originalSelect) && !this.getSelectPlaceholder(originalSelect).show || originalSelect.multiple) selectOptions = selectOptions.filter(option => option.value);
                    selectOptionsHTML += `<div ${selectOptionsScroll} ${selectOptionsScroll ? `style="max-height: ${customMaxHeightValue}px"` : ""} class="${this.selectClasses.classSelectOptionsScroll}">`;
                    selectOptions.forEach(selectOption => {
                        selectOptionsHTML += this.getOption(selectOption, originalSelect);
                    });
                    selectOptionsHTML += `</div>`;
                    return selectOptionsHTML;
                }
            }
            getOption(selectOption, originalSelect) {
                const selectOptionSelected = selectOption.selected && originalSelect.multiple ? ` ${this.selectClasses.classSelectOptionSelected}` : "";
                const selectOptionHide = selectOption.selected && !originalSelect.hasAttribute("data-show-selected") && !originalSelect.multiple ? `hidden` : ``;
                const selectOptionClass = selectOption.dataset.class ? ` ${selectOption.dataset.class}` : "";
                const selectOptionLink = selectOption.dataset.href ? selectOption.dataset.href : false;
                const selectOptionLinkTarget = selectOption.hasAttribute("data-href-blank") ? `target="_blank"` : "";
                let selectOptionHTML = ``;
                selectOptionHTML += selectOptionLink ? `<a ${selectOptionLinkTarget} ${selectOptionHide} href="${selectOptionLink}" data-value="${selectOption.value}" class="${this.selectClasses.classSelectOption}${selectOptionClass}${selectOptionSelected}">` : `<button ${selectOptionHide} class="${this.selectClasses.classSelectOption}${selectOptionClass}${selectOptionSelected}" data-value="${selectOption.value}" type="button">`;
                selectOptionHTML += this.getSelectElementContent(selectOption);
                selectOptionHTML += selectOptionLink ? `</a>` : `</button>`;
                return selectOptionHTML;
            }
            setOptions(selectItem, originalSelect) {
                const selectItemOptions = this.getSelectElement(selectItem, this.selectClasses.classSelectOptions).selectElement;
                selectItemOptions.innerHTML = this.getOptions(originalSelect);
            }
            setOptionsPosition(selectItem) {
                const originalSelect = this.getSelectElement(selectItem).originalSelect;
                const selectOptions = this.getSelectElement(selectItem, this.selectClasses.classSelectOptions).selectElement;
                const selectItemScroll = this.getSelectElement(selectItem, this.selectClasses.classSelectOptionsScroll).selectElement;
                const customMaxHeightValue = +originalSelect.dataset.scroll ? `${+originalSelect.dataset.scroll}px` : ``;
                const selectOptionsPosMargin = +originalSelect.dataset.optionsMargin ? +originalSelect.dataset.optionsMargin : 10;
                if (!selectItem.classList.contains(this.selectClasses.classSelectOpen)) {
                    selectOptions.hidden = false;
                    const selectItemScrollHeight = selectItemScroll.offsetHeight ? selectItemScroll.offsetHeight : parseInt(window.getComputedStyle(selectItemScroll).getPropertyValue("max-height"));
                    const selectOptionsHeight = selectOptions.offsetHeight > selectItemScrollHeight ? selectOptions.offsetHeight : selectItemScrollHeight + selectOptions.offsetHeight;
                    const selectOptionsScrollHeight = selectOptionsHeight - selectItemScrollHeight;
                    selectOptions.hidden = true;
                    const selectItemHeight = selectItem.offsetHeight;
                    const selectItemPos = selectItem.getBoundingClientRect().top;
                    const selectItemTotal = selectItemPos + selectOptionsHeight + selectItemHeight + selectOptionsScrollHeight;
                    const selectItemResult = window.innerHeight - (selectItemTotal + selectOptionsPosMargin);
                    if (selectItemResult < 0) {
                        const newMaxHeightValue = selectOptionsHeight + selectItemResult;
                        if (newMaxHeightValue < 100) {
                            selectItem.classList.add("select--show-top");
                            selectItemScroll.style.maxHeight = selectItemPos < selectOptionsHeight ? `${selectItemPos - (selectOptionsHeight - selectItemPos)}px` : customMaxHeightValue;
                        } else {
                            selectItem.classList.remove("select--show-top");
                            selectItemScroll.style.maxHeight = `${newMaxHeightValue}px`;
                        }
                    }
                } else setTimeout(() => {
                    selectItem.classList.remove("select--show-top");
                    selectItemScroll.style.maxHeight = customMaxHeightValue;
                }, +originalSelect.dataset.speed);
            }
            optionAction(selectItem, originalSelect, optionItem) {
                const selectOptions = selectItem.querySelector(`${this.getSelectClass(this.selectClasses.classSelectOptions)}`);
                if (!selectOptions.classList.contains("_slide")) {
                    if (originalSelect.multiple) {
                        optionItem.classList.toggle(this.selectClasses.classSelectOptionSelected);
                        const originalSelectSelectedItems = this.getSelectedOptionsData(originalSelect).elements;
                        originalSelectSelectedItems.forEach(originalSelectSelectedItem => {
                            originalSelectSelectedItem.removeAttribute("selected");
                        });
                        const selectSelectedItems = selectItem.querySelectorAll(this.getSelectClass(this.selectClasses.classSelectOptionSelected));
                        selectSelectedItems.forEach(selectSelectedItems => {
                            originalSelect.querySelector(`option[value = "${selectSelectedItems.dataset.value}"]`).setAttribute("selected", "selected");
                        });
                    } else {
                        if (!originalSelect.hasAttribute("data-show-selected")) setTimeout(() => {
                            if (selectItem.querySelector(`${this.getSelectClass(this.selectClasses.classSelectOption)}[hidden]`)) selectItem.querySelector(`${this.getSelectClass(this.selectClasses.classSelectOption)}[hidden]`).hidden = false;
                            optionItem.hidden = true;
                        }, this.config.speed);
                        originalSelect.value = optionItem.hasAttribute("data-value") ? optionItem.dataset.value : optionItem.textContent;
                        this.selectAction(selectItem);
                    }
                    this.setSelectTitleValue(selectItem, originalSelect);
                    this.setSelectChange(originalSelect);
                }
            }
            selectChange(e) {
                const originalSelect = e.target;
                this.selectBuild(originalSelect);
                this.setSelectChange(originalSelect);
            }
            setSelectChange(originalSelect) {
                if (originalSelect.hasAttribute("data-validate")) formValidate.validateInput(originalSelect);
                if (originalSelect.hasAttribute("data-submit") && originalSelect.value) {
                    let tempButton = document.createElement("button");
                    tempButton.type = "submit";
                    originalSelect.closest("form").append(tempButton);
                    tempButton.click();
                    tempButton.remove();
                }
                const selectItem = originalSelect.parentElement;
                this.selectCallback(selectItem, originalSelect);
            }
            selectDisabled(selectItem, originalSelect) {
                if (originalSelect.disabled) {
                    selectItem.classList.add(this.selectClasses.classSelectDisabled);
                    this.getSelectElement(selectItem, this.selectClasses.classSelectTitle).selectElement.disabled = true;
                } else {
                    selectItem.classList.remove(this.selectClasses.classSelectDisabled);
                    this.getSelectElement(selectItem, this.selectClasses.classSelectTitle).selectElement.disabled = false;
                }
            }
            searchActions(selectItem) {
                this.getSelectElement(selectItem).originalSelect;
                const selectInput = this.getSelectElement(selectItem, this.selectClasses.classSelectInput).selectElement;
                const selectOptions = this.getSelectElement(selectItem, this.selectClasses.classSelectOptions).selectElement;
                const selectOptionsItems = selectOptions.querySelectorAll(`.${this.selectClasses.classSelectOption} `);
                const _this = this;
                selectInput.addEventListener("input", function() {
                    selectOptionsItems.forEach(selectOptionsItem => {
                        if (selectOptionsItem.textContent.toUpperCase().includes(selectInput.value.toUpperCase())) selectOptionsItem.hidden = false; else selectOptionsItem.hidden = true;
                    });
                    selectOptions.hidden === true ? _this.selectAction(selectItem) : null;
                });
            }
            selectCallback(selectItem, originalSelect) {
                document.dispatchEvent(new CustomEvent("selectCallback", {
                    detail: {
                        select: originalSelect
                    }
                }));
            }
            setLogging(message) {
                this.config.logging ? FLS(`[select]: ${message} `) : null;
            }
        }
        flsModules.select = new SelectConstructor({});
        __webpack_require__(958);
        const inputMasks = document.querySelectorAll("input");
        if (inputMasks.length) flsModules.inputmask = Inputmask().mask(inputMasks);
        let addWindowScrollEvent = false;
        function pageNavigation() {
            document.addEventListener("click", pageNavigationAction);
            document.addEventListener("watcherCallback", pageNavigationAction);
            function pageNavigationAction(e) {
                if (e.type === "click") {
                    const targetElement = e.target;
                    if (targetElement.closest("[data-goto]")) {
                        const gotoLink = targetElement.closest("[data-goto]");
                        const gotoLinkSelector = gotoLink.dataset.goto ? gotoLink.dataset.goto : "";
                        const noHeader = gotoLink.hasAttribute("data-goto-header") ? true : false;
                        const gotoSpeed = gotoLink.dataset.gotoSpeed ? gotoLink.dataset.gotoSpeed : 500;
                        const offsetTop = gotoLink.dataset.gotoTop ? parseInt(gotoLink.dataset.gotoTop) : 0;
                        if (flsModules.fullpage) {
                            const fullpageSection = document.querySelector(`${gotoLinkSelector}`).closest("[data-fp-section]");
                            const fullpageSectionId = fullpageSection ? +fullpageSection.dataset.fpId : null;
                            if (fullpageSectionId !== null) {
                                flsModules.fullpage.switchingSection(fullpageSectionId);
                                document.documentElement.classList.contains("menu-open") ? menuClose() : null;
                            }
                        } else gotoBlock(gotoLinkSelector, noHeader, gotoSpeed, offsetTop);
                        e.preventDefault();
                    }
                } else if (e.type === "watcherCallback" && e.detail) {
                    const entry = e.detail.entry;
                    const targetElement = entry.target;
                    if (targetElement.dataset.watch === "navigator") {
                        document.querySelector(`[data-goto]._navigator-active`);
                        let navigatorCurrentItem;
                        if (targetElement.id && document.querySelector(`[data-goto="#${targetElement.id}"]`)) navigatorCurrentItem = document.querySelector(`[data-goto="#${targetElement.id}"]`); else if (targetElement.classList.length) for (let index = 0; index < targetElement.classList.length; index++) {
                            const element = targetElement.classList[index];
                            if (document.querySelector(`[data-goto=".${element}"]`)) {
                                navigatorCurrentItem = document.querySelector(`[data-goto=".${element}"]`);
                                break;
                            }
                        }
                        if (entry.isIntersecting) navigatorCurrentItem ? navigatorCurrentItem.classList.add("_navigator-active") : null; else navigatorCurrentItem ? navigatorCurrentItem.classList.remove("_navigator-active") : null;
                    }
                }
            }
            if (getHash()) {
                let goToHash;
                if (document.querySelector(`#${getHash()}`)) goToHash = `#${getHash()}`; else if (document.querySelector(`.${getHash()}`)) goToHash = `.${getHash()}`;
                goToHash ? gotoBlock(goToHash, true, 500, 20) : null;
            }
        }
        setTimeout(() => {
            if (addWindowScrollEvent) {
                let windowScroll = new Event("windowScroll");
                window.addEventListener("scroll", function(e) {
                    document.dispatchEvent(windowScroll);
                });
            }
        }, 0);
        class DynamicAdapt {
            constructor(type) {
                this.type = type;
            }
            init() {
                this.оbjects = [];
                this.daClassname = "_dynamic_adapt_";
                this.nodes = [ ...document.querySelectorAll("[data-da]") ];
                this.nodes.forEach(node => {
                    const data = node.dataset.da.trim();
                    const dataArray = data.split(",");
                    const оbject = {};
                    оbject.element = node;
                    оbject.parent = node.parentNode;
                    оbject.destination = document.querySelector(`${dataArray[0].trim()}`);
                    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : "767.98";
                    оbject.place = dataArray[2] ? dataArray[2].trim() : "last";
                    оbject.index = this.indexInParent(оbject.parent, оbject.element);
                    this.оbjects.push(оbject);
                });
                this.arraySort(this.оbjects);
                this.mediaQueries = this.оbjects.map(({breakpoint}) => `(${this.type}-width: ${breakpoint / 16}em),${breakpoint}`).filter((item, index, self) => self.indexOf(item) === index);
                this.mediaQueries.forEach(media => {
                    const mediaSplit = media.split(",");
                    const matchMedia = window.matchMedia(mediaSplit[0]);
                    const mediaBreakpoint = mediaSplit[1];
                    const оbjectsFilter = this.оbjects.filter(({breakpoint}) => breakpoint === mediaBreakpoint);
                    matchMedia.addEventListener("change", () => {
                        this.mediaHandler(matchMedia, оbjectsFilter);
                    });
                    this.mediaHandler(matchMedia, оbjectsFilter);
                });
            }
            mediaHandler(matchMedia, оbjects) {
                if (matchMedia.matches) оbjects.forEach(оbject => {
                    this.moveTo(оbject.place, оbject.element, оbject.destination);
                }); else оbjects.forEach(({parent, element, index}) => {
                    if (element.classList.contains(this.daClassname)) this.moveBack(parent, element, index);
                });
            }
            moveTo(place, element, destination) {
                element.classList.add(this.daClassname);
                if (place === "last" || place >= destination.children.length) {
                    destination.append(element);
                    return;
                }
                if (place === "first") {
                    destination.prepend(element);
                    return;
                }
                destination.children[place].before(element);
            }
            moveBack(parent, element, index) {
                element.classList.remove(this.daClassname);
                if (parent.children[index] !== void 0) parent.children[index].before(element); else parent.append(element);
            }
            indexInParent(parent, element) {
                return [ ...parent.children ].indexOf(element);
            }
            arraySort(arr) {
                if (this.type === "min") arr.sort((a, b) => {
                    if (a.breakpoint === b.breakpoint) {
                        if (a.place === b.place) return 0;
                        if (a.place === "first" || b.place === "last") return -1;
                        if (a.place === "last" || b.place === "first") return 1;
                        return 0;
                    }
                    return a.breakpoint - b.breakpoint;
                }); else {
                    arr.sort((a, b) => {
                        if (a.breakpoint === b.breakpoint) {
                            if (a.place === b.place) return 0;
                            if (a.place === "first" || b.place === "last") return 1;
                            if (a.place === "last" || b.place === "first") return -1;
                            return 0;
                        }
                        return b.breakpoint - a.breakpoint;
                    });
                    return;
                }
            }
        }
        const da = new DynamicAdapt("max");
        da.init();
        window["FLS"] = true;
        createIcons({
            icons: iconsAndAliases_namespaceObject
        });
        menuInit();
        formSubmit();
        pageNavigation();
    })();
})();